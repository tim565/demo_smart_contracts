{
	"id": "18ef021dd394e8881e691114c0289c79",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"demo_erc721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol\";\n\ncontract FancyNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n    uint256 public royaltyPercentage = 500;  // 5% royalties\n    mapping(uint256 => uint256) public tokenXP;\n\n    constructor(address initialOwner) ERC721(\"FancyNFT\", \"FNT\") Ownable(initialOwner) {}\n\n    function safeMint(address to, string memory uri, uint256 categoryId, uint256 rarityLevel) public onlyOwner {\n        uint256 tokenId = generateTokenId(categoryId, rarityLevel);\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    // The following functions are overrides required by Solidity.\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    // The following functions provide additional specifications and features for the NFT\n    function royaltyInfo(uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount) {\n        return (owner(), (salePrice * royaltyPercentage) / 10000);\n    }\n    \n    function addXP(uint256 tokenId, uint256 xp) public onlyOwner {\n        tokenXP[tokenId] += xp;\n    }\n\n    /*\n    * Allow the owner (or other authorized roles) to mint multiple NFTs at once in a batch, \n    * which could help in scenarios like a collection launch.\n    */\n    function batchMint(address to, uint256[] memory tokenIds, string[] memory uris) public onlyOwner {\n        require(tokenIds.length == uris.length, \"Array length mismatch\");\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _safeMint(to, tokenIds[i]);\n            _setTokenURI(tokenIds[i], uris[i]);\n        }\n    }\n\n    /*\n    * Rather than manually assigning token IDs, in this NFT the IDs are generated uniquely by inserting the categoryId, rarityLevel and the signature. \n    */\n    function generateTokenId(uint256 categoryId, uint256 rarityLevel) internal pure returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(categoryId, rarityLevel, msg.sig)));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.0.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 371,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 375,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 379,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 383,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 371,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 375,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 379,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 383,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 371,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 375,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 379,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 383,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1537,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122003eb43cf6fac637ef031d0896ff480403c31b316646c4c222b36aef16378df6f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122003eb43cf6fac637ef031d0896ff480403c31b316646c4c222b36aef16378df6f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xEB NUMBER 0xCF PUSH16 0xAC637EF031D0896FF480403C31B31664 PUSH13 0x4C222B36AEF16378DF6F64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122003eb43cf6fac637ef031d0896ff480403c31b316646c4c222b36aef16378df6f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xEB NUMBER 0xCF PUSH16 0xAC637EF031D0896FF480403C31B31664 PUSH13 0x4C222B36AEF16378DF6F64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003eb43cf6fac637ef031d0896ff480403c31b316646c4c222b36aef16378df6f64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"demo_erc721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204dfed89c294590fbfb6f6a61559a250e820b33d140640bfe5306da4c3aa3aadb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204dfed89c294590fbfb6f6a61559a250e820b33d140640bfe5306da4c3aa3aadb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D INVALID 0xD8 SWAP13 0x29 GASLIMIT SWAP1 0xFB 0xFB PUSH16 0x6A61559A250E820B33D140640BFE5306 0xDA 0x4C GASPRICE LOG3 0xAA 0xDB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204dfed89c294590fbfb6f6a61559a250e820b33d140640bfe5306da4c3aa3aadb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D INVALID 0xD8 SWAP13 0x29 GASLIMIT SWAP1 0xFB 0xFB PUSH16 0x6A61559A250E820B33D140640BFE5306 0xDA 0x4C GASPRICE LOG3 0xAA 0xDB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204dfed89c294590fbfb6f6a61559a250e820b33d140640bfe5306da4c3aa3aadb64736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"demo_erc721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200ce1ba35d11ccbcbcaca5193798642d29838da2398c8328d53083c690c6491e564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200ce1ba35d11ccbcbcaca5193798642d29838da2398c8328d53083c690c6491e564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE1 0xBA CALLDATALOAD 0xD1 SHR 0xCB 0xCB 0xCA 0xCA MLOAD SWAP4 PUSH26 0x8642D29838DA2398C8328D53083C690C6491E564736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200ce1ba35d11ccbcbcaca5193798642d29838da2398c8328d53083c690c6491e564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE1 0xBA CALLDATALOAD 0xD1 SHR 0xCB 0xCB 0xCA 0xCA MLOAD SWAP4 PUSH26 0x8642D29838DA2398C8328D53083C690C6491E564736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ce1ba35d11ccbcbcaca5193798642d29838da2398c8328d53083c690c6491e564736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"demo_erc721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"demo_erc721.sol": {
				"FancyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xp",
									"type": "uint256"
								}
							],
							"name": "addXP",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "uris",
									"type": "string[]"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "categoryId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rarityLevel",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenXP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"demo_erc721.sol\":414:2599  contract FancyNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"demo_erc721.sol\":526:529  500 */\n  0x01f4\n    /* \"demo_erc721.sol\":491:529  uint256 public royaltyPercentage = 500 */\n  0x08\n  sstore\n    /* \"demo_erc721.sol\":601:685  constructor(address initialOwner) ERC721(\"FancyNFT\", \"FNT\") Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"demo_erc721.sol\":669:681  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x46616e63794e4654000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x464e540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"demo_erc721.sol\":601:685  constructor(address initialOwner) ERC721(\"FancyNFT\", \"FNT\") Ownable(initialOwner) {} */\n  pop\n    /* \"demo_erc721.sol\":414:2599  contract FancyNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"demo_erc721.sol\":414:2599  contract FancyNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"demo_erc721.sol\":414:2599  contract FancyNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcef6d368\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7aae3ccb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8a71bb2d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9caea80a\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x2923ce11\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2923ce11\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5146ea0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"demo_erc721.sol\":1173:1342  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"demo_erc721.sol\":691:941  function safeMint(address to, string memory uri, uint256 categoryId, uint256 rarityLevel) public onlyOwner {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"demo_erc721.sol\":1626:1726  function addXP(uint256 tokenId, uint256 xp) public onlyOwner {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"demo_erc721.sol\":552:594  mapping(uint256 => uint256) public tokenXP */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo_erc721.sol\":491:529  uint256 public royaltyPercentage = 500 */\n    tag_16:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo_erc721.sol\":1901:2233  function batchMint(address to, uint256[] memory tokenIds, string[] memory uris) public onlyOwner {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"demo_erc721.sol\":1014:1167  function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo_erc721.sol\":1438:1616  function royaltyInfo(uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"demo_erc721.sol\":1173:1342  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {... */\n    tag_32:\n        /* \"demo_erc721.sol\":1276:1280  bool */\n      0x00\n        /* \"demo_erc721.sol\":1299:1335  super.supportsInterface(interfaceId) */\n      tag_122\n        /* \"demo_erc721.sol\":1323:1334  interfaceId */\n      dup3\n        /* \"demo_erc721.sol\":1299:1322  super.supportsInterface */\n      tag_123\n        /* \"demo_erc721.sol\":1299:1335  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_122:\n        /* \"demo_erc721.sol\":1292:1335  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"demo_erc721.sol\":1173:1342  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_126\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_132\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_132:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_134\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_135\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_137\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_140\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_144\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_146\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"demo_erc721.sol\":691:941  function safeMint(address to, string memory uri, uint256 categoryId, uint256 rarityLevel) public onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"demo_erc721.sol\":808:823  uint256 tokenId */\n      0x00\n        /* \"demo_erc721.sol\":826:866  generateTokenId(categoryId, rarityLevel) */\n      tag_154\n        /* \"demo_erc721.sol\":842:852  categoryId */\n      dup4\n        /* \"demo_erc721.sol\":854:865  rarityLevel */\n      dup4\n        /* \"demo_erc721.sol\":826:841  generateTokenId */\n      tag_155\n        /* \"demo_erc721.sol\":826:866  generateTokenId(categoryId, rarityLevel) */\n      jump\t// in\n    tag_154:\n        /* \"demo_erc721.sol\":808:866  uint256 tokenId = generateTokenId(categoryId, rarityLevel) */\n      swap1\n      pop\n        /* \"demo_erc721.sol\":876:898  _safeMint(to, tokenId) */\n      tag_156\n        /* \"demo_erc721.sol\":886:888  to */\n      dup6\n        /* \"demo_erc721.sol\":890:897  tokenId */\n      dup3\n        /* \"demo_erc721.sol\":876:885  _safeMint */\n      tag_157\n        /* \"demo_erc721.sol\":876:898  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"demo_erc721.sol\":908:934  _setTokenURI(tokenId, uri) */\n      tag_158\n        /* \"demo_erc721.sol\":921:928  tokenId */\n      dup2\n        /* \"demo_erc721.sol\":930:933  uri */\n      dup6\n        /* \"demo_erc721.sol\":908:920  _setTokenURI */\n      tag_159\n        /* \"demo_erc721.sol\":908:934  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_158:\n        /* \"demo_erc721.sol\":798:941  {... */\n      pop\n        /* \"demo_erc721.sol\":691:941  function safeMint(address to, string memory uri, uint256 categoryId, uint256 rarityLevel) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_161\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_103\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      tag_163\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":842:843  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":846:853  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":855:865  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":826:833  _update */\n      tag_146\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_163:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"demo_erc721.sol\":1626:1726  function addXP(uint256 tokenId, uint256 xp) public onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"demo_erc721.sol\":1717:1719  xp */\n      dup1\n        /* \"demo_erc721.sol\":1697:1704  tokenXP */\n      0x09\n        /* \"demo_erc721.sol\":1697:1713  tokenXP[tokenId] */\n      0x00\n        /* \"demo_erc721.sol\":1705:1712  tokenId */\n      dup5\n        /* \"demo_erc721.sol\":1697:1713  tokenXP[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"demo_erc721.sol\":1697:1719  tokenXP[tokenId] += xp */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"demo_erc721.sol\":1626:1726  function addXP(uint256 tokenId, uint256 xp) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"demo_erc721.sol\":552:594  mapping(uint256 => uint256) public tokenXP */\n    tag_81:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"demo_erc721.sol\":491:529  uint256 public royaltyPercentage = 500 */\n    tag_84:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_126\n      jump\t// in\n    tag_182:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_126\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"demo_erc721.sol\":1901:2233  function batchMint(address to, uint256[] memory tokenIds, string[] memory uris) public onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"demo_erc721.sol\":2035:2039  uris */\n      dup1\n        /* \"demo_erc721.sol\":2035:2046  uris.length */\n      mload\n        /* \"demo_erc721.sol\":2016:2024  tokenIds */\n      dup3\n        /* \"demo_erc721.sol\":2016:2031  tokenIds.length */\n      mload\n        /* \"demo_erc721.sol\":2016:2046  tokenIds.length == uris.length */\n      eq\n        /* \"demo_erc721.sol\":2008:2072  require(tokenIds.length == uris.length, \"Array length mismatch\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"demo_erc721.sol\":2087:2096  uint256 i */\n      0x00\n        /* \"demo_erc721.sol\":2082:2227  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n    tag_193:\n        /* \"demo_erc721.sol\":2106:2114  tokenIds */\n      dup3\n        /* \"demo_erc721.sol\":2106:2121  tokenIds.length */\n      mload\n        /* \"demo_erc721.sol\":2102:2103  i */\n      dup2\n        /* \"demo_erc721.sol\":2102:2121  i < tokenIds.length */\n      lt\n        /* \"demo_erc721.sol\":2082:2227  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"demo_erc721.sol\":2142:2168  _safeMint(to, tokenIds[i]) */\n      tag_196\n        /* \"demo_erc721.sol\":2152:2154  to */\n      dup5\n        /* \"demo_erc721.sol\":2156:2164  tokenIds */\n      dup5\n        /* \"demo_erc721.sol\":2165:2166  i */\n      dup4\n        /* \"demo_erc721.sol\":2156:2167  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n    tag_197:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"demo_erc721.sol\":2142:2151  _safeMint */\n      tag_157\n        /* \"demo_erc721.sol\":2142:2168  _safeMint(to, tokenIds[i]) */\n      jump\t// in\n    tag_196:\n        /* \"demo_erc721.sol\":2182:2216  _setTokenURI(tokenIds[i], uris[i]) */\n      tag_200\n        /* \"demo_erc721.sol\":2195:2203  tokenIds */\n      dup4\n        /* \"demo_erc721.sol\":2204:2205  i */\n      dup3\n        /* \"demo_erc721.sol\":2195:2206  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_202\n      tag_199\n      jump\t// in\n    tag_202:\n    tag_201:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"demo_erc721.sol\":2208:2212  uris */\n      dup4\n        /* \"demo_erc721.sol\":2213:2214  i */\n      dup4\n        /* \"demo_erc721.sol\":2208:2215  uris[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_199\n      jump\t// in\n    tag_204:\n    tag_203:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"demo_erc721.sol\":2182:2194  _setTokenURI */\n      tag_159\n        /* \"demo_erc721.sol\":2182:2216  _setTokenURI(tokenIds[i], uris[i]) */\n      jump\t// in\n    tag_200:\n        /* \"demo_erc721.sol\":2123:2126  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"demo_erc721.sol\":2082:2227  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_193)\n    tag_194:\n      pop\n        /* \"demo_erc721.sol\":1901:2233  function batchMint(address to, uint256[] memory tokenIds, string[] memory uris) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_206\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_208\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_210\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_52\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_211\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_212\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"demo_erc721.sol\":1014:1167  function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {... */\n    tag_106:\n        /* \"demo_erc721.sol\":1105:1118  string memory */\n      0x60\n        /* \"demo_erc721.sol\":1137:1160  super.tokenURI(tokenId) */\n      tag_214\n        /* \"demo_erc721.sol\":1152:1159  tokenId */\n      dup3\n        /* \"demo_erc721.sol\":1137:1151  super.tokenURI */\n      tag_215\n        /* \"demo_erc721.sol\":1137:1160  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_214:\n        /* \"demo_erc721.sol\":1130:1160  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"demo_erc721.sol\":1014:1167  function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"demo_erc721.sol\":1438:1616  function royaltyInfo(uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount) {... */\n    tag_110:\n        /* \"demo_erc721.sol\":1501:1517  address receiver */\n      0x00\n        /* \"demo_erc721.sol\":1519:1540  uint256 royaltyAmount */\n      dup1\n        /* \"demo_erc721.sol\":1560:1567  owner() */\n      tag_217\n        /* \"demo_erc721.sol\":1560:1565  owner */\n      tag_87\n        /* \"demo_erc721.sol\":1560:1567  owner() */\n      jump\t// in\n    tag_217:\n        /* \"demo_erc721.sol\":1603:1608  10000 */\n      0x2710\n        /* \"demo_erc721.sol\":1582:1599  royaltyPercentage */\n      sload(0x08)\n        /* \"demo_erc721.sol\":1570:1579  salePrice */\n      dup6\n        /* \"demo_erc721.sol\":1570:1599  salePrice * royaltyPercentage */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"demo_erc721.sol\":1569:1608  (salePrice * royaltyPercentage) / 10000 */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"demo_erc721.sol\":1552:1609  return (owner(), (salePrice * royaltyPercentage) / 10000) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"demo_erc721.sol\":1438:1616  function royaltyInfo(uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_228\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_231\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_232\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_230:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_234\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_235\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_241\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_242\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_244\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_235\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_246\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_247\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_249\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_242\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1862  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_255\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"demo_erc721.sol\":2405:2597  function generateTokenId(uint256 categoryId, uint256 rarityLevel) internal pure returns (uint256) {... */\n    tag_155:\n        /* \"demo_erc721.sol\":2494:2501  uint256 */\n      0x00\n        /* \"demo_erc721.sol\":2555:2565  categoryId */\n      dup3\n        /* \"demo_erc721.sol\":2567:2578  rarityLevel */\n      dup3\n        /* \"demo_erc721.sol\":2580:2587  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x00))\n        /* \"demo_erc721.sol\":2538:2588  abi.encodePacked(categoryId, rarityLevel, msg.sig) */\n      add(0x20, mload(0x40))\n      tag_258\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"demo_erc721.sol\":2528:2589  keccak256(abi.encodePacked(categoryId, rarityLevel, msg.sig)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"demo_erc721.sol\":2520:2590  uint256(keccak256(abi.encodePacked(categoryId, rarityLevel, msg.sig))) */\n      0x00\n      shr\n        /* \"demo_erc721.sol\":2513:2590  return uint256(keccak256(abi.encodePacked(categoryId, rarityLevel, msg.sig))) */\n      swap1\n      pop\n        /* \"demo_erc721.sol\":2405:2597  function generateTokenId(uint256 categoryId, uint256 rarityLevel) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_261\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_262\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_266\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_212:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      0x01\n    tag_277:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_280\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_285\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_284)\n    tag_285:\n      0x60\n      swap2\n      pop\n    tag_284:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_293\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_293:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_294\n      swap1\n      tag_126\n      jump\t// in\n    tag_294:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_295\n      swap1\n      tag_126\n      jump\t// in\n    tag_295:\n      dup1\n      iszero\n      tag_296\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_297\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_296)\n    tag_297:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_298:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_298\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_299\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_300\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_292)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_292)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_305\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_306\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_292:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_308\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_308:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_310\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_311\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_309:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_314\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_314:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_316\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_317\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_317:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_319\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_318:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_324\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_325\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_332\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_333\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_334\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_212\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_337\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_337:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_338\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_300\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_339\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_340)\n    tag_339:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_341\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_342\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_343\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_340:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_347\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_348\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_347:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_349\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_350\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_135\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_349:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_346:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_333:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_354\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_146\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_358\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:769  Math.log10 */\n      tag_359\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_360\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_361:\n    tag_360:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_363\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_363:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_366\n      jumpi\n      tag_367\n      tag_368\n      jump\t// in\n    tag_367:\n    tag_366:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_364\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_372\n      jumpi\n      tag_373\n      tag_368\n      jump\t// in\n    tag_373:\n    tag_372:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_375\n      jumpi\n      tag_376\n      tag_368\n      jump\t// in\n    tag_376:\n    tag_375:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_378\n      jumpi\n      tag_379\n      tag_368\n      jump\t// in\n    tag_379:\n    tag_378:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_381\n      jumpi\n      tag_382\n      tag_368\n      jump\t// in\n    tag_382:\n    tag_381:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_384\n      jumpi\n      tag_385\n      tag_368\n      jump\t// in\n    tag_385:\n    tag_384:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_387\n      jumpi\n      tag_388\n      tag_368\n      jump\t// in\n    tag_388:\n    tag_387:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_390:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_391:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_392:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_393:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_394:\n        /* \"#utility.yul\":561:584   */\n      tag_467\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_393\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_468:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_395:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_470\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_394\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_473\n      tag_391\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":833:952   */\n    tag_472:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_474\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_395\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_396:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_397:\n        /* \"#utility.yul\":1268:1289   */\n      tag_477\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_396\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_479\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_397\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_398:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_399:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_400:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_401:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_402:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_485\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_398\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2222:2293   */\n      tag_486\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_399\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_487\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_400\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2392:2421   */\n      tag_488\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_401\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_38:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_490\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_402\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_403:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_404:\n        /* \"#utility.yul\":2909:2933   */\n      tag_493\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_403\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_494:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_405:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_496\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_404\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_41:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_499\n      tag_391\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3185:3304   */\n    tag_498:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_500\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_405\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_406:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_407:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_503\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_406\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_408:\n        /* \"#utility.yul\":3765:3789   */\n      tag_505\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_407\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_44:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_507\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_408\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_409:\n        /* \"#utility.yul\":4103:4127   */\n      tag_509\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_407\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_510:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_410:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_512\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_409\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_47:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_515\n      tag_391\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":4396:4515   */\n    tag_514:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_516\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_410\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_517\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_405\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_51:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_520\n      tag_391\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":4893:5012   */\n    tag_519:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_521\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_410\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_522\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_410\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_523\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_405\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_411:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_412:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_362:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_413:\n        /* \"#utility.yul\":5923:5950   */\n      tag_528\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_401\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_530\n      tag_362\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":5996:6084   */\n    tag_529:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_414:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_532\n      tag_390\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_533\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_413\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_415:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_536\n      tag_362\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6400:6456   */\n    tag_535:\n        /* \"#utility.yul\":6474:6503   */\n      tag_537\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_401\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_416:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_417:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_540\n        /* \"#utility.yul\":6849:6898   */\n      tag_541\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_415\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":6833:6899   */\n      tag_414\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_543\n      tag_412\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":6974:7086   */\n    tag_542:\n        /* \"#utility.yul\":7095:7149   */\n      tag_544\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_416\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_418:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_547\n      tag_411\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7247:7369   */\n    tag_546:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_548\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_417\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8466   */\n    tag_55:\n        /* \"#utility.yul\":7617:7623   */\n      0x00\n        /* \"#utility.yul\":7625:7631   */\n      dup1\n        /* \"#utility.yul\":7633:7639   */\n      0x00\n        /* \"#utility.yul\":7641:7647   */\n      dup1\n        /* \"#utility.yul\":7690:7693   */\n      0x80\n        /* \"#utility.yul\":7678:7687   */\n      dup6\n        /* \"#utility.yul\":7669:7676   */\n      dup8\n        /* \"#utility.yul\":7665:7688   */\n      sub\n        /* \"#utility.yul\":7661:7694   */\n      slt\n        /* \"#utility.yul\":7658:7778   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":7697:7776   */\n      tag_551\n      tag_391\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7658:7778   */\n    tag_550:\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7842:7895   */\n      tag_552\n        /* \"#utility.yul\":7887:7894   */\n      dup8\n        /* \"#utility.yul\":7878:7884   */\n      dup3\n        /* \"#utility.yul\":7867:7876   */\n      dup9\n        /* \"#utility.yul\":7863:7885   */\n      add\n        /* \"#utility.yul\":7842:7895   */\n      tag_410\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":7832:7895   */\n      swap5\n      pop\n        /* \"#utility.yul\":7788:7905   */\n      pop\n        /* \"#utility.yul\":7972:7974   */\n      0x20\n        /* \"#utility.yul\":7961:7970   */\n      dup6\n        /* \"#utility.yul\":7957:7975   */\n      add\n        /* \"#utility.yul\":7944:7976   */\n      calldataload\n        /* \"#utility.yul\":8003:8021   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7995:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8022   */\n      gt\n        /* \"#utility.yul\":7989:8106   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":8025:8104   */\n      tag_554\n      tag_392\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":7989:8106   */\n    tag_553:\n        /* \"#utility.yul\":8130:8193   */\n      tag_555\n        /* \"#utility.yul\":8185:8192   */\n      dup8\n        /* \"#utility.yul\":8176:8182   */\n      dup3\n        /* \"#utility.yul\":8165:8174   */\n      dup9\n        /* \"#utility.yul\":8161:8183   */\n      add\n        /* \"#utility.yul\":8130:8193   */\n      tag_418\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8120:8193   */\n      swap4\n      pop\n        /* \"#utility.yul\":7915:8203   */\n      pop\n        /* \"#utility.yul\":8242:8244   */\n      0x40\n        /* \"#utility.yul\":8268:8321   */\n      tag_556\n        /* \"#utility.yul\":8313:8320   */\n      dup8\n        /* \"#utility.yul\":8304:8310   */\n      dup3\n        /* \"#utility.yul\":8293:8302   */\n      dup9\n        /* \"#utility.yul\":8289:8311   */\n      add\n        /* \"#utility.yul\":8268:8321   */\n      tag_405\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":8258:8321   */\n      swap3\n      pop\n        /* \"#utility.yul\":8213:8331   */\n      pop\n        /* \"#utility.yul\":8370:8372   */\n      0x60\n        /* \"#utility.yul\":8396:8449   */\n      tag_557\n        /* \"#utility.yul\":8441:8448   */\n      dup8\n        /* \"#utility.yul\":8432:8438   */\n      dup3\n        /* \"#utility.yul\":8421:8430   */\n      dup9\n        /* \"#utility.yul\":8417:8439   */\n      add\n        /* \"#utility.yul\":8396:8449   */\n      tag_405\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8386:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8341:8459   */\n      pop\n        /* \"#utility.yul\":7521:8466   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8472:8946   */\n    tag_65:\n        /* \"#utility.yul\":8540:8546   */\n      0x00\n        /* \"#utility.yul\":8548:8554   */\n      dup1\n        /* \"#utility.yul\":8597:8599   */\n      0x40\n        /* \"#utility.yul\":8585:8594   */\n      dup4\n        /* \"#utility.yul\":8576:8583   */\n      dup6\n        /* \"#utility.yul\":8572:8595   */\n      sub\n        /* \"#utility.yul\":8568:8600   */\n      slt\n        /* \"#utility.yul\":8565:8684   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":8603:8682   */\n      tag_560\n      tag_391\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":8565:8684   */\n    tag_559:\n        /* \"#utility.yul\":8723:8724   */\n      0x00\n        /* \"#utility.yul\":8748:8801   */\n      tag_561\n        /* \"#utility.yul\":8793:8800   */\n      dup6\n        /* \"#utility.yul\":8784:8790   */\n      dup3\n        /* \"#utility.yul\":8773:8782   */\n      dup7\n        /* \"#utility.yul\":8769:8791   */\n      add\n        /* \"#utility.yul\":8748:8801   */\n      tag_405\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":8738:8801   */\n      swap3\n      pop\n        /* \"#utility.yul\":8694:8811   */\n      pop\n        /* \"#utility.yul\":8850:8852   */\n      0x20\n        /* \"#utility.yul\":8876:8929   */\n      tag_562\n        /* \"#utility.yul\":8921:8928   */\n      dup6\n        /* \"#utility.yul\":8912:8918   */\n      dup3\n        /* \"#utility.yul\":8901:8910   */\n      dup7\n        /* \"#utility.yul\":8897:8919   */\n      add\n        /* \"#utility.yul\":8876:8929   */\n      tag_405\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":8866:8929   */\n      swap2\n      pop\n        /* \"#utility.yul\":8821:8939   */\n      pop\n        /* \"#utility.yul\":8472:8946   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8952:9281   */\n    tag_73:\n        /* \"#utility.yul\":9011:9017   */\n      0x00\n        /* \"#utility.yul\":9060:9062   */\n      0x20\n        /* \"#utility.yul\":9048:9057   */\n      dup3\n        /* \"#utility.yul\":9039:9046   */\n      dup5\n        /* \"#utility.yul\":9035:9058   */\n      sub\n        /* \"#utility.yul\":9031:9063   */\n      slt\n        /* \"#utility.yul\":9028:9147   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":9066:9145   */\n      tag_565\n      tag_391\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":9028:9147   */\n    tag_564:\n        /* \"#utility.yul\":9186:9187   */\n      0x00\n        /* \"#utility.yul\":9211:9264   */\n      tag_566\n        /* \"#utility.yul\":9256:9263   */\n      dup5\n        /* \"#utility.yul\":9247:9253   */\n      dup3\n        /* \"#utility.yul\":9236:9245   */\n      dup6\n        /* \"#utility.yul\":9232:9254   */\n      add\n        /* \"#utility.yul\":9211:9264   */\n      tag_410\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":9201:9264   */\n      swap2\n      pop\n        /* \"#utility.yul\":9157:9274   */\n      pop\n        /* \"#utility.yul\":8952:9281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9287:9405   */\n    tag_419:\n        /* \"#utility.yul\":9374:9398   */\n      tag_568\n        /* \"#utility.yul\":9392:9397   */\n      dup2\n        /* \"#utility.yul\":9374:9398   */\n      tag_403\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":9369:9372   */\n      dup3\n        /* \"#utility.yul\":9362:9399   */\n      mstore\n        /* \"#utility.yul\":9287:9405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9411:9633   */\n    tag_76:\n        /* \"#utility.yul\":9504:9508   */\n      0x00\n        /* \"#utility.yul\":9542:9544   */\n      0x20\n        /* \"#utility.yul\":9531:9540   */\n      dup3\n        /* \"#utility.yul\":9527:9545   */\n      add\n        /* \"#utility.yul\":9519:9545   */\n      swap1\n      pop\n        /* \"#utility.yul\":9555:9626   */\n      tag_570\n        /* \"#utility.yul\":9623:9624   */\n      0x00\n        /* \"#utility.yul\":9612:9621   */\n      dup4\n        /* \"#utility.yul\":9608:9625   */\n      add\n        /* \"#utility.yul\":9599:9605   */\n      dup5\n        /* \"#utility.yul\":9555:9626   */\n      tag_419\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":9411:9633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9639:9950   */\n    tag_420:\n        /* \"#utility.yul\":9716:9720   */\n      0x00\n        /* \"#utility.yul\":9806:9824   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9798:9804   */\n      dup3\n        /* \"#utility.yul\":9795:9825   */\n      gt\n        /* \"#utility.yul\":9792:9848   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":9828:9846   */\n      tag_573\n      tag_362\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":9792:9848   */\n    tag_572:\n        /* \"#utility.yul\":9878:9882   */\n      0x20\n        /* \"#utility.yul\":9870:9876   */\n      dup3\n        /* \"#utility.yul\":9866:9883   */\n      mul\n        /* \"#utility.yul\":9858:9883   */\n      swap1\n      pop\n        /* \"#utility.yul\":9938:9942   */\n      0x20\n        /* \"#utility.yul\":9932:9936   */\n      dup2\n        /* \"#utility.yul\":9928:9943   */\n      add\n        /* \"#utility.yul\":9920:9943   */\n      swap1\n      pop\n        /* \"#utility.yul\":9639:9950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9956:10073   */\n    tag_421:\n        /* \"#utility.yul\":10065:10066   */\n      0x00\n        /* \"#utility.yul\":10062:10063   */\n      dup1\n        /* \"#utility.yul\":10055:10067   */\n      revert\n        /* \"#utility.yul\":10096:10806   */\n    tag_422:\n        /* \"#utility.yul\":10192:10197   */\n      0x00\n        /* \"#utility.yul\":10217:10298   */\n      tag_576\n        /* \"#utility.yul\":10233:10297   */\n      tag_577\n        /* \"#utility.yul\":10290:10296   */\n      dup5\n        /* \"#utility.yul\":10233:10297   */\n      tag_420\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":10217:10298   */\n      tag_414\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":10208:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10318:10323   */\n      dup1\n        /* \"#utility.yul\":10347:10353   */\n      dup4\n        /* \"#utility.yul\":10340:10345   */\n      dup3\n        /* \"#utility.yul\":10333:10354   */\n      mstore\n        /* \"#utility.yul\":10381:10385   */\n      0x20\n        /* \"#utility.yul\":10374:10379   */\n      dup3\n        /* \"#utility.yul\":10370:10386   */\n      add\n        /* \"#utility.yul\":10363:10386   */\n      swap1\n      pop\n        /* \"#utility.yul\":10434:10438   */\n      0x20\n        /* \"#utility.yul\":10426:10432   */\n      dup5\n        /* \"#utility.yul\":10422:10439   */\n      mul\n        /* \"#utility.yul\":10414:10420   */\n      dup4\n        /* \"#utility.yul\":10410:10440   */\n      add\n        /* \"#utility.yul\":10463:10466   */\n      dup6\n        /* \"#utility.yul\":10455:10461   */\n      dup2\n        /* \"#utility.yul\":10452:10467   */\n      gt\n        /* \"#utility.yul\":10449:10571   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":10482:10561   */\n      tag_579\n      tag_421\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":10449:10571   */\n    tag_578:\n        /* \"#utility.yul\":10597:10603   */\n      dup4\n        /* \"#utility.yul\":10580:10800   */\n    tag_580:\n        /* \"#utility.yul\":10614:10620   */\n      dup2\n        /* \"#utility.yul\":10609:10612   */\n      dup2\n        /* \"#utility.yul\":10606:10621   */\n      lt\n        /* \"#utility.yul\":10580:10800   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":10689:10692   */\n      dup1\n        /* \"#utility.yul\":10718:10755   */\n      tag_583\n        /* \"#utility.yul\":10751:10754   */\n      dup9\n        /* \"#utility.yul\":10739:10749   */\n      dup3\n        /* \"#utility.yul\":10718:10755   */\n      tag_405\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":10713:10716   */\n      dup5\n        /* \"#utility.yul\":10706:10756   */\n      mstore\n        /* \"#utility.yul\":10785:10789   */\n      0x20\n        /* \"#utility.yul\":10780:10783   */\n      dup5\n        /* \"#utility.yul\":10776:10790   */\n      add\n        /* \"#utility.yul\":10769:10790   */\n      swap4\n      pop\n        /* \"#utility.yul\":10656:10800   */\n      pop\n        /* \"#utility.yul\":10640:10644   */\n      0x20\n        /* \"#utility.yul\":10635:10638   */\n      dup2\n        /* \"#utility.yul\":10631:10645   */\n      add\n        /* \"#utility.yul\":10624:10645   */\n      swap1\n      pop\n        /* \"#utility.yul\":10580:10800   */\n      jump(tag_580)\n    tag_582:\n        /* \"#utility.yul\":10584:10605   */\n      pop\n        /* \"#utility.yul\":10198:10806   */\n      pop\n      pop\n        /* \"#utility.yul\":10096:10806   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10829:11199   */\n    tag_423:\n        /* \"#utility.yul\":10900:10905   */\n      0x00\n        /* \"#utility.yul\":10949:10952   */\n      dup3\n        /* \"#utility.yul\":10942:10946   */\n      0x1f\n        /* \"#utility.yul\":10934:10940   */\n      dup4\n        /* \"#utility.yul\":10930:10947   */\n      add\n        /* \"#utility.yul\":10926:10953   */\n      slt\n        /* \"#utility.yul\":10916:11038   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":10957:11036   */\n      tag_586\n      tag_411\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10916:11038   */\n    tag_585:\n        /* \"#utility.yul\":11074:11080   */\n      dup2\n        /* \"#utility.yul\":11061:11081   */\n      calldataload\n        /* \"#utility.yul\":11099:11193   */\n      tag_587\n        /* \"#utility.yul\":11189:11192   */\n      dup5\n        /* \"#utility.yul\":11181:11187   */\n      dup3\n        /* \"#utility.yul\":11174:11178   */\n      0x20\n        /* \"#utility.yul\":11166:11172   */\n      dup7\n        /* \"#utility.yul\":11162:11179   */\n      add\n        /* \"#utility.yul\":11099:11193   */\n      tag_422\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11090:11193   */\n      swap2\n      pop\n        /* \"#utility.yul\":10906:11199   */\n      pop\n        /* \"#utility.yul\":10829:11199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11205:11526   */\n    tag_424:\n        /* \"#utility.yul\":11292:11296   */\n      0x00\n        /* \"#utility.yul\":11382:11400   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11374:11380   */\n      dup3\n        /* \"#utility.yul\":11371:11401   */\n      gt\n        /* \"#utility.yul\":11368:11424   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":11404:11422   */\n      tag_590\n      tag_362\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":11368:11424   */\n    tag_589:\n        /* \"#utility.yul\":11454:11458   */\n      0x20\n        /* \"#utility.yul\":11446:11452   */\n      dup3\n        /* \"#utility.yul\":11442:11459   */\n      mul\n        /* \"#utility.yul\":11434:11459   */\n      swap1\n      pop\n        /* \"#utility.yul\":11514:11518   */\n      0x20\n        /* \"#utility.yul\":11508:11512   */\n      dup2\n        /* \"#utility.yul\":11504:11519   */\n      add\n        /* \"#utility.yul\":11496:11519   */\n      swap1\n      pop\n        /* \"#utility.yul\":11205:11526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11548:12493   */\n    tag_425:\n        /* \"#utility.yul\":11654:11659   */\n      0x00\n        /* \"#utility.yul\":11679:11770   */\n      tag_592\n        /* \"#utility.yul\":11695:11769   */\n      tag_593\n        /* \"#utility.yul\":11762:11768   */\n      dup5\n        /* \"#utility.yul\":11695:11769   */\n      tag_424\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":11679:11770   */\n      tag_414\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11670:11770   */\n      swap1\n      pop\n        /* \"#utility.yul\":11790:11795   */\n      dup1\n        /* \"#utility.yul\":11819:11825   */\n      dup4\n        /* \"#utility.yul\":11812:11817   */\n      dup3\n        /* \"#utility.yul\":11805:11826   */\n      mstore\n        /* \"#utility.yul\":11853:11857   */\n      0x20\n        /* \"#utility.yul\":11846:11851   */\n      dup3\n        /* \"#utility.yul\":11842:11858   */\n      add\n        /* \"#utility.yul\":11835:11858   */\n      swap1\n      pop\n        /* \"#utility.yul\":11906:11910   */\n      0x20\n        /* \"#utility.yul\":11898:11904   */\n      dup5\n        /* \"#utility.yul\":11894:11911   */\n      mul\n        /* \"#utility.yul\":11886:11892   */\n      dup4\n        /* \"#utility.yul\":11882:11912   */\n      add\n        /* \"#utility.yul\":11935:11938   */\n      dup6\n        /* \"#utility.yul\":11927:11933   */\n      dup2\n        /* \"#utility.yul\":11924:11939   */\n      gt\n        /* \"#utility.yul\":11921:12043   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":11954:12033   */\n      tag_595\n      tag_421\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":11921:12043   */\n    tag_594:\n        /* \"#utility.yul\":12069:12075   */\n      dup4\n        /* \"#utility.yul\":12052:12487   */\n    tag_596:\n        /* \"#utility.yul\":12086:12092   */\n      dup2\n        /* \"#utility.yul\":12081:12084   */\n      dup2\n        /* \"#utility.yul\":12078:12093   */\n      lt\n        /* \"#utility.yul\":12052:12487   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":12175:12178   */\n      dup1\n        /* \"#utility.yul\":12162:12179   */\n      calldataload\n        /* \"#utility.yul\":12211:12229   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12209   */\n      dup2\n        /* \"#utility.yul\":12195:12230   */\n      gt\n        /* \"#utility.yul\":12192:12314   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":12233:12312   */\n      tag_600\n      tag_411\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12192:12314   */\n    tag_599:\n        /* \"#utility.yul\":12357:12368   */\n      dup1\n        /* \"#utility.yul\":12349:12355   */\n      dup7\n        /* \"#utility.yul\":12345:12369   */\n      add\n        /* \"#utility.yul\":12395:12442   */\n      tag_601\n        /* \"#utility.yul\":12438:12441   */\n      dup10\n        /* \"#utility.yul\":12426:12436   */\n      dup3\n        /* \"#utility.yul\":12395:12442   */\n      tag_418\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":12390:12393   */\n      dup6\n        /* \"#utility.yul\":12383:12443   */\n      mstore\n        /* \"#utility.yul\":12472:12476   */\n      0x20\n        /* \"#utility.yul\":12467:12470   */\n      dup6\n        /* \"#utility.yul\":12463:12477   */\n      add\n        /* \"#utility.yul\":12456:12477   */\n      swap5\n      pop\n        /* \"#utility.yul\":12128:12487   */\n      pop\n      pop\n        /* \"#utility.yul\":12112:12116   */\n      0x20\n        /* \"#utility.yul\":12107:12110   */\n      dup2\n        /* \"#utility.yul\":12103:12117   */\n      add\n        /* \"#utility.yul\":12096:12117   */\n      swap1\n      pop\n        /* \"#utility.yul\":12052:12487   */\n      jump(tag_596)\n    tag_598:\n        /* \"#utility.yul\":12056:12077   */\n      pop\n        /* \"#utility.yul\":11660:12493   */\n      pop\n      pop\n        /* \"#utility.yul\":11548:12493   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12515:12905   */\n    tag_426:\n        /* \"#utility.yul\":12596:12601   */\n      0x00\n        /* \"#utility.yul\":12645:12648   */\n      dup3\n        /* \"#utility.yul\":12638:12642   */\n      0x1f\n        /* \"#utility.yul\":12630:12636   */\n      dup4\n        /* \"#utility.yul\":12626:12643   */\n      add\n        /* \"#utility.yul\":12622:12649   */\n      slt\n        /* \"#utility.yul\":12612:12734   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":12653:12732   */\n      tag_604\n      tag_411\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":12612:12734   */\n    tag_603:\n        /* \"#utility.yul\":12770:12776   */\n      dup2\n        /* \"#utility.yul\":12757:12777   */\n      calldataload\n        /* \"#utility.yul\":12795:12899   */\n      tag_605\n        /* \"#utility.yul\":12895:12898   */\n      dup5\n        /* \"#utility.yul\":12887:12893   */\n      dup3\n        /* \"#utility.yul\":12880:12884   */\n      0x20\n        /* \"#utility.yul\":12872:12878   */\n      dup7\n        /* \"#utility.yul\":12868:12885   */\n      add\n        /* \"#utility.yul\":12795:12899   */\n      tag_425\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":12786:12899   */\n      swap2\n      pop\n        /* \"#utility.yul\":12602:12905   */\n      pop\n        /* \"#utility.yul\":12515:12905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12911:13970   */\n    tag_94:\n        /* \"#utility.yul\":13048:13054   */\n      0x00\n        /* \"#utility.yul\":13056:13062   */\n      dup1\n        /* \"#utility.yul\":13064:13070   */\n      0x00\n        /* \"#utility.yul\":13113:13115   */\n      0x60\n        /* \"#utility.yul\":13101:13110   */\n      dup5\n        /* \"#utility.yul\":13092:13099   */\n      dup7\n        /* \"#utility.yul\":13088:13111   */\n      sub\n        /* \"#utility.yul\":13084:13116   */\n      slt\n        /* \"#utility.yul\":13081:13200   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":13119:13198   */\n      tag_608\n      tag_391\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":13081:13200   */\n    tag_607:\n        /* \"#utility.yul\":13239:13240   */\n      0x00\n        /* \"#utility.yul\":13264:13317   */\n      tag_609\n        /* \"#utility.yul\":13309:13316   */\n      dup7\n        /* \"#utility.yul\":13300:13306   */\n      dup3\n        /* \"#utility.yul\":13289:13298   */\n      dup8\n        /* \"#utility.yul\":13285:13307   */\n      add\n        /* \"#utility.yul\":13264:13317   */\n      tag_410\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13254:13317   */\n      swap4\n      pop\n        /* \"#utility.yul\":13210:13327   */\n      pop\n        /* \"#utility.yul\":13394:13396   */\n      0x20\n        /* \"#utility.yul\":13383:13392   */\n      dup5\n        /* \"#utility.yul\":13379:13397   */\n      add\n        /* \"#utility.yul\":13366:13398   */\n      calldataload\n        /* \"#utility.yul\":13425:13443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13417:13423   */\n      dup2\n        /* \"#utility.yul\":13414:13444   */\n      gt\n        /* \"#utility.yul\":13411:13528   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":13447:13526   */\n      tag_611\n      tag_392\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":13411:13528   */\n    tag_610:\n        /* \"#utility.yul\":13552:13630   */\n      tag_612\n        /* \"#utility.yul\":13622:13629   */\n      dup7\n        /* \"#utility.yul\":13613:13619   */\n      dup3\n        /* \"#utility.yul\":13602:13611   */\n      dup8\n        /* \"#utility.yul\":13598:13620   */\n      add\n        /* \"#utility.yul\":13552:13630   */\n      tag_423\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":13542:13630   */\n      swap3\n      pop\n        /* \"#utility.yul\":13337:13640   */\n      pop\n        /* \"#utility.yul\":13707:13709   */\n      0x40\n        /* \"#utility.yul\":13696:13705   */\n      dup5\n        /* \"#utility.yul\":13692:13710   */\n      add\n        /* \"#utility.yul\":13679:13711   */\n      calldataload\n        /* \"#utility.yul\":13738:13756   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13730:13736   */\n      dup2\n        /* \"#utility.yul\":13727:13757   */\n      gt\n        /* \"#utility.yul\":13724:13841   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":13760:13839   */\n      tag_614\n      tag_392\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":13724:13841   */\n    tag_613:\n        /* \"#utility.yul\":13865:13953   */\n      tag_615\n        /* \"#utility.yul\":13945:13952   */\n      dup7\n        /* \"#utility.yul\":13936:13942   */\n      dup3\n        /* \"#utility.yul\":13925:13934   */\n      dup8\n        /* \"#utility.yul\":13921:13943   */\n      add\n        /* \"#utility.yul\":13865:13953   */\n      tag_426\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":13855:13953   */\n      swap2\n      pop\n        /* \"#utility.yul\":13650:13963   */\n      pop\n        /* \"#utility.yul\":12911:13970   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13976:14092   */\n    tag_427:\n        /* \"#utility.yul\":14046:14067   */\n      tag_617\n        /* \"#utility.yul\":14061:14066   */\n      dup2\n        /* \"#utility.yul\":14046:14067   */\n      tag_396\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":14039:14044   */\n      dup2\n        /* \"#utility.yul\":14036:14068   */\n      eq\n        /* \"#utility.yul\":14026:14086   */\n      tag_618\n      jumpi\n        /* \"#utility.yul\":14082:14083   */\n      0x00\n        /* \"#utility.yul\":14079:14080   */\n      dup1\n        /* \"#utility.yul\":14072:14084   */\n      revert\n        /* \"#utility.yul\":14026:14086   */\n    tag_618:\n        /* \"#utility.yul\":13976:14092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14098:14231   */\n    tag_428:\n        /* \"#utility.yul\":14141:14146   */\n      0x00\n        /* \"#utility.yul\":14179:14185   */\n      dup2\n        /* \"#utility.yul\":14166:14186   */\n      calldataload\n        /* \"#utility.yul\":14157:14186   */\n      swap1\n      pop\n        /* \"#utility.yul\":14195:14225   */\n      tag_620\n        /* \"#utility.yul\":14219:14224   */\n      dup2\n        /* \"#utility.yul\":14195:14225   */\n      tag_427\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":14098:14231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:14705   */\n    tag_98:\n        /* \"#utility.yul\":14302:14308   */\n      0x00\n        /* \"#utility.yul\":14310:14316   */\n      dup1\n        /* \"#utility.yul\":14359:14361   */\n      0x40\n        /* \"#utility.yul\":14347:14356   */\n      dup4\n        /* \"#utility.yul\":14338:14345   */\n      dup6\n        /* \"#utility.yul\":14334:14357   */\n      sub\n        /* \"#utility.yul\":14330:14362   */\n      slt\n        /* \"#utility.yul\":14327:14446   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":14365:14444   */\n      tag_623\n      tag_391\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":14327:14446   */\n    tag_622:\n        /* \"#utility.yul\":14485:14486   */\n      0x00\n        /* \"#utility.yul\":14510:14563   */\n      tag_624\n        /* \"#utility.yul\":14555:14562   */\n      dup6\n        /* \"#utility.yul\":14546:14552   */\n      dup3\n        /* \"#utility.yul\":14535:14544   */\n      dup7\n        /* \"#utility.yul\":14531:14553   */\n      add\n        /* \"#utility.yul\":14510:14563   */\n      tag_410\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":14500:14563   */\n      swap3\n      pop\n        /* \"#utility.yul\":14456:14573   */\n      pop\n        /* \"#utility.yul\":14612:14614   */\n      0x20\n        /* \"#utility.yul\":14638:14688   */\n      tag_625\n        /* \"#utility.yul\":14680:14687   */\n      dup6\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14660:14669   */\n      dup7\n        /* \"#utility.yul\":14656:14678   */\n      add\n        /* \"#utility.yul\":14638:14688   */\n      tag_428\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":14628:14688   */\n      swap2\n      pop\n        /* \"#utility.yul\":14583:14698   */\n      pop\n        /* \"#utility.yul\":14237:14705   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14711:15018   */\n    tag_429:\n        /* \"#utility.yul\":14772:14776   */\n      0x00\n        /* \"#utility.yul\":14862:14880   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14854:14860   */\n      dup3\n        /* \"#utility.yul\":14851:14881   */\n      gt\n        /* \"#utility.yul\":14848:14904   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":14884:14902   */\n      tag_628\n      tag_362\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":14848:14904   */\n    tag_627:\n        /* \"#utility.yul\":14922:14951   */\n      tag_629\n        /* \"#utility.yul\":14944:14950   */\n      dup3\n        /* \"#utility.yul\":14922:14951   */\n      tag_401\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":14914:14951   */\n      swap1\n      pop\n        /* \"#utility.yul\":15006:15010   */\n      0x20\n        /* \"#utility.yul\":15000:15004   */\n      dup2\n        /* \"#utility.yul\":14996:15011   */\n      add\n        /* \"#utility.yul\":14988:15011   */\n      swap1\n      pop\n        /* \"#utility.yul\":14711:15018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15024:15447   */\n    tag_430:\n        /* \"#utility.yul\":15101:15106   */\n      0x00\n        /* \"#utility.yul\":15126:15191   */\n      tag_631\n        /* \"#utility.yul\":15142:15190   */\n      tag_632\n        /* \"#utility.yul\":15183:15189   */\n      dup5\n        /* \"#utility.yul\":15142:15190   */\n      tag_429\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":15126:15191   */\n      tag_414\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":15117:15191   */\n      swap1\n      pop\n        /* \"#utility.yul\":15214:15220   */\n      dup3\n        /* \"#utility.yul\":15207:15212   */\n      dup2\n        /* \"#utility.yul\":15200:15221   */\n      mstore\n        /* \"#utility.yul\":15252:15256   */\n      0x20\n        /* \"#utility.yul\":15245:15250   */\n      dup2\n        /* \"#utility.yul\":15241:15257   */\n      add\n        /* \"#utility.yul\":15290:15293   */\n      dup5\n        /* \"#utility.yul\":15281:15287   */\n      dup5\n        /* \"#utility.yul\":15276:15279   */\n      dup5\n        /* \"#utility.yul\":15272:15288   */\n      add\n        /* \"#utility.yul\":15269:15294   */\n      gt\n        /* \"#utility.yul\":15266:15378   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":15297:15376   */\n      tag_634\n      tag_412\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":15266:15378   */\n    tag_633:\n        /* \"#utility.yul\":15387:15441   */\n      tag_635\n        /* \"#utility.yul\":15434:15440   */\n      dup5\n        /* \"#utility.yul\":15429:15432   */\n      dup3\n        /* \"#utility.yul\":15424:15427   */\n      dup6\n        /* \"#utility.yul\":15387:15441   */\n      tag_416\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":15107:15447   */\n      pop\n        /* \"#utility.yul\":15024:15447   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15466:15804   */\n    tag_431:\n        /* \"#utility.yul\":15521:15526   */\n      0x00\n        /* \"#utility.yul\":15570:15573   */\n      dup3\n        /* \"#utility.yul\":15563:15567   */\n      0x1f\n        /* \"#utility.yul\":15555:15561   */\n      dup4\n        /* \"#utility.yul\":15551:15568   */\n      add\n        /* \"#utility.yul\":15547:15574   */\n      slt\n        /* \"#utility.yul\":15537:15659   */\n      tag_637\n      jumpi\n        /* \"#utility.yul\":15578:15657   */\n      tag_638\n      tag_411\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":15537:15659   */\n    tag_637:\n        /* \"#utility.yul\":15695:15701   */\n      dup2\n        /* \"#utility.yul\":15682:15702   */\n      calldataload\n        /* \"#utility.yul\":15720:15798   */\n      tag_639\n        /* \"#utility.yul\":15794:15797   */\n      dup5\n        /* \"#utility.yul\":15786:15792   */\n      dup3\n        /* \"#utility.yul\":15779:15783   */\n      0x20\n        /* \"#utility.yul\":15771:15777   */\n      dup7\n        /* \"#utility.yul\":15767:15784   */\n      add\n        /* \"#utility.yul\":15720:15798   */\n      tag_430\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15711:15798   */\n      swap2\n      pop\n        /* \"#utility.yul\":15527:15804   */\n      pop\n        /* \"#utility.yul\":15466:15804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15810:16753   */\n    tag_102:\n        /* \"#utility.yul\":15905:15911   */\n      0x00\n        /* \"#utility.yul\":15913:15919   */\n      dup1\n        /* \"#utility.yul\":15921:15927   */\n      0x00\n        /* \"#utility.yul\":15929:15935   */\n      dup1\n        /* \"#utility.yul\":15978:15981   */\n      0x80\n        /* \"#utility.yul\":15966:15975   */\n      dup6\n        /* \"#utility.yul\":15957:15964   */\n      dup8\n        /* \"#utility.yul\":15953:15976   */\n      sub\n        /* \"#utility.yul\":15949:15982   */\n      slt\n        /* \"#utility.yul\":15946:16066   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":15985:16064   */\n      tag_642\n      tag_391\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":15946:16066   */\n    tag_641:\n        /* \"#utility.yul\":16105:16106   */\n      0x00\n        /* \"#utility.yul\":16130:16183   */\n      tag_643\n        /* \"#utility.yul\":16175:16182   */\n      dup8\n        /* \"#utility.yul\":16166:16172   */\n      dup3\n        /* \"#utility.yul\":16155:16164   */\n      dup9\n        /* \"#utility.yul\":16151:16173   */\n      add\n        /* \"#utility.yul\":16130:16183   */\n      tag_410\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":16120:16183   */\n      swap5\n      pop\n        /* \"#utility.yul\":16076:16193   */\n      pop\n        /* \"#utility.yul\":16232:16234   */\n      0x20\n        /* \"#utility.yul\":16258:16311   */\n      tag_644\n        /* \"#utility.yul\":16303:16310   */\n      dup8\n        /* \"#utility.yul\":16294:16300   */\n      dup3\n        /* \"#utility.yul\":16283:16292   */\n      dup9\n        /* \"#utility.yul\":16279:16301   */\n      add\n        /* \"#utility.yul\":16258:16311   */\n      tag_410\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16248:16311   */\n      swap4\n      pop\n        /* \"#utility.yul\":16203:16321   */\n      pop\n        /* \"#utility.yul\":16360:16362   */\n      0x40\n        /* \"#utility.yul\":16386:16439   */\n      tag_645\n        /* \"#utility.yul\":16431:16438   */\n      dup8\n        /* \"#utility.yul\":16422:16428   */\n      dup3\n        /* \"#utility.yul\":16411:16420   */\n      dup9\n        /* \"#utility.yul\":16407:16429   */\n      add\n        /* \"#utility.yul\":16386:16439   */\n      tag_405\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":16376:16439   */\n      swap3\n      pop\n        /* \"#utility.yul\":16331:16449   */\n      pop\n        /* \"#utility.yul\":16516:16518   */\n      0x60\n        /* \"#utility.yul\":16505:16514   */\n      dup6\n        /* \"#utility.yul\":16501:16519   */\n      add\n        /* \"#utility.yul\":16488:16520   */\n      calldataload\n        /* \"#utility.yul\":16547:16565   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16539:16545   */\n      dup2\n        /* \"#utility.yul\":16536:16566   */\n      gt\n        /* \"#utility.yul\":16533:16650   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":16569:16648   */\n      tag_647\n      tag_392\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":16533:16650   */\n    tag_646:\n        /* \"#utility.yul\":16674:16736   */\n      tag_648\n        /* \"#utility.yul\":16728:16735   */\n      dup8\n        /* \"#utility.yul\":16719:16725   */\n      dup3\n        /* \"#utility.yul\":16708:16717   */\n      dup9\n        /* \"#utility.yul\":16704:16726   */\n      add\n        /* \"#utility.yul\":16674:16736   */\n      tag_431\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16664:16736   */\n      swap2\n      pop\n        /* \"#utility.yul\":16459:16746   */\n      pop\n        /* \"#utility.yul\":15810:16753   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16759:17091   */\n    tag_112:\n        /* \"#utility.yul\":16880:16884   */\n      0x00\n        /* \"#utility.yul\":16918:16920   */\n      0x40\n        /* \"#utility.yul\":16907:16916   */\n      dup3\n        /* \"#utility.yul\":16903:16921   */\n      add\n        /* \"#utility.yul\":16895:16921   */\n      swap1\n      pop\n        /* \"#utility.yul\":16931:17002   */\n      tag_650\n        /* \"#utility.yul\":16999:17000   */\n      0x00\n        /* \"#utility.yul\":16988:16997   */\n      dup4\n        /* \"#utility.yul\":16984:17001   */\n      add\n        /* \"#utility.yul\":16975:16981   */\n      dup6\n        /* \"#utility.yul\":16931:17002   */\n      tag_408\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17012:17084   */\n      tag_651\n        /* \"#utility.yul\":17080:17082   */\n      0x20\n        /* \"#utility.yul\":17069:17078   */\n      dup4\n        /* \"#utility.yul\":17065:17083   */\n      add\n        /* \"#utility.yul\":17056:17062   */\n      dup5\n        /* \"#utility.yul\":17012:17084   */\n      tag_419\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":16759:17091   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17097:17571   */\n    tag_115:\n        /* \"#utility.yul\":17165:17171   */\n      0x00\n        /* \"#utility.yul\":17173:17179   */\n      dup1\n        /* \"#utility.yul\":17222:17224   */\n      0x40\n        /* \"#utility.yul\":17210:17219   */\n      dup4\n        /* \"#utility.yul\":17201:17208   */\n      dup6\n        /* \"#utility.yul\":17197:17220   */\n      sub\n        /* \"#utility.yul\":17193:17225   */\n      slt\n        /* \"#utility.yul\":17190:17309   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":17228:17307   */\n      tag_654\n      tag_391\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17190:17309   */\n    tag_653:\n        /* \"#utility.yul\":17348:17349   */\n      0x00\n        /* \"#utility.yul\":17373:17426   */\n      tag_655\n        /* \"#utility.yul\":17418:17425   */\n      dup6\n        /* \"#utility.yul\":17409:17415   */\n      dup3\n        /* \"#utility.yul\":17398:17407   */\n      dup7\n        /* \"#utility.yul\":17394:17416   */\n      add\n        /* \"#utility.yul\":17373:17426   */\n      tag_410\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":17363:17426   */\n      swap3\n      pop\n        /* \"#utility.yul\":17319:17436   */\n      pop\n        /* \"#utility.yul\":17475:17477   */\n      0x20\n        /* \"#utility.yul\":17501:17554   */\n      tag_656\n        /* \"#utility.yul\":17546:17553   */\n      dup6\n        /* \"#utility.yul\":17537:17543   */\n      dup3\n        /* \"#utility.yul\":17526:17535   */\n      dup7\n        /* \"#utility.yul\":17522:17544   */\n      add\n        /* \"#utility.yul\":17501:17554   */\n      tag_410\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":17491:17554   */\n      swap2\n      pop\n        /* \"#utility.yul\":17446:17564   */\n      pop\n        /* \"#utility.yul\":17097:17571   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17577:17757   */\n    tag_432:\n        /* \"#utility.yul\":17625:17702   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17622:17623   */\n      0x00\n        /* \"#utility.yul\":17615:17703   */\n      mstore\n        /* \"#utility.yul\":17722:17726   */\n      0x22\n        /* \"#utility.yul\":17719:17720   */\n      0x04\n        /* \"#utility.yul\":17712:17727   */\n      mstore\n        /* \"#utility.yul\":17746:17750   */\n      0x24\n        /* \"#utility.yul\":17743:17744   */\n      0x00\n        /* \"#utility.yul\":17736:17751   */\n      revert\n        /* \"#utility.yul\":17763:18083   */\n    tag_126:\n        /* \"#utility.yul\":17807:17813   */\n      0x00\n        /* \"#utility.yul\":17844:17845   */\n      0x02\n        /* \"#utility.yul\":17838:17842   */\n      dup3\n        /* \"#utility.yul\":17834:17846   */\n      div\n        /* \"#utility.yul\":17824:17846   */\n      swap1\n      pop\n        /* \"#utility.yul\":17891:17892   */\n      0x01\n        /* \"#utility.yul\":17885:17889   */\n      dup3\n        /* \"#utility.yul\":17881:17893   */\n      and\n        /* \"#utility.yul\":17912:17930   */\n      dup1\n        /* \"#utility.yul\":17902:17983   */\n      tag_659\n      jumpi\n        /* \"#utility.yul\":17968:17972   */\n      0x7f\n        /* \"#utility.yul\":17960:17966   */\n      dup3\n        /* \"#utility.yul\":17956:17973   */\n      and\n        /* \"#utility.yul\":17946:17973   */\n      swap2\n      pop\n        /* \"#utility.yul\":17902:17983   */\n    tag_659:\n        /* \"#utility.yul\":18030:18032   */\n      0x20\n        /* \"#utility.yul\":18022:18028   */\n      dup3\n        /* \"#utility.yul\":18019:18033   */\n      lt\n        /* \"#utility.yul\":17999:18017   */\n      dup2\n        /* \"#utility.yul\":17996:18034   */\n      sub\n        /* \"#utility.yul\":17993:18077   */\n      tag_660\n      jumpi\n        /* \"#utility.yul\":18049:18067   */\n      tag_661\n      tag_432\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":17993:18077   */\n    tag_660:\n        /* \"#utility.yul\":17814:18083   */\n      pop\n        /* \"#utility.yul\":17763:18083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18089:18531   */\n    tag_149:\n        /* \"#utility.yul\":18238:18242   */\n      0x00\n        /* \"#utility.yul\":18276:18278   */\n      0x60\n        /* \"#utility.yul\":18265:18274   */\n      dup3\n        /* \"#utility.yul\":18261:18279   */\n      add\n        /* \"#utility.yul\":18253:18279   */\n      swap1\n      pop\n        /* \"#utility.yul\":18289:18360   */\n      tag_663\n        /* \"#utility.yul\":18357:18358   */\n      0x00\n        /* \"#utility.yul\":18346:18355   */\n      dup4\n        /* \"#utility.yul\":18342:18359   */\n      add\n        /* \"#utility.yul\":18333:18339   */\n      dup7\n        /* \"#utility.yul\":18289:18360   */\n      tag_408\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":18370:18442   */\n      tag_664\n        /* \"#utility.yul\":18438:18440   */\n      0x20\n        /* \"#utility.yul\":18427:18436   */\n      dup4\n        /* \"#utility.yul\":18423:18441   */\n      add\n        /* \"#utility.yul\":18414:18420   */\n      dup6\n        /* \"#utility.yul\":18370:18442   */\n      tag_419\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":18452:18524   */\n      tag_665\n        /* \"#utility.yul\":18520:18522   */\n      0x40\n        /* \"#utility.yul\":18509:18518   */\n      dup4\n        /* \"#utility.yul\":18505:18523   */\n      add\n        /* \"#utility.yul\":18496:18502   */\n      dup5\n        /* \"#utility.yul\":18452:18524   */\n      tag_408\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":18089:18531   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18537:18717   */\n    tag_433:\n        /* \"#utility.yul\":18585:18662   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18582:18583   */\n      0x00\n        /* \"#utility.yul\":18575:18663   */\n      mstore\n        /* \"#utility.yul\":18682:18686   */\n      0x11\n        /* \"#utility.yul\":18679:18680   */\n      0x04\n        /* \"#utility.yul\":18672:18687   */\n      mstore\n        /* \"#utility.yul\":18706:18710   */\n      0x24\n        /* \"#utility.yul\":18703:18704   */\n      0x00\n        /* \"#utility.yul\":18696:18711   */\n      revert\n        /* \"#utility.yul\":18723:18914   */\n    tag_169:\n        /* \"#utility.yul\":18763:18766   */\n      0x00\n        /* \"#utility.yul\":18782:18802   */\n      tag_668\n        /* \"#utility.yul\":18800:18801   */\n      dup3\n        /* \"#utility.yul\":18782:18802   */\n      tag_403\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18777:18802   */\n      swap2\n      pop\n        /* \"#utility.yul\":18816:18836   */\n      tag_669\n        /* \"#utility.yul\":18834:18835   */\n      dup4\n        /* \"#utility.yul\":18816:18836   */\n      tag_403\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":18811:18836   */\n      swap3\n      pop\n        /* \"#utility.yul\":18859:18860   */\n      dup3\n        /* \"#utility.yul\":18856:18857   */\n      dup3\n        /* \"#utility.yul\":18852:18861   */\n      add\n        /* \"#utility.yul\":18845:18861   */\n      swap1\n      pop\n        /* \"#utility.yul\":18880:18883   */\n      dup1\n        /* \"#utility.yul\":18877:18878   */\n      dup3\n        /* \"#utility.yul\":18874:18884   */\n      gt\n        /* \"#utility.yul\":18871:18907   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":18887:18905   */\n      tag_671\n      tag_433\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":18871:18907   */\n    tag_670:\n        /* \"#utility.yul\":18723:18914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18920:19091   */\n    tag_434:\n        /* \"#utility.yul\":19060:19083   */\n      0x4172726179206c656e677468206d69736d617463680000000000000000000000\n        /* \"#utility.yul\":19056:19057   */\n      0x00\n        /* \"#utility.yul\":19048:19054   */\n      dup3\n        /* \"#utility.yul\":19044:19058   */\n      add\n        /* \"#utility.yul\":19037:19084   */\n      mstore\n        /* \"#utility.yul\":18920:19091   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19097:19463   */\n    tag_435:\n        /* \"#utility.yul\":19239:19242   */\n      0x00\n        /* \"#utility.yul\":19260:19327   */\n      tag_674\n        /* \"#utility.yul\":19324:19326   */\n      0x15\n        /* \"#utility.yul\":19319:19322   */\n      dup4\n        /* \"#utility.yul\":19260:19327   */\n      tag_399\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19253:19327   */\n      swap2\n      pop\n        /* \"#utility.yul\":19336:19429   */\n      tag_675\n        /* \"#utility.yul\":19425:19428   */\n      dup3\n        /* \"#utility.yul\":19336:19429   */\n      tag_434\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":19454:19456   */\n      0x20\n        /* \"#utility.yul\":19449:19452   */\n      dup3\n        /* \"#utility.yul\":19445:19457   */\n      add\n        /* \"#utility.yul\":19438:19457   */\n      swap1\n      pop\n        /* \"#utility.yul\":19097:19463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19469:19888   */\n    tag_192:\n        /* \"#utility.yul\":19635:19639   */\n      0x00\n        /* \"#utility.yul\":19673:19675   */\n      0x20\n        /* \"#utility.yul\":19662:19671   */\n      dup3\n        /* \"#utility.yul\":19658:19676   */\n      add\n        /* \"#utility.yul\":19650:19676   */\n      swap1\n      pop\n        /* \"#utility.yul\":19722:19731   */\n      dup2\n        /* \"#utility.yul\":19716:19720   */\n      dup2\n        /* \"#utility.yul\":19712:19732   */\n      sub\n        /* \"#utility.yul\":19708:19709   */\n      0x00\n        /* \"#utility.yul\":19697:19706   */\n      dup4\n        /* \"#utility.yul\":19693:19710   */\n      add\n        /* \"#utility.yul\":19686:19733   */\n      mstore\n        /* \"#utility.yul\":19750:19881   */\n      tag_677\n        /* \"#utility.yul\":19876:19880   */\n      dup2\n        /* \"#utility.yul\":19750:19881   */\n      tag_435\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":19742:19881   */\n      swap1\n      pop\n        /* \"#utility.yul\":19469:19888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19894:20074   */\n    tag_199:\n        /* \"#utility.yul\":19942:20019   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19939:19940   */\n      0x00\n        /* \"#utility.yul\":19932:20020   */\n      mstore\n        /* \"#utility.yul\":20039:20043   */\n      0x32\n        /* \"#utility.yul\":20036:20037   */\n      0x04\n        /* \"#utility.yul\":20029:20044   */\n      mstore\n        /* \"#utility.yul\":20063:20067   */\n      0x24\n        /* \"#utility.yul\":20060:20061   */\n      0x00\n        /* \"#utility.yul\":20053:20068   */\n      revert\n        /* \"#utility.yul\":20080:20490   */\n    tag_219:\n        /* \"#utility.yul\":20120:20127   */\n      0x00\n        /* \"#utility.yul\":20143:20163   */\n      tag_680\n        /* \"#utility.yul\":20161:20162   */\n      dup3\n        /* \"#utility.yul\":20143:20163   */\n      tag_403\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20138:20163   */\n      swap2\n      pop\n        /* \"#utility.yul\":20177:20197   */\n      tag_681\n        /* \"#utility.yul\":20195:20196   */\n      dup4\n        /* \"#utility.yul\":20177:20197   */\n      tag_403\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":20172:20197   */\n      swap3\n      pop\n        /* \"#utility.yul\":20232:20233   */\n      dup3\n        /* \"#utility.yul\":20229:20230   */\n      dup3\n        /* \"#utility.yul\":20225:20234   */\n      mul\n        /* \"#utility.yul\":20254:20284   */\n      tag_682\n        /* \"#utility.yul\":20272:20283   */\n      dup2\n        /* \"#utility.yul\":20254:20284   */\n      tag_403\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":20243:20284   */\n      swap2\n      pop\n        /* \"#utility.yul\":20433:20434   */\n      dup3\n        /* \"#utility.yul\":20424:20431   */\n      dup3\n        /* \"#utility.yul\":20420:20435   */\n      div\n        /* \"#utility.yul\":20417:20418   */\n      dup5\n        /* \"#utility.yul\":20414:20436   */\n      eq\n        /* \"#utility.yul\":20394:20395   */\n      dup4\n        /* \"#utility.yul\":20387:20396   */\n      iszero\n        /* \"#utility.yul\":20367:20450   */\n      or\n        /* \"#utility.yul\":20344:20483   */\n      tag_683\n      jumpi\n        /* \"#utility.yul\":20463:20481   */\n      tag_684\n      tag_433\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":20344:20483   */\n    tag_683:\n        /* \"#utility.yul\":20128:20490   */\n      pop\n        /* \"#utility.yul\":20080:20490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20496:20676   */\n    tag_368:\n        /* \"#utility.yul\":20544:20621   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20541:20542   */\n      0x00\n        /* \"#utility.yul\":20534:20622   */\n      mstore\n        /* \"#utility.yul\":20641:20645   */\n      0x12\n        /* \"#utility.yul\":20638:20639   */\n      0x04\n        /* \"#utility.yul\":20631:20646   */\n      mstore\n        /* \"#utility.yul\":20665:20669   */\n      0x24\n        /* \"#utility.yul\":20662:20663   */\n      0x00\n        /* \"#utility.yul\":20655:20670   */\n      revert\n        /* \"#utility.yul\":20682:20867   */\n    tag_221:\n        /* \"#utility.yul\":20722:20723   */\n      0x00\n        /* \"#utility.yul\":20739:20759   */\n      tag_687\n        /* \"#utility.yul\":20757:20758   */\n      dup3\n        /* \"#utility.yul\":20739:20759   */\n      tag_403\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":20734:20759   */\n      swap2\n      pop\n        /* \"#utility.yul\":20773:20793   */\n      tag_688\n        /* \"#utility.yul\":20791:20792   */\n      dup4\n        /* \"#utility.yul\":20773:20793   */\n      tag_403\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20768:20793   */\n      swap3\n      pop\n        /* \"#utility.yul\":20812:20813   */\n      dup3\n        /* \"#utility.yul\":20802:20837   */\n      tag_689\n      jumpi\n        /* \"#utility.yul\":20817:20835   */\n      tag_690\n      tag_368\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":20802:20837   */\n    tag_689:\n        /* \"#utility.yul\":20859:20860   */\n      dup3\n        /* \"#utility.yul\":20856:20857   */\n      dup3\n        /* \"#utility.yul\":20852:20861   */\n      div\n        /* \"#utility.yul\":20847:20861   */\n      swap1\n      pop\n        /* \"#utility.yul\":20682:20867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20873:20952   */\n    tag_436:\n        /* \"#utility.yul\":20912:20919   */\n      0x00\n        /* \"#utility.yul\":20941:20946   */\n      dup2\n        /* \"#utility.yul\":20930:20946   */\n      swap1\n      pop\n        /* \"#utility.yul\":20873:20952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20958:21115   */\n    tag_437:\n        /* \"#utility.yul\":21063:21108   */\n      tag_693\n        /* \"#utility.yul\":21083:21107   */\n      tag_694\n        /* \"#utility.yul\":21101:21106   */\n      dup3\n        /* \"#utility.yul\":21083:21107   */\n      tag_403\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":21063:21108   */\n      tag_436\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":21058:21061   */\n      dup3\n        /* \"#utility.yul\":21051:21109   */\n      mstore\n        /* \"#utility.yul\":20958:21115   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21121:21199   */\n    tag_438:\n        /* \"#utility.yul\":21159:21166   */\n      0x00\n        /* \"#utility.yul\":21188:21193   */\n      dup2\n        /* \"#utility.yul\":21177:21193   */\n      swap1\n      pop\n        /* \"#utility.yul\":21121:21199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21205:21358   */\n    tag_439:\n        /* \"#utility.yul\":21308:21351   */\n      tag_697\n        /* \"#utility.yul\":21327:21350   */\n      tag_698\n        /* \"#utility.yul\":21344:21349   */\n      dup3\n        /* \"#utility.yul\":21327:21350   */\n      tag_393\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":21308:21351   */\n      tag_438\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":21303:21306   */\n      dup3\n        /* \"#utility.yul\":21296:21352   */\n      mstore\n        /* \"#utility.yul\":21205:21358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21364:21897   */\n    tag_259:\n        /* \"#utility.yul\":21530:21533   */\n      0x00\n        /* \"#utility.yul\":21545:21620   */\n      tag_700\n        /* \"#utility.yul\":21616:21619   */\n      dup3\n        /* \"#utility.yul\":21607:21613   */\n      dup7\n        /* \"#utility.yul\":21545:21620   */\n      tag_437\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21645:21647   */\n      0x20\n        /* \"#utility.yul\":21640:21643   */\n      dup3\n        /* \"#utility.yul\":21636:21648   */\n      add\n        /* \"#utility.yul\":21629:21648   */\n      swap2\n      pop\n        /* \"#utility.yul\":21658:21733   */\n      tag_701\n        /* \"#utility.yul\":21729:21732   */\n      dup3\n        /* \"#utility.yul\":21720:21726   */\n      dup6\n        /* \"#utility.yul\":21658:21733   */\n      tag_437\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21758:21760   */\n      0x20\n        /* \"#utility.yul\":21753:21756   */\n      dup3\n        /* \"#utility.yul\":21749:21761   */\n      add\n        /* \"#utility.yul\":21742:21761   */\n      swap2\n      pop\n        /* \"#utility.yul\":21771:21844   */\n      tag_702\n        /* \"#utility.yul\":21840:21843   */\n      dup3\n        /* \"#utility.yul\":21831:21837   */\n      dup5\n        /* \"#utility.yul\":21771:21844   */\n      tag_439\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":21869:21870   */\n      0x04\n        /* \"#utility.yul\":21864:21867   */\n      dup3\n        /* \"#utility.yul\":21860:21871   */\n      add\n        /* \"#utility.yul\":21853:21871   */\n      swap2\n      pop\n        /* \"#utility.yul\":21888:21891   */\n      dup2\n        /* \"#utility.yul\":21881:21891   */\n      swap1\n      pop\n        /* \"#utility.yul\":21364:21897   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21903:22044   */\n    tag_440:\n        /* \"#utility.yul\":21952:21956   */\n      0x00\n        /* \"#utility.yul\":21975:21978   */\n      dup2\n        /* \"#utility.yul\":21967:21978   */\n      swap1\n      pop\n        /* \"#utility.yul\":21998:22001   */\n      dup2\n        /* \"#utility.yul\":21995:21996   */\n      0x00\n        /* \"#utility.yul\":21988:22002   */\n      mstore\n        /* \"#utility.yul\":22032:22036   */\n      0x20\n        /* \"#utility.yul\":22029:22030   */\n      0x00\n        /* \"#utility.yul\":22019:22037   */\n      keccak256\n        /* \"#utility.yul\":22011:22037   */\n      swap1\n      pop\n        /* \"#utility.yul\":21903:22044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22050:22143   */\n    tag_441:\n        /* \"#utility.yul\":22087:22093   */\n      0x00\n        /* \"#utility.yul\":22134:22136   */\n      0x20\n        /* \"#utility.yul\":22129:22131   */\n      0x1f\n        /* \"#utility.yul\":22122:22127   */\n      dup4\n        /* \"#utility.yul\":22118:22132   */\n      add\n        /* \"#utility.yul\":22114:22137   */\n      div\n        /* \"#utility.yul\":22104:22137   */\n      swap1\n      pop\n        /* \"#utility.yul\":22050:22143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22149:22256   */\n    tag_442:\n        /* \"#utility.yul\":22193:22201   */\n      0x00\n        /* \"#utility.yul\":22243:22248   */\n      dup3\n        /* \"#utility.yul\":22237:22241   */\n      dup3\n        /* \"#utility.yul\":22233:22249   */\n      shl\n        /* \"#utility.yul\":22212:22249   */\n      swap1\n      pop\n        /* \"#utility.yul\":22149:22256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22262:22655   */\n    tag_443:\n        /* \"#utility.yul\":22331:22337   */\n      0x00\n        /* \"#utility.yul\":22381:22382   */\n      0x08\n        /* \"#utility.yul\":22369:22379   */\n      dup4\n        /* \"#utility.yul\":22365:22383   */\n      mul\n        /* \"#utility.yul\":22404:22501   */\n      tag_707\n        /* \"#utility.yul\":22434:22500   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22423:22432   */\n      dup3\n        /* \"#utility.yul\":22404:22501   */\n      tag_442\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22522:22561   */\n      tag_708\n        /* \"#utility.yul\":22552:22560   */\n      dup7\n        /* \"#utility.yul\":22541:22550   */\n      dup4\n        /* \"#utility.yul\":22522:22561   */\n      tag_442\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":22510:22561   */\n      swap6\n      pop\n        /* \"#utility.yul\":22594:22598   */\n      dup1\n        /* \"#utility.yul\":22590:22599   */\n      not\n        /* \"#utility.yul\":22583:22588   */\n      dup5\n        /* \"#utility.yul\":22579:22600   */\n      and\n        /* \"#utility.yul\":22570:22600   */\n      swap4\n      pop\n        /* \"#utility.yul\":22643:22647   */\n      dup1\n        /* \"#utility.yul\":22633:22641   */\n      dup7\n        /* \"#utility.yul\":22629:22648   */\n      and\n        /* \"#utility.yul\":22622:22627   */\n      dup5\n        /* \"#utility.yul\":22619:22649   */\n      or\n        /* \"#utility.yul\":22609:22649   */\n      swap3\n      pop\n        /* \"#utility.yul\":22338:22655   */\n      pop\n      pop\n        /* \"#utility.yul\":22262:22655   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22661:22721   */\n    tag_444:\n        /* \"#utility.yul\":22689:22692   */\n      0x00\n        /* \"#utility.yul\":22710:22715   */\n      dup2\n        /* \"#utility.yul\":22703:22715   */\n      swap1\n      pop\n        /* \"#utility.yul\":22661:22721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22727:22869   */\n    tag_445:\n        /* \"#utility.yul\":22777:22786   */\n      0x00\n        /* \"#utility.yul\":22810:22863   */\n      tag_711\n        /* \"#utility.yul\":22828:22862   */\n      tag_712\n        /* \"#utility.yul\":22837:22861   */\n      tag_713\n        /* \"#utility.yul\":22855:22860   */\n      dup5\n        /* \"#utility.yul\":22837:22861   */\n      tag_403\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":22828:22862   */\n      tag_444\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":22810:22863   */\n      tag_403\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":22797:22863   */\n      swap1\n      pop\n        /* \"#utility.yul\":22727:22869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22875:22950   */\n    tag_446:\n        /* \"#utility.yul\":22918:22921   */\n      0x00\n        /* \"#utility.yul\":22939:22944   */\n      dup2\n        /* \"#utility.yul\":22932:22944   */\n      swap1\n      pop\n        /* \"#utility.yul\":22875:22950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22956:23225   */\n    tag_447:\n        /* \"#utility.yul\":23066:23105   */\n      tag_716\n        /* \"#utility.yul\":23097:23104   */\n      dup4\n        /* \"#utility.yul\":23066:23105   */\n      tag_445\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":23127:23218   */\n      tag_717\n        /* \"#utility.yul\":23176:23217   */\n      tag_718\n        /* \"#utility.yul\":23200:23216   */\n      dup3\n        /* \"#utility.yul\":23176:23217   */\n      tag_446\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":23168:23174   */\n      dup5\n        /* \"#utility.yul\":23161:23165   */\n      dup5\n        /* \"#utility.yul\":23155:23166   */\n      sload\n        /* \"#utility.yul\":23127:23218   */\n      tag_443\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":23121:23125   */\n      dup3\n        /* \"#utility.yul\":23114:23219   */\n      sstore\n        /* \"#utility.yul\":23032:23225   */\n      pop\n        /* \"#utility.yul\":22956:23225   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23231:23304   */\n    tag_448:\n        /* \"#utility.yul\":23276:23279   */\n      0x00\n        /* \"#utility.yul\":23231:23304   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23310:23499   */\n    tag_449:\n        /* \"#utility.yul\":23387:23419   */\n      tag_721\n      tag_448\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":23428:23493   */\n      tag_722\n        /* \"#utility.yul\":23486:23492   */\n      dup2\n        /* \"#utility.yul\":23478:23484   */\n      dup5\n        /* \"#utility.yul\":23472:23476   */\n      dup5\n        /* \"#utility.yul\":23428:23493   */\n      tag_447\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":23363:23499   */\n      pop\n        /* \"#utility.yul\":23310:23499   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23505:23691   */\n    tag_450:\n        /* \"#utility.yul\":23565:23685   */\n    tag_724:\n        /* \"#utility.yul\":23582:23585   */\n      dup2\n        /* \"#utility.yul\":23575:23580   */\n      dup2\n        /* \"#utility.yul\":23572:23586   */\n      lt\n        /* \"#utility.yul\":23565:23685   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":23636:23675   */\n      tag_727\n        /* \"#utility.yul\":23673:23674   */\n      0x00\n        /* \"#utility.yul\":23666:23671   */\n      dup3\n        /* \"#utility.yul\":23636:23675   */\n      tag_449\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":23609:23610   */\n      0x01\n        /* \"#utility.yul\":23602:23607   */\n      dup2\n        /* \"#utility.yul\":23598:23611   */\n      add\n        /* \"#utility.yul\":23589:23611   */\n      swap1\n      pop\n        /* \"#utility.yul\":23565:23685   */\n      jump(tag_724)\n    tag_726:\n        /* \"#utility.yul\":23505:23691   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23697:24240   */\n    tag_451:\n        /* \"#utility.yul\":23798:23800   */\n      0x1f\n        /* \"#utility.yul\":23793:23796   */\n      dup3\n        /* \"#utility.yul\":23790:23801   */\n      gt\n        /* \"#utility.yul\":23787:24233   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":23832:23870   */\n      tag_730\n        /* \"#utility.yul\":23864:23869   */\n      dup2\n        /* \"#utility.yul\":23832:23870   */\n      tag_440\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":23916:23945   */\n      tag_731\n        /* \"#utility.yul\":23934:23944   */\n      dup5\n        /* \"#utility.yul\":23916:23945   */\n      tag_441\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":23906:23914   */\n      dup2\n        /* \"#utility.yul\":23902:23946   */\n      add\n        /* \"#utility.yul\":24099:24101   */\n      0x20\n        /* \"#utility.yul\":24087:24097   */\n      dup6\n        /* \"#utility.yul\":24084:24102   */\n      lt\n        /* \"#utility.yul\":24081:24130   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":24120:24128   */\n      dup2\n        /* \"#utility.yul\":24105:24128   */\n      swap1\n      pop\n        /* \"#utility.yul\":24081:24130   */\n    tag_732:\n        /* \"#utility.yul\":24143:24223   */\n      tag_733\n        /* \"#utility.yul\":24199:24221   */\n      tag_734\n        /* \"#utility.yul\":24217:24220   */\n      dup6\n        /* \"#utility.yul\":24199:24221   */\n      tag_441\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":24189:24197   */\n      dup4\n        /* \"#utility.yul\":24185:24222   */\n      add\n        /* \"#utility.yul\":24172:24183   */\n      dup3\n        /* \"#utility.yul\":24143:24223   */\n      tag_450\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":23802:24233   */\n      pop\n      pop\n        /* \"#utility.yul\":23787:24233   */\n    tag_729:\n        /* \"#utility.yul\":23697:24240   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24246:24363   */\n    tag_452:\n        /* \"#utility.yul\":24300:24308   */\n      0x00\n        /* \"#utility.yul\":24350:24355   */\n      dup3\n        /* \"#utility.yul\":24344:24348   */\n      dup3\n        /* \"#utility.yul\":24340:24356   */\n      shr\n        /* \"#utility.yul\":24319:24356   */\n      swap1\n      pop\n        /* \"#utility.yul\":24246:24363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24369:24538   */\n    tag_453:\n        /* \"#utility.yul\":24413:24419   */\n      0x00\n        /* \"#utility.yul\":24446:24497   */\n      tag_737\n        /* \"#utility.yul\":24494:24495   */\n      0x00\n        /* \"#utility.yul\":24490:24496   */\n      not\n        /* \"#utility.yul\":24482:24487   */\n      dup5\n        /* \"#utility.yul\":24479:24480   */\n      0x08\n        /* \"#utility.yul\":24475:24488   */\n      mul\n        /* \"#utility.yul\":24446:24497   */\n      tag_452\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":24442:24498   */\n      not\n        /* \"#utility.yul\":24527:24531   */\n      dup1\n        /* \"#utility.yul\":24521:24525   */\n      dup4\n        /* \"#utility.yul\":24517:24532   */\n      and\n        /* \"#utility.yul\":24507:24532   */\n      swap2\n      pop\n        /* \"#utility.yul\":24420:24538   */\n      pop\n        /* \"#utility.yul\":24369:24538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24543:24838   */\n    tag_454:\n        /* \"#utility.yul\":24619:24623   */\n      0x00\n        /* \"#utility.yul\":24765:24794   */\n      tag_739\n        /* \"#utility.yul\":24790:24793   */\n      dup4\n        /* \"#utility.yul\":24784:24788   */\n      dup4\n        /* \"#utility.yul\":24765:24794   */\n      tag_453\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":24757:24794   */\n      swap2\n      pop\n        /* \"#utility.yul\":24827:24830   */\n      dup3\n        /* \"#utility.yul\":24824:24825   */\n      0x02\n        /* \"#utility.yul\":24820:24831   */\n      mul\n        /* \"#utility.yul\":24814:24818   */\n      dup3\n        /* \"#utility.yul\":24811:24832   */\n      or\n        /* \"#utility.yul\":24803:24832   */\n      swap1\n      pop\n        /* \"#utility.yul\":24543:24838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24843:26238   */\n    tag_265:\n        /* \"#utility.yul\":24960:24997   */\n      tag_741\n        /* \"#utility.yul\":24993:24996   */\n      dup3\n        /* \"#utility.yul\":24960:24997   */\n      tag_398\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":25062:25080   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25054:25060   */\n      dup2\n        /* \"#utility.yul\":25051:25081   */\n      gt\n        /* \"#utility.yul\":25048:25104   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":25084:25102   */\n      tag_743\n      tag_362\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":25048:25104   */\n    tag_742:\n        /* \"#utility.yul\":25128:25166   */\n      tag_744\n        /* \"#utility.yul\":25160:25164   */\n      dup3\n        /* \"#utility.yul\":25154:25165   */\n      sload\n        /* \"#utility.yul\":25128:25166   */\n      tag_126\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":25213:25280   */\n      tag_745\n        /* \"#utility.yul\":25273:25279   */\n      dup3\n        /* \"#utility.yul\":25265:25271   */\n      dup3\n        /* \"#utility.yul\":25259:25263   */\n      dup6\n        /* \"#utility.yul\":25213:25280   */\n      tag_451\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":25307:25308   */\n      0x00\n        /* \"#utility.yul\":25331:25335   */\n      0x20\n        /* \"#utility.yul\":25318:25335   */\n      swap1\n      pop\n        /* \"#utility.yul\":25363:25365   */\n      0x1f\n        /* \"#utility.yul\":25355:25361   */\n      dup4\n        /* \"#utility.yul\":25352:25366   */\n      gt\n        /* \"#utility.yul\":25380:25381   */\n      0x01\n        /* \"#utility.yul\":25375:25993   */\n      dup2\n      eq\n      tag_747\n      jumpi\n        /* \"#utility.yul\":26037:26038   */\n      0x00\n        /* \"#utility.yul\":26054:26060   */\n      dup5\n        /* \"#utility.yul\":26051:26128   */\n      iszero\n      tag_748\n      jumpi\n        /* \"#utility.yul\":26103:26112   */\n      dup3\n        /* \"#utility.yul\":26098:26101   */\n      dup8\n        /* \"#utility.yul\":26094:26113   */\n      add\n        /* \"#utility.yul\":26088:26114   */\n      mload\n        /* \"#utility.yul\":26079:26114   */\n      swap1\n      pop\n        /* \"#utility.yul\":26051:26128   */\n    tag_748:\n        /* \"#utility.yul\":26154:26221   */\n      tag_749\n        /* \"#utility.yul\":26214:26220   */\n      dup6\n        /* \"#utility.yul\":26207:26212   */\n      dup3\n        /* \"#utility.yul\":26154:26221   */\n      tag_454\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":26148:26152   */\n      dup7\n        /* \"#utility.yul\":26141:26222   */\n      sstore\n        /* \"#utility.yul\":26010:26232   */\n      pop\n        /* \"#utility.yul\":25345:26232   */\n      jump(tag_746)\n        /* \"#utility.yul\":25375:25993   */\n    tag_747:\n        /* \"#utility.yul\":25427:25431   */\n      0x1f\n        /* \"#utility.yul\":25423:25432   */\n      not\n        /* \"#utility.yul\":25415:25421   */\n      dup5\n        /* \"#utility.yul\":25411:25433   */\n      and\n        /* \"#utility.yul\":25461:25498   */\n      tag_750\n        /* \"#utility.yul\":25493:25497   */\n      dup7\n        /* \"#utility.yul\":25461:25498   */\n      tag_440\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":25520:25521   */\n      0x00\n        /* \"#utility.yul\":25534:25742   */\n    tag_751:\n        /* \"#utility.yul\":25548:25555   */\n      dup3\n        /* \"#utility.yul\":25545:25546   */\n      dup2\n        /* \"#utility.yul\":25542:25556   */\n      lt\n        /* \"#utility.yul\":25534:25742   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":25627:25636   */\n      dup5\n        /* \"#utility.yul\":25622:25625   */\n      dup10\n        /* \"#utility.yul\":25618:25637   */\n      add\n        /* \"#utility.yul\":25612:25638   */\n      mload\n        /* \"#utility.yul\":25604:25610   */\n      dup3\n        /* \"#utility.yul\":25597:25639   */\n      sstore\n        /* \"#utility.yul\":25678:25679   */\n      0x01\n        /* \"#utility.yul\":25670:25676   */\n      dup3\n        /* \"#utility.yul\":25666:25680   */\n      add\n        /* \"#utility.yul\":25656:25680   */\n      swap2\n      pop\n        /* \"#utility.yul\":25725:25727   */\n      0x20\n        /* \"#utility.yul\":25714:25723   */\n      dup6\n        /* \"#utility.yul\":25710:25728   */\n      add\n        /* \"#utility.yul\":25697:25728   */\n      swap5\n      pop\n        /* \"#utility.yul\":25571:25575   */\n      0x20\n        /* \"#utility.yul\":25568:25569   */\n      dup2\n        /* \"#utility.yul\":25564:25576   */\n      add\n        /* \"#utility.yul\":25559:25576   */\n      swap1\n      pop\n        /* \"#utility.yul\":25534:25742   */\n      jump(tag_751)\n    tag_753:\n        /* \"#utility.yul\":25770:25776   */\n      dup7\n        /* \"#utility.yul\":25761:25768   */\n      dup4\n        /* \"#utility.yul\":25758:25777   */\n      lt\n        /* \"#utility.yul\":25755:25934   */\n      iszero\n      tag_754\n      jumpi\n        /* \"#utility.yul\":25828:25837   */\n      dup5\n        /* \"#utility.yul\":25823:25826   */\n      dup10\n        /* \"#utility.yul\":25819:25838   */\n      add\n        /* \"#utility.yul\":25813:25839   */\n      mload\n        /* \"#utility.yul\":25871:25919   */\n      tag_755\n        /* \"#utility.yul\":25913:25917   */\n      0x1f\n        /* \"#utility.yul\":25905:25911   */\n      dup10\n        /* \"#utility.yul\":25901:25918   */\n      and\n        /* \"#utility.yul\":25890:25899   */\n      dup3\n        /* \"#utility.yul\":25871:25919   */\n      tag_453\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":25863:25869   */\n      dup4\n        /* \"#utility.yul\":25856:25920   */\n      sstore\n        /* \"#utility.yul\":25778:25934   */\n      pop\n        /* \"#utility.yul\":25755:25934   */\n    tag_754:\n        /* \"#utility.yul\":25980:25981   */\n      0x01\n        /* \"#utility.yul\":25976:25977   */\n      0x02\n        /* \"#utility.yul\":25968:25974   */\n      dup9\n        /* \"#utility.yul\":25964:25978   */\n      mul\n        /* \"#utility.yul\":25960:25982   */\n      add\n        /* \"#utility.yul\":25954:25958   */\n      dup9\n        /* \"#utility.yul\":25947:25983   */\n      sstore\n        /* \"#utility.yul\":25382:25993   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25345:26232   */\n    tag_746:\n      pop\n        /* \"#utility.yul\":24935:26238   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24843:26238   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26244:26342   */\n    tag_455:\n        /* \"#utility.yul\":26295:26301   */\n      0x00\n        /* \"#utility.yul\":26329:26334   */\n      dup2\n        /* \"#utility.yul\":26323:26335   */\n      mload\n        /* \"#utility.yul\":26313:26335   */\n      swap1\n      pop\n        /* \"#utility.yul\":26244:26342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26348:26516   */\n    tag_456:\n        /* \"#utility.yul\":26431:26442   */\n      0x00\n        /* \"#utility.yul\":26465:26471   */\n      dup3\n        /* \"#utility.yul\":26460:26463   */\n      dup3\n        /* \"#utility.yul\":26453:26472   */\n      mstore\n        /* \"#utility.yul\":26505:26509   */\n      0x20\n        /* \"#utility.yul\":26500:26503   */\n      dup3\n        /* \"#utility.yul\":26496:26510   */\n      add\n        /* \"#utility.yul\":26481:26510   */\n      swap1\n      pop\n        /* \"#utility.yul\":26348:26516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26522:26895   */\n    tag_457:\n        /* \"#utility.yul\":26608:26611   */\n      0x00\n        /* \"#utility.yul\":26636:26674   */\n      tag_759\n        /* \"#utility.yul\":26668:26673   */\n      dup3\n        /* \"#utility.yul\":26636:26674   */\n      tag_455\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":26690:26760   */\n      tag_760\n        /* \"#utility.yul\":26753:26759   */\n      dup2\n        /* \"#utility.yul\":26748:26751   */\n      dup6\n        /* \"#utility.yul\":26690:26760   */\n      tag_456\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":26683:26760   */\n      swap4\n      pop\n        /* \"#utility.yul\":26769:26834   */\n      tag_761\n        /* \"#utility.yul\":26827:26833   */\n      dup2\n        /* \"#utility.yul\":26822:26825   */\n      dup6\n        /* \"#utility.yul\":26815:26819   */\n      0x20\n        /* \"#utility.yul\":26808:26813   */\n      dup7\n        /* \"#utility.yul\":26804:26820   */\n      add\n        /* \"#utility.yul\":26769:26834   */\n      tag_400\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":26859:26888   */\n      tag_762\n        /* \"#utility.yul\":26881:26887   */\n      dup2\n        /* \"#utility.yul\":26859:26888   */\n      tag_401\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":26854:26857   */\n      dup5\n        /* \"#utility.yul\":26850:26889   */\n      add\n        /* \"#utility.yul\":26843:26889   */\n      swap2\n      pop\n        /* \"#utility.yul\":26612:26895   */\n      pop\n        /* \"#utility.yul\":26522:26895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26901:27541   */\n    tag_276:\n        /* \"#utility.yul\":27096:27100   */\n      0x00\n        /* \"#utility.yul\":27134:27137   */\n      0x80\n        /* \"#utility.yul\":27123:27132   */\n      dup3\n        /* \"#utility.yul\":27119:27138   */\n      add\n        /* \"#utility.yul\":27111:27138   */\n      swap1\n      pop\n        /* \"#utility.yul\":27148:27219   */\n      tag_764\n        /* \"#utility.yul\":27216:27217   */\n      0x00\n        /* \"#utility.yul\":27205:27214   */\n      dup4\n        /* \"#utility.yul\":27201:27218   */\n      add\n        /* \"#utility.yul\":27192:27198   */\n      dup8\n        /* \"#utility.yul\":27148:27219   */\n      tag_408\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":27229:27301   */\n      tag_765\n        /* \"#utility.yul\":27297:27299   */\n      0x20\n        /* \"#utility.yul\":27286:27295   */\n      dup4\n        /* \"#utility.yul\":27282:27300   */\n      add\n        /* \"#utility.yul\":27273:27279   */\n      dup7\n        /* \"#utility.yul\":27229:27301   */\n      tag_408\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":27311:27383   */\n      tag_766\n        /* \"#utility.yul\":27379:27381   */\n      0x40\n        /* \"#utility.yul\":27368:27377   */\n      dup4\n        /* \"#utility.yul\":27364:27382   */\n      add\n        /* \"#utility.yul\":27355:27361   */\n      dup6\n        /* \"#utility.yul\":27311:27383   */\n      tag_419\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":27430:27439   */\n      dup2\n        /* \"#utility.yul\":27424:27428   */\n      dup2\n        /* \"#utility.yul\":27420:27440   */\n      sub\n        /* \"#utility.yul\":27415:27417   */\n      0x60\n        /* \"#utility.yul\":27404:27413   */\n      dup4\n        /* \"#utility.yul\":27400:27418   */\n      add\n        /* \"#utility.yul\":27393:27441   */\n      mstore\n        /* \"#utility.yul\":27458:27534   */\n      tag_767\n        /* \"#utility.yul\":27529:27533   */\n      dup2\n        /* \"#utility.yul\":27520:27526   */\n      dup5\n        /* \"#utility.yul\":27458:27534   */\n      tag_457\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":27450:27534   */\n      swap1\n      pop\n        /* \"#utility.yul\":26901:27541   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27547:27688   */\n    tag_458:\n        /* \"#utility.yul\":27603:27608   */\n      0x00\n        /* \"#utility.yul\":27634:27640   */\n      dup2\n        /* \"#utility.yul\":27628:27641   */\n      mload\n        /* \"#utility.yul\":27619:27641   */\n      swap1\n      pop\n        /* \"#utility.yul\":27650:27682   */\n      tag_769\n        /* \"#utility.yul\":27676:27681   */\n      dup2\n        /* \"#utility.yul\":27650:27682   */\n      tag_394\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":27547:27688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27694:28043   */\n    tag_279:\n        /* \"#utility.yul\":27763:27769   */\n      0x00\n        /* \"#utility.yul\":27812:27814   */\n      0x20\n        /* \"#utility.yul\":27800:27809   */\n      dup3\n        /* \"#utility.yul\":27791:27798   */\n      dup5\n        /* \"#utility.yul\":27787:27810   */\n      sub\n        /* \"#utility.yul\":27783:27815   */\n      slt\n        /* \"#utility.yul\":27780:27899   */\n      iszero\n      tag_771\n      jumpi\n        /* \"#utility.yul\":27818:27897   */\n      tag_772\n      tag_391\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":27780:27899   */\n    tag_771:\n        /* \"#utility.yul\":27938:27939   */\n      0x00\n        /* \"#utility.yul\":27963:28026   */\n      tag_773\n        /* \"#utility.yul\":28018:28025   */\n      dup5\n        /* \"#utility.yul\":28009:28015   */\n      dup3\n        /* \"#utility.yul\":27998:28007   */\n      dup6\n        /* \"#utility.yul\":27994:28016   */\n      add\n        /* \"#utility.yul\":27963:28026   */\n      tag_458\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":27953:28026   */\n      swap2\n      pop\n        /* \"#utility.yul\":27909:28036   */\n      pop\n        /* \"#utility.yul\":27694:28043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28049:28197   */\n    tag_459:\n        /* \"#utility.yul\":28151:28162   */\n      0x00\n        /* \"#utility.yul\":28188:28191   */\n      dup2\n        /* \"#utility.yul\":28173:28191   */\n      swap1\n      pop\n        /* \"#utility.yul\":28049:28197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28203:28593   */\n    tag_460:\n        /* \"#utility.yul\":28309:28312   */\n      0x00\n        /* \"#utility.yul\":28337:28376   */\n      tag_776\n        /* \"#utility.yul\":28370:28375   */\n      dup3\n        /* \"#utility.yul\":28337:28376   */\n      tag_398\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":28392:28481   */\n      tag_777\n        /* \"#utility.yul\":28474:28480   */\n      dup2\n        /* \"#utility.yul\":28469:28472   */\n      dup6\n        /* \"#utility.yul\":28392:28481   */\n      tag_459\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":28385:28481   */\n      swap4\n      pop\n        /* \"#utility.yul\":28490:28555   */\n      tag_778\n        /* \"#utility.yul\":28548:28554   */\n      dup2\n        /* \"#utility.yul\":28543:28546   */\n      dup6\n        /* \"#utility.yul\":28536:28540   */\n      0x20\n        /* \"#utility.yul\":28529:28534   */\n      dup7\n        /* \"#utility.yul\":28525:28541   */\n      add\n        /* \"#utility.yul\":28490:28555   */\n      tag_400\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":28580:28586   */\n      dup1\n        /* \"#utility.yul\":28575:28578   */\n      dup5\n        /* \"#utility.yul\":28571:28587   */\n      add\n        /* \"#utility.yul\":28564:28587   */\n      swap2\n      pop\n        /* \"#utility.yul\":28313:28593   */\n      pop\n        /* \"#utility.yul\":28203:28593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28599:29034   */\n    tag_304:\n        /* \"#utility.yul\":28779:28782   */\n      0x00\n        /* \"#utility.yul\":28801:28896   */\n      tag_780\n        /* \"#utility.yul\":28892:28895   */\n      dup3\n        /* \"#utility.yul\":28883:28889   */\n      dup6\n        /* \"#utility.yul\":28801:28896   */\n      tag_460\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":28794:28896   */\n      swap2\n      pop\n        /* \"#utility.yul\":28913:29008   */\n      tag_781\n        /* \"#utility.yul\":29004:29007   */\n      dup3\n        /* \"#utility.yul\":28995:29001   */\n      dup5\n        /* \"#utility.yul\":28913:29008   */\n      tag_460\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":28906:29008   */\n      swap2\n      pop\n        /* \"#utility.yul\":29025:29028   */\n      dup2\n        /* \"#utility.yul\":29018:29028   */\n      swap1\n      pop\n        /* \"#utility.yul\":28599:29034   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d9c44b52f69ad304f672aa4c55274c8ad2ddd52401c23cab1b65cebfa94efe6564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3170": {
									"entryPoint": null,
									"id": 3170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_406": {
									"entryPoint": null,
									"id": 406,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 331,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:19",
										"nodeType": "YulBlock",
										"src": "0:6778:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "759:80:19",
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nativeSrc": "769:22:19",
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nativeSrc": "778:13:19",
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nativeSrc": "800:33:19",
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nativeSrc": "800:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:19",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:19",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:19",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nativeSrc": "922:274:19",
													"nodeType": "YulBlock",
													"src": "922:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:19",
																"nodeType": "YulBlock",
																"src": "968:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:19"
																			},
																			"nativeSrc": "970:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:19"
																		},
																		"nativeSrc": "970:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:19"
																		},
																		"nativeSrc": "939:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:19",
																		"nodeType": "YulLiteral",
																		"src": "964:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:19"
																},
																"nativeSrc": "935:32:19",
																"nodeType": "YulFunctionCall",
																"src": "935:32:19"
															},
															"nativeSrc": "932:119:19",
															"nodeType": "YulIf",
															"src": "932:119:19"
														},
														{
															"nativeSrc": "1061:128:19",
															"nodeType": "YulBlock",
															"src": "1061:128:19",
															"statements": [
																{
																	"nativeSrc": "1076:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:19"
																				},
																				"nativeSrc": "1147:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:19"
																		},
																		"nativeSrc": "1115:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:19",
														"nodeType": "YulTypedName",
														"src": "892:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:19",
														"nodeType": "YulTypedName",
														"src": "903:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:19",
														"nodeType": "YulTypedName",
														"src": "915:6:19",
														"type": ""
													}
												],
												"src": "845:351:19"
											},
											{
												"body": {
													"nativeSrc": "1261:40:19",
													"nodeType": "YulBlock",
													"src": "1261:40:19",
													"statements": [
														{
															"nativeSrc": "1272:22:19",
															"nodeType": "YulAssignment",
															"src": "1272:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:19"
																},
																"nativeSrc": "1282:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:19",
														"nodeType": "YulTypedName",
														"src": "1244:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:19",
														"nodeType": "YulTypedName",
														"src": "1254:6:19",
														"type": ""
													}
												],
												"src": "1202:99:19"
											},
											{
												"body": {
													"nativeSrc": "1335:152:19",
													"nodeType": "YulBlock",
													"src": "1335:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:19"
																},
																"nativeSrc": "1345:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:19"
															},
															"nativeSrc": "1345:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:19"
																},
																"nativeSrc": "1442:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:19"
															},
															"nativeSrc": "1442:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:19"
																},
																"nativeSrc": "1466:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:19"
															},
															"nativeSrc": "1466:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:19"
											},
											{
												"body": {
													"nativeSrc": "1521:152:19",
													"nodeType": "YulBlock",
													"src": "1521:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:19"
																},
																"nativeSrc": "1531:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:19"
															},
															"nativeSrc": "1531:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:19"
																},
																"nativeSrc": "1628:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:19"
															},
															"nativeSrc": "1628:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:19"
																},
																"nativeSrc": "1652:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:19"
															},
															"nativeSrc": "1652:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:19"
											},
											{
												"body": {
													"nativeSrc": "1730:269:19",
													"nodeType": "YulBlock",
													"src": "1730:269:19",
													"statements": [
														{
															"nativeSrc": "1740:22:19",
															"nodeType": "YulAssignment",
															"src": "1740:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:19"
																},
																"nativeSrc": "1750:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:19"
																}
															]
														},
														{
															"nativeSrc": "1771:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:19"
																},
																"nativeSrc": "1797:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:19",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:19",
																"nodeType": "YulBlock",
																"src": "1848:51:19",
																"statements": [
																	{
																		"nativeSrc": "1862:27:19",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:19",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:19"
																			},
																			"nativeSrc": "1872:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:19"
																},
																"nativeSrc": "1821:26:19",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:19"
															},
															"nativeSrc": "1818:81:19",
															"nodeType": "YulIf",
															"src": "1818:81:19"
														},
														{
															"body": {
																"nativeSrc": "1951:42:19",
																"nodeType": "YulBlock",
																"src": "1951:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:19"
																			},
																			"nativeSrc": "1965:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:19"
																		},
																		"nativeSrc": "1965:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:19"
																		},
																		"nativeSrc": "1935:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:19"
																},
																"nativeSrc": "1912:38:19",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:19"
															},
															"nativeSrc": "1909:84:19",
															"nodeType": "YulIf",
															"src": "1909:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:19",
														"nodeType": "YulTypedName",
														"src": "1714:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:19",
														"nodeType": "YulTypedName",
														"src": "1723:6:19",
														"type": ""
													}
												],
												"src": "1679:320:19"
											},
											{
												"body": {
													"nativeSrc": "2059:87:19",
													"nodeType": "YulBlock",
													"src": "2059:87:19",
													"statements": [
														{
															"nativeSrc": "2069:11:19",
															"nodeType": "YulAssignment",
															"src": "2069:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:19",
																"nodeType": "YulIdentifier",
																"src": "2077:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:19"
																},
																"nativeSrc": "2090:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:19"
															},
															"nativeSrc": "2090:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:19"
														},
														{
															"nativeSrc": "2113:26:19",
															"nodeType": "YulAssignment",
															"src": "2113:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:19"
																},
																"nativeSrc": "2121:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:19",
														"nodeType": "YulTypedName",
														"src": "2046:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:19",
														"nodeType": "YulTypedName",
														"src": "2054:4:19",
														"type": ""
													}
												],
												"src": "2005:141:19"
											},
											{
												"body": {
													"nativeSrc": "2196:49:19",
													"nodeType": "YulBlock",
													"src": "2196:49:19",
													"statements": [
														{
															"nativeSrc": "2206:33:19",
															"nodeType": "YulAssignment",
															"src": "2206:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:19"
																		},
																		"nativeSrc": "2220:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:19"
																},
																"nativeSrc": "2216:23:19",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:19",
														"nodeType": "YulTypedName",
														"src": "2179:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:19",
														"nodeType": "YulTypedName",
														"src": "2189:6:19",
														"type": ""
													}
												],
												"src": "2152:93:19"
											},
											{
												"body": {
													"nativeSrc": "2304:54:19",
													"nodeType": "YulBlock",
													"src": "2304:54:19",
													"statements": [
														{
															"nativeSrc": "2314:37:19",
															"nodeType": "YulAssignment",
															"src": "2314:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:19"
																},
																"nativeSrc": "2335:16:19",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:19",
														"nodeType": "YulTypedName",
														"src": "2279:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:19",
														"nodeType": "YulTypedName",
														"src": "2285:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:19",
														"nodeType": "YulTypedName",
														"src": "2295:8:19",
														"type": ""
													}
												],
												"src": "2251:107:19"
											},
											{
												"body": {
													"nativeSrc": "2440:317:19",
													"nodeType": "YulBlock",
													"src": "2440:317:19",
													"statements": [
														{
															"nativeSrc": "2450:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:19"
																},
																"nativeSrc": "2467:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:19",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:19",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:19"
																},
																"nativeSrc": "2506:97:19",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:19",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:19",
															"nodeType": "YulAssignment",
															"src": "2612:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:19"
																},
																"nativeSrc": "2624:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:19"
																}
															]
														},
														{
															"nativeSrc": "2672:30:19",
															"nodeType": "YulAssignment",
															"src": "2672:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:19"
																		},
																		"nativeSrc": "2692:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:19"
																},
																"nativeSrc": "2681:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:19"
																}
															]
														},
														{
															"nativeSrc": "2711:40:19",
															"nodeType": "YulAssignment",
															"src": "2711:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:19"
																		},
																		"nativeSrc": "2731:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:19"
																},
																"nativeSrc": "2721:30:19",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:19",
														"nodeType": "YulTypedName",
														"src": "2401:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:19",
														"nodeType": "YulTypedName",
														"src": "2408:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:19",
														"nodeType": "YulTypedName",
														"src": "2420:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:19",
														"nodeType": "YulTypedName",
														"src": "2433:6:19",
														"type": ""
													}
												],
												"src": "2364:393:19"
											},
											{
												"body": {
													"nativeSrc": "2808:32:19",
													"nodeType": "YulBlock",
													"src": "2808:32:19",
													"statements": [
														{
															"nativeSrc": "2818:16:19",
															"nodeType": "YulAssignment",
															"src": "2818:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:19",
																"nodeType": "YulIdentifier",
																"src": "2829:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:19",
														"nodeType": "YulTypedName",
														"src": "2790:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:19",
														"nodeType": "YulTypedName",
														"src": "2800:7:19",
														"type": ""
													}
												],
												"src": "2763:77:19"
											},
											{
												"body": {
													"nativeSrc": "2878:28:19",
													"nodeType": "YulBlock",
													"src": "2878:28:19",
													"statements": [
														{
															"nativeSrc": "2888:12:19",
															"nodeType": "YulAssignment",
															"src": "2888:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:19",
																"nodeType": "YulIdentifier",
																"src": "2895:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:19",
														"nodeType": "YulTypedName",
														"src": "2864:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:19",
														"nodeType": "YulTypedName",
														"src": "2874:3:19",
														"type": ""
													}
												],
												"src": "2846:60:19"
											},
											{
												"body": {
													"nativeSrc": "2972:82:19",
													"nodeType": "YulBlock",
													"src": "2972:82:19",
													"statements": [
														{
															"nativeSrc": "2982:66:19",
															"nodeType": "YulAssignment",
															"src": "2982:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:19"
																				},
																				"nativeSrc": "3022:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:19"
																		},
																		"nativeSrc": "3013:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:19"
																},
																"nativeSrc": "2995:53:19",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:19",
														"nodeType": "YulTypedName",
														"src": "2952:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:19",
														"nodeType": "YulTypedName",
														"src": "2962:9:19",
														"type": ""
													}
												],
												"src": "2912:142:19"
											},
											{
												"body": {
													"nativeSrc": "3107:28:19",
													"nodeType": "YulBlock",
													"src": "3107:28:19",
													"statements": [
														{
															"nativeSrc": "3117:12:19",
															"nodeType": "YulAssignment",
															"src": "3117:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:19",
																"nodeType": "YulIdentifier",
																"src": "3124:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:19",
														"nodeType": "YulTypedName",
														"src": "3093:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:19",
														"nodeType": "YulTypedName",
														"src": "3103:3:19",
														"type": ""
													}
												],
												"src": "3060:75:19"
											},
											{
												"body": {
													"nativeSrc": "3217:193:19",
													"nodeType": "YulBlock",
													"src": "3217:193:19",
													"statements": [
														{
															"nativeSrc": "3227:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:19"
																},
																"nativeSrc": "3251:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:19",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:19"
																				},
																				"nativeSrc": "3340:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:19"
																				},
																				"nativeSrc": "3361:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:19"
																		},
																		"nativeSrc": "3312:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:19"
																},
																"nativeSrc": "3299:105:19",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:19"
															},
															"nativeSrc": "3299:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:19",
														"nodeType": "YulTypedName",
														"src": "3194:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:19",
														"nodeType": "YulTypedName",
														"src": "3200:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:19",
														"nodeType": "YulTypedName",
														"src": "3208:7:19",
														"type": ""
													}
												],
												"src": "3141:269:19"
											},
											{
												"body": {
													"nativeSrc": "3465:24:19",
													"nodeType": "YulBlock",
													"src": "3465:24:19",
													"statements": [
														{
															"nativeSrc": "3475:8:19",
															"nodeType": "YulAssignment",
															"src": "3475:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:19",
																"nodeType": "YulLiteral",
																"src": "3482:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:19",
														"nodeType": "YulTypedName",
														"src": "3461:3:19",
														"type": ""
													}
												],
												"src": "3416:73:19"
											},
											{
												"body": {
													"nativeSrc": "3548:136:19",
													"nodeType": "YulBlock",
													"src": "3548:136:19",
													"statements": [
														{
															"nativeSrc": "3558:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:19"
																},
																"nativeSrc": "3572:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:19"
																},
																"nativeSrc": "3613:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:19"
															},
															"nativeSrc": "3613:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:19",
														"nodeType": "YulTypedName",
														"src": "3534:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:19",
														"nodeType": "YulTypedName",
														"src": "3540:6:19",
														"type": ""
													}
												],
												"src": "3495:189:19"
											},
											{
												"body": {
													"nativeSrc": "3740:136:19",
													"nodeType": "YulBlock",
													"src": "3740:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:19",
																"nodeType": "YulBlock",
																"src": "3807:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:19"
																			},
																			"nativeSrc": "3821:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:19"
																		},
																		"nativeSrc": "3821:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:19"
																},
																"nativeSrc": "3757:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:19"
															},
															"nativeSrc": "3750:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:19",
																"nodeType": "YulBlock",
																"src": "3772:26:19",
																"statements": [
																	{
																		"nativeSrc": "3774:22:19",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:19"
																			},
																			"nativeSrc": "3783:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:19",
																"nodeType": "YulBlock",
																"src": "3754:2:19",
																"statements": []
															},
															"src": "3750:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:19",
														"nodeType": "YulTypedName",
														"src": "3728:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:19",
														"nodeType": "YulTypedName",
														"src": "3735:3:19",
														"type": ""
													}
												],
												"src": "3690:186:19"
											},
											{
												"body": {
													"nativeSrc": "3961:464:19",
													"nodeType": "YulBlock",
													"src": "3961:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:19",
																"nodeType": "YulBlock",
																"src": "3987:431:19",
																"statements": [
																	{
																		"nativeSrc": "4001:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:19"
																			},
																			"nativeSrc": "4017:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:19",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:19"
																					},
																					"nativeSrc": "4101:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:19"
																			},
																			"nativeSrc": "4087:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:19",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:19",
																			"nodeType": "YulBlock",
																			"src": "4288:27:19",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:19",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:19",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:19"
																			},
																			"nativeSrc": "4269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:19"
																		},
																		"nativeSrc": "4266:49:19",
																		"nodeType": "YulIf",
																		"src": "4266:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:19"
																							},
																							"nativeSrc": "4384:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:19"
																					},
																					"nativeSrc": "4370:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:19"
																			},
																			"nativeSrc": "4328:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:19"
																		},
																		"nativeSrc": "4328:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:19"
																},
																"nativeSrc": "3975:11:19",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:19"
															},
															"nativeSrc": "3972:446:19",
															"nodeType": "YulIf",
															"src": "3972:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:19",
														"nodeType": "YulTypedName",
														"src": "3937:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:19",
														"nodeType": "YulTypedName",
														"src": "3944:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:19",
														"nodeType": "YulTypedName",
														"src": "3949:10:19",
														"type": ""
													}
												],
												"src": "3882:543:19"
											},
											{
												"body": {
													"nativeSrc": "4494:54:19",
													"nodeType": "YulBlock",
													"src": "4494:54:19",
													"statements": [
														{
															"nativeSrc": "4504:37:19",
															"nodeType": "YulAssignment",
															"src": "4504:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:19"
																},
																"nativeSrc": "4525:16:19",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:19",
														"nodeType": "YulTypedName",
														"src": "4469:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:19",
														"nodeType": "YulTypedName",
														"src": "4475:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:19",
														"nodeType": "YulTypedName",
														"src": "4485:8:19",
														"type": ""
													}
												],
												"src": "4431:117:19"
											},
											{
												"body": {
													"nativeSrc": "4605:118:19",
													"nodeType": "YulBlock",
													"src": "4605:118:19",
													"statements": [
														{
															"nativeSrc": "4615:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:19"
																				},
																				"nativeSrc": "4660:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:19"
																				},
																				"nativeSrc": "4675:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:19"
																		},
																		"nativeSrc": "4631:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:19"
																},
																"nativeSrc": "4627:56:19",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:19",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:19",
															"nodeType": "YulAssignment",
															"src": "4692:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:19"
																},
																"nativeSrc": "4702:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:19",
														"nodeType": "YulTypedName",
														"src": "4582:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:19",
														"nodeType": "YulTypedName",
														"src": "4588:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:19",
														"nodeType": "YulTypedName",
														"src": "4598:6:19",
														"type": ""
													}
												],
												"src": "4554:169:19"
											},
											{
												"body": {
													"nativeSrc": "4809:214:19",
													"nodeType": "YulBlock",
													"src": "4809:214:19",
													"statements": [
														{
															"nativeSrc": "4942:37:19",
															"nodeType": "YulAssignment",
															"src": "4942:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:19"
																},
																"nativeSrc": "4950:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:19"
																}
															]
														},
														{
															"nativeSrc": "4988:29:19",
															"nodeType": "YulAssignment",
															"src": "4988:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:19"
																		},
																		"nativeSrc": "5005:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:19"
																},
																"nativeSrc": "4996:21:19",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:19",
														"nodeType": "YulTypedName",
														"src": "4790:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:19",
														"nodeType": "YulTypedName",
														"src": "4796:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:19",
														"nodeType": "YulTypedName",
														"src": "4804:4:19",
														"type": ""
													}
												],
												"src": "4728:295:19"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:19",
													"nodeType": "YulBlock",
													"src": "5120:1303:19",
													"statements": [
														{
															"nativeSrc": "5131:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:19"
																},
																"nativeSrc": "5145:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:19",
																"nodeType": "YulBlock",
																"src": "5267:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:19"
																			},
																			"nativeSrc": "5269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:19"
																		},
																		"nativeSrc": "5269:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:19",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:19"
																},
																"nativeSrc": "5236:30:19",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:19"
															},
															"nativeSrc": "5233:56:19",
															"nodeType": "YulIf",
															"src": "5233:56:19"
														},
														{
															"nativeSrc": "5299:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:19"
																		},
																		"nativeSrc": "5339:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:19"
																},
																"nativeSrc": "5313:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:19"
																},
																"nativeSrc": "5398:67:19",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:19"
															},
															"nativeSrc": "5398:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:19"
														},
														{
															"nativeSrc": "5475:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:19",
																"nodeType": "YulLiteral",
																"src": "5492:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:19",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:19",
															"nodeType": "YulAssignment",
															"src": "5503:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:19",
																"nodeType": "YulLiteral",
																"src": "5516:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:19",
																		"nodeType": "YulBlock",
																		"src": "5567:611:19",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:19"
																							},
																							"nativeSrc": "5608:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:19"
																					},
																					"nativeSrc": "5596:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:19",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:19"
																					},
																					"nativeSrc": "5646:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:19",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:19",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:19",
																					"nodeType": "YulBlock",
																					"src": "5764:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:19"
																												},
																												"nativeSrc": "5803:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:19"
																										},
																										"nativeSrc": "5797:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:19"
																								},
																								"nativeSrc": "5782:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:19"
																							},
																							"nativeSrc": "5782:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:19"
																						},
																						{
																							"nativeSrc": "5841:24:19",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:19",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:19"
																								},
																								"nativeSrc": "5851:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:19",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:19",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:19"
																								},
																								"nativeSrc": "5895:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:19"
																					},
																					"nativeSrc": "5727:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:19"
																				},
																				"nativeSrc": "5719:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:19",
																					"nodeType": "YulBlock",
																					"src": "5742:21:19",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:19",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:19",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:19"
																								},
																								"nativeSrc": "5749:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:19",
																					"nodeType": "YulBlock",
																					"src": "5723:3:19",
																					"statements": []
																				},
																				"src": "5719:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:19",
																					"nodeType": "YulBlock",
																					"src": "5963:156:19",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:19"
																										},
																										"nativeSrc": "6004:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:19"
																								},
																								"nativeSrc": "5998:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:19",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:19",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:19"
																												},
																												"nativeSrc": "6086:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:19"
																										},
																										"nativeSrc": "6056:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:19"
																								},
																								"nativeSrc": "6041:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:19"
																							},
																							"nativeSrc": "6041:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:19"
																					},
																					"nativeSrc": "5943:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:19"
																				},
																				"nativeSrc": "5940:179:19",
																				"nodeType": "YulIf",
																				"src": "5940:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:19",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:19"
																									},
																									"nativeSrc": "6149:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:19",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:19"
																							},
																							"nativeSrc": "6145:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:19"
																					},
																					"nativeSrc": "6132:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:19"
																				},
																				"nativeSrc": "6132:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:19"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:19",
																	"nodeType": "YulCase",
																	"src": "5560:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:19",
																		"nodeType": "YulBlock",
																		"src": "6195:222:19",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:19",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:19",
																					"nodeType": "YulBlock",
																					"src": "6246:67:19",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:19",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:19"
																										},
																										"nativeSrc": "6279:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:19"
																								},
																								"nativeSrc": "6273:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:19"
																				},
																				"nativeSrc": "6236:77:19",
																				"nodeType": "YulIf",
																				"src": "6236:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:19"
																							},
																							"nativeSrc": "6339:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:19"
																					},
																					"nativeSrc": "6326:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:19"
																				},
																				"nativeSrc": "6326:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:19"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:19",
																	"nodeType": "YulCase",
																	"src": "6187:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:19"
																},
																"nativeSrc": "5537:14:19",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:19"
															},
															"nativeSrc": "5530:887:19",
															"nodeType": "YulSwitch",
															"src": "5530:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:19",
														"nodeType": "YulTypedName",
														"src": "5109:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:19",
														"nodeType": "YulTypedName",
														"src": "5115:3:19",
														"type": ""
													}
												],
												"src": "5028:1395:19"
											},
											{
												"body": {
													"nativeSrc": "6494:53:19",
													"nodeType": "YulBlock",
													"src": "6494:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:19"
																		},
																		"nativeSrc": "6516:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:19"
																},
																"nativeSrc": "6504:37:19",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:19"
															},
															"nativeSrc": "6504:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:19",
														"nodeType": "YulTypedName",
														"src": "6482:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:19",
														"nodeType": "YulTypedName",
														"src": "6489:3:19",
														"type": ""
													}
												],
												"src": "6429:118:19"
											},
											{
												"body": {
													"nativeSrc": "6651:124:19",
													"nodeType": "YulBlock",
													"src": "6651:124:19",
													"statements": [
														{
															"nativeSrc": "6661:26:19",
															"nodeType": "YulAssignment",
															"src": "6661:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:19"
																},
																"nativeSrc": "6669:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:19"
																		},
																		"nativeSrc": "6750:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:19"
																},
																"nativeSrc": "6697:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:19"
															},
															"nativeSrc": "6697:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:19",
														"nodeType": "YulTypedName",
														"src": "6623:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:19",
														"nodeType": "YulTypedName",
														"src": "6635:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:19",
														"nodeType": "YulTypedName",
														"src": "6646:4:19",
														"type": ""
													}
												],
												"src": "6553:222:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526101f4600855348015610015575f80fd5b506040516132213803806132218339818101604052810190610037919061026c565b806040518060400160405280600881526020017f46616e63794e46540000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f464e540000000000000000000000000000000000000000000000000000000000815250815f90816100b291906104d1565b5080600190816100c291906104d1565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610135575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012c91906105af565b60405180910390fd5b6101448161014b60201b60201c565b50506105c8565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023b82610212565b9050919050565b61024b81610231565b8114610255575f80fd5b50565b5f8151905061026681610242565b92915050565b5f602082840312156102815761028061020e565b5b5f61028e84828501610258565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031257607f821691505b602082108103610325576103246102ce565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261034c565b610391868361034c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d56103d06103cb846103a9565b6103b2565b6103a9565b9050919050565b5f819050919050565b6103ee836103bb565b6104026103fa826103dc565b848454610358565b825550505050565b5f90565b61041661040a565b6104218184846103e5565b505050565b5b81811015610444576104395f8261040e565b600181019050610427565b5050565b601f8211156104895761045a8161032b565b6104638461033d565b81016020851015610472578190505b61048661047e8561033d565b830182610426565b50505b505050565b5f82821c905092915050565b5f6104a95f198460080261048e565b1980831691505092915050565b5f6104c1838361049a565b9150826002028217905092915050565b6104da82610297565b67ffffffffffffffff8111156104f3576104f26102a1565b5b6104fd82546102fb565b610508828285610448565b5f60209050601f831160018114610539575f8415610527578287015190505b61053185826104b6565b865550610598565b601f1984166105478661032b565b5f5b8281101561056e57848901518255600182019150602085019450602081019050610549565b8683101561058b5784890151610587601f89168261049a565b8355505b6001600288020188555050505b505050505050565b6105a981610231565b82525050565b5f6020820190506105c25f8301846105a0565b92915050565b612c4c806105d55f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063a22cb4651161007a578063a22cb46514610385578063b88d4fde146103a1578063c87b56dd146103bd578063cef6d368146103ed578063e985e9c51461041e578063f2fde38b1461044e5761014b565b8063715018a6146102d55780637aae3ccb146102df5780638a71bb2d1461030f5780638da5cb5b1461032d57806395d89b411461034b5780639caea80a146103695761014b565b80632923ce11116101135780632923ce111461020557806342842e0e1461022157806342966c681461023d5780635146ea0e146102595780636352211e1461027557806370a08231146102a55761014b565b806301ffc9a71461014f57806306fdde031461017f578063081812fc1461019d578063095ea7b3146101cd57806323b872dd146101e9575b5f80fd5b61016960048036038101906101649190611d23565b61046a565b6040516101769190611d68565b60405180910390f35b61018761047b565b6040516101949190611df1565b60405180910390f35b6101b760048036038101906101b29190611e44565b61050a565b6040516101c49190611eae565b60405180910390f35b6101e760048036038101906101e29190611ef1565b610525565b005b61020360048036038101906101fe9190611f2f565b61053b565b005b61021f600480360381019061021a91906120ab565b61063a565b005b61023b60048036038101906102369190611f2f565b61066a565b005b61025760048036038101906102529190611e44565b610689565b005b610273600480360381019061026e919061212b565b61069f565b005b61028f600480360381019061028a9190611e44565b6106d2565b60405161029c9190611eae565b60405180910390f35b6102bf60048036038101906102ba9190612169565b6106e3565b6040516102cc91906121a3565b60405180910390f35b6102dd610799565b005b6102f960048036038101906102f49190611e44565b6107ac565b60405161030691906121a3565b60405180910390f35b6103176107c1565b60405161032491906121a3565b60405180910390f35b6103356107c7565b6040516103429190611eae565b60405180910390f35b6103536107ef565b6040516103609190611df1565b60405180910390f35b610383600480360381019061037e919061235e565b61087f565b005b61039f600480360381019061039a9190612410565b61094b565b005b6103bb60048036038101906103b691906124ec565b610961565b005b6103d760048036038101906103d29190611e44565b61097e565b6040516103e49190611df1565b60405180910390f35b61040760048036038101906104029190611e44565b610990565b60405161041592919061256c565b60405180910390f35b61043860048036038101906104339190612593565b6109be565b6040516104459190611d68565b60405180910390f35b61046860048036038101906104639190612169565b610a4c565b005b5f61047482610ad0565b9050919050565b60605f8054610489906125fe565b80601f01602080910402602001604051908101604052809291908181526020018280546104b5906125fe565b80156105005780601f106104d757610100808354040283529160200191610500565b820191905f5260205f20905b8154815290600101906020018083116104e357829003601f168201915b5050505050905090565b5f61051482610b30565b5061051e82610bb6565b9050919050565b6105378282610532610bef565b610bf6565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611eae565b60405180910390fd5b5f6105be83836105b9610bef565b610c08565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610634578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062b9392919061262e565b60405180910390fd5b50505050565b610642610e13565b5f61064d8383610e9a565b90506106598582610ef3565b6106638185610f10565b5050505050565b61068483838360405180602001604052805f815250610961565b505050565b61069b5f82610696610bef565b610c08565b5050565b6106a7610e13565b8060095f8481526020019081526020015f205f8282546106c79190612690565b925050819055505050565b5f6106dc82610b30565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610754575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161074b9190611eae565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107a1610e13565b6107aa5f610f6a565b565b6009602052805f5260405f205f915090505481565b60085481565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107fe906125fe565b80601f016020809104026020016040519081016040528092919081815260200182805461082a906125fe565b80156108755780601f1061084c57610100808354040283529160200191610875565b820191905f5260205f20905b81548152906001019060200180831161085857829003601f168201915b5050505050905090565b610887610e13565b80518251146108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c29061270d565b60405180910390fd5b5f5b8251811015610945576108fa848483815181106108ed576108ec61272b565b5b6020026020010151610ef3565b6109388382815181106109105761090f61272b565b5b602002602001015183838151811061092b5761092a61272b565b5b6020026020010151610f10565b80806001019150506108cd565b50505050565b61095d610956610bef565b838361102d565b5050565b61096c84848461053b565b61097884848484611196565b50505050565b606061098982611348565b9050919050565b5f8061099a6107c7565b612710600854856109ab9190612758565b6109b591906127c6565b91509150915091565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610a54610e13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610abb9190611eae565b60405180910390fd5b610acd81610f6a565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b295750610b2882611453565b5b9050919050565b5f80610b3b83611534565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bad57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ba491906121a3565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610c03838383600161156d565b505050565b5f80610c1384611534565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c5457610c5381848661172c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cdf57610c935f855f8061156d565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d5e57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610e1b610bef565b73ffffffffffffffffffffffffffffffffffffffff16610e396107c7565b73ffffffffffffffffffffffffffffffffffffffff1614610e9857610e5c610bef565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e8f9190611eae565b60405180910390fd5b565b5f82825f357fffffffff0000000000000000000000000000000000000000000000000000000016604051602001610ed393929190612836565b604051602081830303815290604052805190602001205f1c905092915050565b610f0c828260405180602001604052805f8152506117ef565b5050565b8060065f8481526020019081526020015f209081610f2e9190612a0f565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f5e91906121a3565b60405180910390a15050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361109d57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110949190611eae565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111899190611d68565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611342578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d9610bef565b8685856040518563ffffffff1660e01b81526004016111fb9493929190612b30565b6020604051808303815f875af192505050801561123657506040513d601f19601f820116820180604052508101906112339190612b8e565b60015b6112b7573d805f8114611264576040519150601f19603f3d011682016040523d82523d5f602084013e611269565b606091505b505f8151036112af57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112a69190611eae565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461134057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113379190611eae565b60405180910390fd5b505b50505050565b606061135382610b30565b505f60065f8481526020019081526020015f208054611371906125fe565b80601f016020809104026020016040519081016040528092919081815260200182805461139d906125fe565b80156113e85780601f106113bf576101008083540402835291602001916113e8565b820191905f5260205f20905b8154815290600101906020018083116113cb57829003601f168201915b505050505090505f6113f861180a565b90505f81510361140c57819250505061144e565b5f82511115611440578082604051602001611428929190612bf3565b6040516020818303038152906040529250505061144e565b61144984611820565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061151d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061152d575061152c82611886565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115a557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116d7575f6115b484610b30565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561161e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611631575061162f81846109be565b155b1561167357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161166a9190611eae565b60405180910390fd5b81156116d557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117378383836118ef565b6117ea575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ab57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117a291906121a3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117e192919061256c565b60405180910390fd5b505050565b6117f983836119af565b6118055f848484611196565b505050565b606060405180602001604052805f815250905090565b606061182b82610b30565b505f61183561180a565b90505f8151116118535760405180602001604052805f81525061187e565b8061185d84611aa2565b60405160200161186e929190612bf3565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119a657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611967575061196684846109be565b5b806119a557508273ffffffffffffffffffffffffffffffffffffffff1661198d83610bb6565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a1f575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a169190611eae565b60405180910390fd5b5f611a2b83835f610c08565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a9d575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a949190611eae565b60405180910390fd5b505050565b60605f6001611ab084611b6c565b0190505f8167ffffffffffffffff811115611ace57611acd611f87565b5b6040519080825280601f01601f191660200182016040528015611b005781602001600182028036833780820191505090505b5090505f82602001820190505b600115611b61578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611b5657611b55612799565b5b0494505f8503611b0d575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bc8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611bbe57611bbd612799565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c05576d04ee2d6d415b85acef81000000008381611bfb57611bfa612799565b5b0492506020810190505b662386f26fc100008310611c3457662386f26fc100008381611c2a57611c29612799565b5b0492506010810190505b6305f5e1008310611c5d576305f5e1008381611c5357611c52612799565b5b0492506008810190505b6127108310611c82576127108381611c7857611c77612799565b5b0492506004810190505b60648310611ca55760648381611c9b57611c9a612799565b5b0492506002810190505b600a8310611cb4576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d0281611cce565b8114611d0c575f80fd5b50565b5f81359050611d1d81611cf9565b92915050565b5f60208284031215611d3857611d37611cc6565b5b5f611d4584828501611d0f565b91505092915050565b5f8115159050919050565b611d6281611d4e565b82525050565b5f602082019050611d7b5f830184611d59565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611dc382611d81565b611dcd8185611d8b565b9350611ddd818560208601611d9b565b611de681611da9565b840191505092915050565b5f6020820190508181035f830152611e098184611db9565b905092915050565b5f819050919050565b611e2381611e11565b8114611e2d575f80fd5b50565b5f81359050611e3e81611e1a565b92915050565b5f60208284031215611e5957611e58611cc6565b5b5f611e6684828501611e30565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e9882611e6f565b9050919050565b611ea881611e8e565b82525050565b5f602082019050611ec15f830184611e9f565b92915050565b611ed081611e8e565b8114611eda575f80fd5b50565b5f81359050611eeb81611ec7565b92915050565b5f8060408385031215611f0757611f06611cc6565b5b5f611f1485828601611edd565b9250506020611f2585828601611e30565b9150509250929050565b5f805f60608486031215611f4657611f45611cc6565b5b5f611f5386828701611edd565b9350506020611f6486828701611edd565b9250506040611f7586828701611e30565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fbd82611da9565b810181811067ffffffffffffffff82111715611fdc57611fdb611f87565b5b80604052505050565b5f611fee611cbd565b9050611ffa8282611fb4565b919050565b5f67ffffffffffffffff82111561201957612018611f87565b5b61202282611da9565b9050602081019050919050565b828183375f83830152505050565b5f61204f61204a84611fff565b611fe5565b90508281526020810184848401111561206b5761206a611f83565b5b61207684828561202f565b509392505050565b5f82601f83011261209257612091611f7f565b5b81356120a284826020860161203d565b91505092915050565b5f805f80608085870312156120c3576120c2611cc6565b5b5f6120d087828801611edd565b945050602085013567ffffffffffffffff8111156120f1576120f0611cca565b5b6120fd8782880161207e565b935050604061210e87828801611e30565b925050606061211f87828801611e30565b91505092959194509250565b5f806040838503121561214157612140611cc6565b5b5f61214e85828601611e30565b925050602061215f85828601611e30565b9150509250929050565b5f6020828403121561217e5761217d611cc6565b5b5f61218b84828501611edd565b91505092915050565b61219d81611e11565b82525050565b5f6020820190506121b65f830184612194565b92915050565b5f67ffffffffffffffff8211156121d6576121d5611f87565b5b602082029050602081019050919050565b5f80fd5b5f6121fd6121f8846121bc565b611fe5565b905080838252602082019050602084028301858111156122205761221f6121e7565b5b835b8181101561224957806122358882611e30565b845260208401935050602081019050612222565b5050509392505050565b5f82601f83011261226757612266611f7f565b5b81356122778482602086016121eb565b91505092915050565b5f67ffffffffffffffff82111561229a57612299611f87565b5b602082029050602081019050919050565b5f6122bd6122b884612280565b611fe5565b905080838252602082019050602084028301858111156122e0576122df6121e7565b5b835b8181101561232757803567ffffffffffffffff81111561230557612304611f7f565b5b808601612312898261207e565b855260208501945050506020810190506122e2565b5050509392505050565b5f82601f83011261234557612344611f7f565b5b81356123558482602086016122ab565b91505092915050565b5f805f6060848603121561237557612374611cc6565b5b5f61238286828701611edd565b935050602084013567ffffffffffffffff8111156123a3576123a2611cca565b5b6123af86828701612253565b925050604084013567ffffffffffffffff8111156123d0576123cf611cca565b5b6123dc86828701612331565b9150509250925092565b6123ef81611d4e565b81146123f9575f80fd5b50565b5f8135905061240a816123e6565b92915050565b5f806040838503121561242657612425611cc6565b5b5f61243385828601611edd565b9250506020612444858286016123fc565b9150509250929050565b5f67ffffffffffffffff82111561246857612467611f87565b5b61247182611da9565b9050602081019050919050565b5f61249061248b8461244e565b611fe5565b9050828152602081018484840111156124ac576124ab611f83565b5b6124b784828561202f565b509392505050565b5f82601f8301126124d3576124d2611f7f565b5b81356124e384826020860161247e565b91505092915050565b5f805f806080858703121561250457612503611cc6565b5b5f61251187828801611edd565b945050602061252287828801611edd565b935050604061253387828801611e30565b925050606085013567ffffffffffffffff81111561255457612553611cca565b5b612560878288016124bf565b91505092959194509250565b5f60408201905061257f5f830185611e9f565b61258c6020830184612194565b9392505050565b5f80604083850312156125a9576125a8611cc6565b5b5f6125b685828601611edd565b92505060206125c785828601611edd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061261557607f821691505b602082108103612628576126276125d1565b5b50919050565b5f6060820190506126415f830186611e9f565b61264e6020830185612194565b61265b6040830184611e9f565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61269a82611e11565b91506126a583611e11565b92508282019050808211156126bd576126bc612663565b5b92915050565b7f4172726179206c656e677468206d69736d6174636800000000000000000000005f82015250565b5f6126f7601583611d8b565b9150612702826126c3565b602082019050919050565b5f6020820190508181035f830152612724816126eb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61276282611e11565b915061276d83611e11565b925082820261277b81611e11565b9150828204841483151761279257612791612663565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6127d082611e11565b91506127db83611e11565b9250826127eb576127ea612799565b5b828204905092915050565b5f819050919050565b61281061280b82611e11565b6127f6565b82525050565b5f819050919050565b61283061282b82611cce565b612816565b82525050565b5f61284182866127ff565b60208201915061285182856127ff565b602082019150612861828461281f565b600482019150819050949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612893565b6128d88683612893565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61291361290e61290984611e11565b6128f0565b611e11565b9050919050565b5f819050919050565b61292c836128f9565b6129406129388261291a565b84845461289f565b825550505050565b5f90565b612954612948565b61295f818484612923565b505050565b5b81811015612982576129775f8261294c565b600181019050612965565b5050565b601f8211156129c75761299881612872565b6129a184612884565b810160208510156129b0578190505b6129c46129bc85612884565b830182612964565b50505b505050565b5f82821c905092915050565b5f6129e75f19846008026129cc565b1980831691505092915050565b5f6129ff83836129d8565b9150826002028217905092915050565b612a1882611d81565b67ffffffffffffffff811115612a3157612a30611f87565b5b612a3b82546125fe565b612a46828285612986565b5f60209050601f831160018114612a77575f8415612a65578287015190505b612a6f85826129f4565b865550612ad6565b601f198416612a8586612872565b5f5b82811015612aac57848901518255600182019150602085019450602081019050612a87565b86831015612ac95784890151612ac5601f8916826129d8565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612b0282612ade565b612b0c8185612ae8565b9350612b1c818560208601611d9b565b612b2581611da9565b840191505092915050565b5f608082019050612b435f830187611e9f565b612b506020830186611e9f565b612b5d6040830185612194565b8181036060830152612b6f8184612af8565b905095945050505050565b5f81519050612b8881611cf9565b92915050565b5f60208284031215612ba357612ba2611cc6565b5b5f612bb084828501612b7a565b91505092915050565b5f81905092915050565b5f612bcd82611d81565b612bd78185612bb9565b9350612be7818560208601611d9b565b80840191505092915050565b5f612bfe8285612bc3565b9150612c0a8284612bc3565b9150819050939250505056fea2646970667358221220d9c44b52f69ad304f672aa4c55274c8ad2ddd52401c23cab1b65cebfa94efe6564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1F4 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3221 CODESIZE SUB DUP1 PUSH2 0x3221 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616E63794E4654000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x4D1 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x4D1 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x144 DUP2 PUSH2 0x14B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C8 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B DUP3 PUSH2 0x212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x231 JUMP JUMPDEST DUP2 EQ PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x20E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28E DUP5 DUP3 DUP6 ADD PUSH2 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x312 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x325 JUMPI PUSH2 0x324 PUSH2 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x387 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x34C JUMP JUMPDEST PUSH2 0x391 DUP7 DUP4 PUSH2 0x34C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D5 PUSH2 0x3D0 PUSH2 0x3CB DUP5 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE DUP4 PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FA DUP3 PUSH2 0x3DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x358 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x416 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x421 DUP2 DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x444 JUMPI PUSH2 0x439 PUSH0 DUP3 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x427 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x45A DUP2 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x463 DUP5 PUSH2 0x33D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x472 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x486 PUSH2 0x47E DUP6 PUSH2 0x33D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x426 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x48E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C1 DUP4 DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F2 PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST PUSH2 0x4FD DUP3 SLOAD PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x508 DUP3 DUP3 DUP6 PUSH2 0x448 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x539 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x527 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x531 DUP6 DUP3 PUSH2 0x4B6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x547 DUP7 PUSH2 0x32B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x56E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x58B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x587 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x49A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C4C DUP1 PUSH2 0x5D5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xCEF6D368 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44E JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x7AAE3CCB EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x9CAEA80A EQ PUSH2 0x369 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x2923CE11 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x2923CE11 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5146EA0E EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x24EC JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP3 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x474 DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x500 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x500 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x514 DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5BE DUP4 DUP4 PUSH2 0x5B9 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x634 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x642 PUSH2 0xE13 JUMP JUMPDEST PUSH0 PUSH2 0x64D DUP4 DUP4 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH2 0x659 DUP6 DUP3 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x663 DUP2 DUP6 PUSH2 0xF10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x961 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x69B PUSH0 DUP3 PUSH2 0x696 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xE13 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x2690 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x754 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x7AA PUSH0 PUSH2 0xF6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7FE SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x875 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x875 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x858 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH2 0xE13 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x945 JUMPI PUSH2 0x8FA DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8ED JUMPI PUSH2 0x8EC PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x910 JUMPI PUSH2 0x90F PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xF10 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8CD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x95D PUSH2 0x956 PUSH2 0xBEF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x96C DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x978 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1196 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x989 DUP3 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99A PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x27C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0xE13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xF6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB29 JUMPI POP PUSH2 0xB28 DUP3 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB3B DUP4 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x156D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC13 DUP5 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC54 JUMPI PUSH2 0xC53 DUP2 DUP5 DUP7 PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDF JUMPI PUSH2 0xC93 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE1B PUSH2 0xBEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE39 PUSH2 0x7C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE98 JUMPI PUSH2 0xE5C PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8F SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x17EF JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1094 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1342 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D9 PUSH2 0xBEF JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1236 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1264 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12AF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1340 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1353 DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1371 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139D SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x13F8 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x140C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x144E JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1440 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1428 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0x1449 DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x151D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x152D JUMPI POP PUSH2 0x152C DUP3 PUSH2 0x1886 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x15A5 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16D7 JUMPI PUSH0 PUSH2 0x15B4 DUP5 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x161E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1631 JUMPI POP PUSH2 0x162F DUP2 DUP5 PUSH2 0x9BE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1673 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16D5 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1737 DUP4 DUP4 DUP4 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x17EA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP3 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17F9 DUP4 DUP4 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x1805 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1196 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x182B DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH0 PUSH2 0x1835 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x187E JUMP JUMPDEST DUP1 PUSH2 0x185D DUP5 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x186E SWAP3 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19A6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1967 JUMPI POP PUSH2 0x1966 DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19A5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x198D DUP4 PUSH2 0xBB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A2B DUP4 DUP4 PUSH0 PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1AB0 DUP5 PUSH2 0x1B6C JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B00 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B61 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1B0D JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1BC8 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C05 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1BFB JUMPI PUSH2 0x1BFA PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C34 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C5D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C82 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C78 JUMPI PUSH2 0x1C77 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CA5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C9B JUMPI PUSH2 0x1C9A PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1CB4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D02 DUP2 PUSH2 0x1CCE JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1D DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D45 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC3 DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x1DCD DUP2 DUP6 PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DDD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E09 DUP2 DUP5 PUSH2 0x1DB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3E DUP2 PUSH2 0x1E1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E66 DUP5 DUP3 DUP6 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E98 DUP3 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA8 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED0 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EEB DUP2 PUSH2 0x1EC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F07 JUMPI PUSH2 0x1F06 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F14 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F25 DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F53 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F64 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F75 DUP7 DUP3 DUP8 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FBD DUP3 PUSH2 0x1DA9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEE PUSH2 0x1CBD JUMP JUMPDEST SWAP1 POP PUSH2 0x1FFA DUP3 DUP3 PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2022 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x204F PUSH2 0x204A DUP5 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x2076 DUP5 DUP3 DUP6 PUSH2 0x202F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x203D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D0 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F0 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x207E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x210E DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x211F DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x214E DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x215F DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH2 0x217D PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x218B DUP5 DUP3 DUP6 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D6 JUMPI PUSH2 0x21D5 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x21FD PUSH2 0x21F8 DUP5 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2249 JUMPI DUP1 PUSH2 0x2235 DUP9 DUP3 PUSH2 0x1E30 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2222 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2267 JUMPI PUSH2 0x2266 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2277 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x229A JUMPI PUSH2 0x2299 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22BD PUSH2 0x22B8 DUP5 PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22E0 JUMPI PUSH2 0x22DF PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2327 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2312 DUP10 DUP3 PUSH2 0x207E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2355 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2374 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2382 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x23AF DUP7 DUP3 DUP8 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x23DC DUP7 DUP3 DUP8 ADD PUSH2 0x2331 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x23EF DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x23F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x240A DUP2 PUSH2 0x23E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2426 JUMPI PUSH2 0x2425 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2433 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2444 DUP6 DUP3 DUP7 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2471 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2490 PUSH2 0x248B DUP5 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x24AB PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x24B7 DUP5 DUP3 DUP6 PUSH2 0x202F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24D3 JUMPI PUSH2 0x24D2 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x247E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2504 JUMPI PUSH2 0x2503 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2511 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2522 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2533 DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x2560 DUP8 DUP3 DUP9 ADD PUSH2 0x24BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x257F PUSH0 DUP4 ADD DUP6 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x258C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A9 JUMPI PUSH2 0x25A8 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2615 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2628 JUMPI PUSH2 0x2627 PUSH2 0x25D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2641 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x264E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x265B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x269A DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A5 DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26BD JUMPI PUSH2 0x26BC PUSH2 0x2663 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172726179206C656E677468206D69736D617463680000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH1 0x15 DUP4 PUSH2 0x1D8B JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP3 PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2724 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2762 DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x276D DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x277B DUP2 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2792 JUMPI PUSH2 0x2791 PUSH2 0x2663 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x27D0 DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x27DB DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2810 PUSH2 0x280B DUP3 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x27F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2830 PUSH2 0x282B DUP3 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2841 DUP3 DUP7 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2851 DUP3 DUP6 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2861 DUP3 DUP5 PUSH2 0x281F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x28CE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2893 JUMP JUMPDEST PUSH2 0x28D8 DUP7 DUP4 PUSH2 0x2893 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH2 0x290E PUSH2 0x2909 DUP5 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x1E11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292C DUP4 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x2940 PUSH2 0x2938 DUP3 PUSH2 0x291A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x289F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2954 PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x295F DUP2 DUP5 DUP5 PUSH2 0x2923 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2982 JUMPI PUSH2 0x2977 PUSH0 DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2965 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2998 DUP2 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x29A1 DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x29B0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x29C4 PUSH2 0x29BC DUP6 PUSH2 0x2884 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2964 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29CC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29FF DUP4 DUP4 PUSH2 0x29D8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A18 DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A31 JUMPI PUSH2 0x2A30 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2A3B DUP3 SLOAD PUSH2 0x25FE JUMP JUMPDEST PUSH2 0x2A46 DUP3 DUP3 DUP6 PUSH2 0x2986 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A77 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A65 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A6F DUP6 DUP3 PUSH2 0x29F4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A85 DUP7 PUSH2 0x2872 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2AAC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A87 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2AC9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2AC5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x29D8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B02 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2B0C DUP2 DUP6 PUSH2 0x2AE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x2B25 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B43 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x2B50 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x2B5D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2194 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B6F DUP2 DUP5 PUSH2 0x2AF8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B88 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BB0 DUP5 DUP3 DUP6 ADD PUSH2 0x2B7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BCD DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x2BD7 DUP2 DUP6 PUSH2 0x2BB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFE DUP3 DUP6 PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 DUP5 PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xC4 0x4B MSTORE 0xF6 SWAP11 0xD3 DIV 0xF6 PUSH19 0xAA4C55274C8AD2DDD52401C23CAB1B65CEBFA9 0x4E INVALID PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "414:2185:18:-:0;;;526:3;491:38;;601:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;669:12;1381:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;601:84:18;414:2185;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;414:2185:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1148": {
									"entryPoint": 3062,
									"id": 1148,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1214": {
									"entryPoint": 5485,
									"id": 1214,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_541": {
									"entryPoint": 6154,
									"id": 541,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_796": {
									"entryPoint": 5932,
									"id": 796,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1344": {
									"entryPoint": 4502,
									"id": 1344,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3603,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_723": {
									"entryPoint": 2998,
									"id": 723,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_759": {
									"entryPoint": 6383,
									"id": 759,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_952": {
									"entryPoint": 6575,
									"id": 952,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1675": {
									"entryPoint": 3055,
									"id": 1675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_710": {
									"entryPoint": 5428,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1280": {
									"entryPoint": 2864,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_967": {
									"entryPoint": 3827,
									"id": 967,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_993": {
									"entryPoint": 6127,
									"id": 993,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1251": {
									"entryPoint": 4141,
									"id": 1251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1634": {
									"entryPoint": 3856,
									"id": 1634,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3946,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 3080,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addXP_3269": {
									"entryPoint": 1695,
									"id": 3269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_557": {
									"entryPoint": 1317,
									"id": 557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_465": {
									"entryPoint": 1763,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchMint_3321": {
									"entryPoint": 2175,
									"id": 3321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1508": {
									"entryPoint": 1673,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@generateTokenId_3344": {
									"entryPoint": 3738,
									"id": 3344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_574": {
									"entryPoint": 1290,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_607": {
									"entryPoint": 2494,
									"id": 607,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2850": {
									"entryPoint": 7020,
									"id": 2850,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_487": {
									"entryPoint": 1147,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_478": {
									"entryPoint": 1746,
									"id": 478,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1991,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1945,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_3253": {
									"entryPoint": 2448,
									"id": 3253,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@royaltyPercentage_3153": {
									"entryPoint": 1985,
									"id": 3153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3201": {
									"entryPoint": 1594,
									"id": 3201,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_671": {
									"entryPoint": 1642,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_697": {
									"entryPoint": 2401,
									"id": 697,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_590": {
									"entryPoint": 2379,
									"id": 590,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1558": {
									"entryPoint": 2768,
									"id": 1558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1963": {
									"entryPoint": 6278,
									"id": 1963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3233": {
									"entryPoint": 1130,
									"id": 3233,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_437": {
									"entryPoint": 5203,
									"id": 437,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_496": {
									"entryPoint": 2031,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1753": {
									"entryPoint": 6818,
									"id": 1753,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1615": {
									"entryPoint": 4936,
									"id": 1615,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3217": {
									"entryPoint": 2430,
									"id": 3217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_532": {
									"entryPoint": 6176,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenXP_3157": {
									"entryPoint": 1964,
									"id": 3157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_653": {
									"entryPoint": 1339,
									"id": 653,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2636,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack": {
									"entryPoint": 10271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11251,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes4__to_t_uint256_t_uint256_t_bytes4__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10294,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11056,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9774,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8239,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes4": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 10230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea": {
									"entryPoint": 9923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:29037:19",
										"nodeType": "YulBlock",
										"src": "0:29037:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:77:19",
													"nodeType": "YulBlock",
													"src": "1860:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:19"
																},
																"nativeSrc": "1871:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:19"
															},
															"nativeSrc": "1871:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:19"
																		},
																		"nativeSrc": "1910:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:19"
																},
																"nativeSrc": "1903:27:19",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:19"
															},
															"nativeSrc": "1903:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:139:19"
											},
											{
												"body": {
													"nativeSrc": "1991:54:19",
													"nodeType": "YulBlock",
													"src": "1991:54:19",
													"statements": [
														{
															"nativeSrc": "2001:38:19",
															"nodeType": "YulAssignment",
															"src": "2001:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:19"
																		},
																		"nativeSrc": "2015:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:19"
																		},
																		"nativeSrc": "2031:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:19"
																},
																"nativeSrc": "2011:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:19",
														"nodeType": "YulTypedName",
														"src": "1974:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:19",
														"nodeType": "YulTypedName",
														"src": "1984:6:19",
														"type": ""
													}
												],
												"src": "1943:102:19"
											},
											{
												"body": {
													"nativeSrc": "2143:285:19",
													"nodeType": "YulBlock",
													"src": "2143:285:19",
													"statements": [
														{
															"nativeSrc": "2153:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:19"
																},
																"nativeSrc": "2167:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:19",
															"nodeType": "YulAssignment",
															"src": "2215:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:19"
																},
																"nativeSrc": "2222:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:19"
																		},
																		"nativeSrc": "2337:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:19"
																},
																"nativeSrc": "2302:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:19"
															},
															"nativeSrc": "2302:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:19"
														},
														{
															"nativeSrc": "2376:46:19",
															"nodeType": "YulAssignment",
															"src": "2376:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:19"
																		},
																		"nativeSrc": "2392:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:19"
																},
																"nativeSrc": "2383:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:19",
														"nodeType": "YulTypedName",
														"src": "2124:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:19",
														"nodeType": "YulTypedName",
														"src": "2131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:19",
														"nodeType": "YulTypedName",
														"src": "2139:3:19",
														"type": ""
													}
												],
												"src": "2051:377:19"
											},
											{
												"body": {
													"nativeSrc": "2552:195:19",
													"nodeType": "YulBlock",
													"src": "2552:195:19",
													"statements": [
														{
															"nativeSrc": "2562:26:19",
															"nodeType": "YulAssignment",
															"src": "2562:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:19"
																},
																"nativeSrc": "2570:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:19"
																		},
																		"nativeSrc": "2605:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:19"
																		},
																		"nativeSrc": "2624:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:19"
																},
																"nativeSrc": "2598:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:19"
															},
															"nativeSrc": "2598:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:19"
														},
														{
															"nativeSrc": "2654:86:19",
															"nodeType": "YulAssignment",
															"src": "2654:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:19"
																},
																"nativeSrc": "2662:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:19",
														"nodeType": "YulTypedName",
														"src": "2524:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:19",
														"nodeType": "YulTypedName",
														"src": "2536:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:19",
														"nodeType": "YulTypedName",
														"src": "2547:4:19",
														"type": ""
													}
												],
												"src": "2434:313:19"
											},
											{
												"body": {
													"nativeSrc": "2798:32:19",
													"nodeType": "YulBlock",
													"src": "2798:32:19",
													"statements": [
														{
															"nativeSrc": "2808:16:19",
															"nodeType": "YulAssignment",
															"src": "2808:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:19",
																"nodeType": "YulIdentifier",
																"src": "2819:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:19",
														"nodeType": "YulTypedName",
														"src": "2780:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:19",
														"nodeType": "YulTypedName",
														"src": "2790:7:19",
														"type": ""
													}
												],
												"src": "2753:77:19"
											},
											{
												"body": {
													"nativeSrc": "2879:79:19",
													"nodeType": "YulBlock",
													"src": "2879:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:19",
																"nodeType": "YulBlock",
																"src": "2936:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:19"
																			},
																			"nativeSrc": "2938:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:19"
																		},
																		"nativeSrc": "2938:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:19"
																				},
																				"nativeSrc": "2909:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:19"
																		},
																		"nativeSrc": "2899:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:19"
																},
																"nativeSrc": "2892:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:19"
															},
															"nativeSrc": "2889:63:19",
															"nodeType": "YulIf",
															"src": "2889:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:19",
														"nodeType": "YulTypedName",
														"src": "2872:5:19",
														"type": ""
													}
												],
												"src": "2836:122:19"
											},
											{
												"body": {
													"nativeSrc": "3016:87:19",
													"nodeType": "YulBlock",
													"src": "3016:87:19",
													"statements": [
														{
															"nativeSrc": "3026:29:19",
															"nodeType": "YulAssignment",
															"src": "3026:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:19"
																},
																"nativeSrc": "3035:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:19"
																},
																"nativeSrc": "3064:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:19"
															},
															"nativeSrc": "3064:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:19",
														"nodeType": "YulTypedName",
														"src": "2994:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:19",
														"nodeType": "YulTypedName",
														"src": "3002:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:19",
														"nodeType": "YulTypedName",
														"src": "3010:5:19",
														"type": ""
													}
												],
												"src": "2964:139:19"
											},
											{
												"body": {
													"nativeSrc": "3175:263:19",
													"nodeType": "YulBlock",
													"src": "3175:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:19",
																"nodeType": "YulBlock",
																"src": "3221:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:19"
																			},
																			"nativeSrc": "3223:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:19"
																		},
																		"nativeSrc": "3223:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:19"
																		},
																		"nativeSrc": "3192:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:19"
																},
																"nativeSrc": "3188:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:19"
															},
															"nativeSrc": "3185:119:19",
															"nodeType": "YulIf",
															"src": "3185:119:19"
														},
														{
															"nativeSrc": "3314:117:19",
															"nodeType": "YulBlock",
															"src": "3314:117:19",
															"statements": [
																{
																	"nativeSrc": "3329:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:19"
																				},
																				"nativeSrc": "3389:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:19"
																		},
																		"nativeSrc": "3368:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:19",
														"nodeType": "YulTypedName",
														"src": "3145:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:19",
														"nodeType": "YulTypedName",
														"src": "3156:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:19",
														"nodeType": "YulTypedName",
														"src": "3168:6:19",
														"type": ""
													}
												],
												"src": "3109:329:19"
											},
											{
												"body": {
													"nativeSrc": "3489:81:19",
													"nodeType": "YulBlock",
													"src": "3489:81:19",
													"statements": [
														{
															"nativeSrc": "3499:65:19",
															"nodeType": "YulAssignment",
															"src": "3499:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:19"
																},
																"nativeSrc": "3510:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:19",
														"nodeType": "YulTypedName",
														"src": "3471:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:19",
														"nodeType": "YulTypedName",
														"src": "3481:7:19",
														"type": ""
													}
												],
												"src": "3444:126:19"
											},
											{
												"body": {
													"nativeSrc": "3621:51:19",
													"nodeType": "YulBlock",
													"src": "3621:51:19",
													"statements": [
														{
															"nativeSrc": "3631:35:19",
															"nodeType": "YulAssignment",
															"src": "3631:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:19"
																},
																"nativeSrc": "3642:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:19",
														"nodeType": "YulTypedName",
														"src": "3603:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:19",
														"nodeType": "YulTypedName",
														"src": "3613:7:19",
														"type": ""
													}
												],
												"src": "3576:96:19"
											},
											{
												"body": {
													"nativeSrc": "3743:53:19",
													"nodeType": "YulBlock",
													"src": "3743:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:19"
																		},
																		"nativeSrc": "3765:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:19"
																},
																"nativeSrc": "3753:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:19"
															},
															"nativeSrc": "3753:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:19",
														"nodeType": "YulTypedName",
														"src": "3731:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:19",
														"nodeType": "YulTypedName",
														"src": "3738:3:19",
														"type": ""
													}
												],
												"src": "3678:118:19"
											},
											{
												"body": {
													"nativeSrc": "3900:124:19",
													"nodeType": "YulBlock",
													"src": "3900:124:19",
													"statements": [
														{
															"nativeSrc": "3910:26:19",
															"nodeType": "YulAssignment",
															"src": "3910:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:19"
																},
																"nativeSrc": "3918:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:19"
																		},
																		"nativeSrc": "3999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:19"
																},
																"nativeSrc": "3946:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:19"
															},
															"nativeSrc": "3946:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:19",
														"nodeType": "YulTypedName",
														"src": "3872:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:19",
														"nodeType": "YulTypedName",
														"src": "3884:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:19",
														"nodeType": "YulTypedName",
														"src": "3895:4:19",
														"type": ""
													}
												],
												"src": "3802:222:19"
											},
											{
												"body": {
													"nativeSrc": "4073:79:19",
													"nodeType": "YulBlock",
													"src": "4073:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:19",
																"nodeType": "YulBlock",
																"src": "4130:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:19"
																			},
																			"nativeSrc": "4132:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:19"
																		},
																		"nativeSrc": "4132:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:19"
																				},
																				"nativeSrc": "4103:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:19"
																		},
																		"nativeSrc": "4093:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:19"
																},
																"nativeSrc": "4086:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:19"
															},
															"nativeSrc": "4083:63:19",
															"nodeType": "YulIf",
															"src": "4083:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:19",
														"nodeType": "YulTypedName",
														"src": "4066:5:19",
														"type": ""
													}
												],
												"src": "4030:122:19"
											},
											{
												"body": {
													"nativeSrc": "4210:87:19",
													"nodeType": "YulBlock",
													"src": "4210:87:19",
													"statements": [
														{
															"nativeSrc": "4220:29:19",
															"nodeType": "YulAssignment",
															"src": "4220:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:19"
																},
																"nativeSrc": "4229:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:19"
																},
																"nativeSrc": "4258:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:19"
															},
															"nativeSrc": "4258:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:19",
														"nodeType": "YulTypedName",
														"src": "4188:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:19",
														"nodeType": "YulTypedName",
														"src": "4196:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:19",
														"nodeType": "YulTypedName",
														"src": "4204:5:19",
														"type": ""
													}
												],
												"src": "4158:139:19"
											},
											{
												"body": {
													"nativeSrc": "4386:391:19",
													"nodeType": "YulBlock",
													"src": "4386:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:19",
																"nodeType": "YulBlock",
																"src": "4432:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:19"
																			},
																			"nativeSrc": "4434:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:19"
																		},
																		"nativeSrc": "4434:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:19"
																		},
																		"nativeSrc": "4403:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:19"
																},
																"nativeSrc": "4399:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:19"
															},
															"nativeSrc": "4396:119:19",
															"nodeType": "YulIf",
															"src": "4396:119:19"
														},
														{
															"nativeSrc": "4525:117:19",
															"nodeType": "YulBlock",
															"src": "4525:117:19",
															"statements": [
																{
																	"nativeSrc": "4540:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:19"
																				},
																				"nativeSrc": "4600:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:19"
																		},
																		"nativeSrc": "4579:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:19",
															"nodeType": "YulBlock",
															"src": "4652:118:19",
															"statements": [
																{
																	"nativeSrc": "4667:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:19"
																				},
																				"nativeSrc": "4728:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:19"
																		},
																		"nativeSrc": "4707:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:19",
														"nodeType": "YulTypedName",
														"src": "4348:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:19",
														"nodeType": "YulTypedName",
														"src": "4359:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:19",
														"nodeType": "YulTypedName",
														"src": "4371:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:19",
														"nodeType": "YulTypedName",
														"src": "4379:6:19",
														"type": ""
													}
												],
												"src": "4303:474:19"
											},
											{
												"body": {
													"nativeSrc": "4883:519:19",
													"nodeType": "YulBlock",
													"src": "4883:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:19",
																"nodeType": "YulBlock",
																"src": "4929:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:19"
																			},
																			"nativeSrc": "4931:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:19"
																		},
																		"nativeSrc": "4931:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:19"
																		},
																		"nativeSrc": "4900:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:19"
																},
																"nativeSrc": "4896:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:19"
															},
															"nativeSrc": "4893:119:19",
															"nodeType": "YulIf",
															"src": "4893:119:19"
														},
														{
															"nativeSrc": "5022:117:19",
															"nodeType": "YulBlock",
															"src": "5022:117:19",
															"statements": [
																{
																	"nativeSrc": "5037:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:19"
																				},
																				"nativeSrc": "5097:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:19"
																		},
																		"nativeSrc": "5076:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:19",
															"nodeType": "YulBlock",
															"src": "5149:118:19",
															"statements": [
																{
																	"nativeSrc": "5164:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:19"
																				},
																				"nativeSrc": "5225:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:19"
																		},
																		"nativeSrc": "5204:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:19",
															"nodeType": "YulBlock",
															"src": "5277:118:19",
															"statements": [
																{
																	"nativeSrc": "5292:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:19"
																				},
																				"nativeSrc": "5353:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:19"
																		},
																		"nativeSrc": "5332:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:19",
														"nodeType": "YulTypedName",
														"src": "4837:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:19",
														"nodeType": "YulTypedName",
														"src": "4848:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:19",
														"nodeType": "YulTypedName",
														"src": "4860:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:19",
														"nodeType": "YulTypedName",
														"src": "4868:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:19",
														"nodeType": "YulTypedName",
														"src": "4876:6:19",
														"type": ""
													}
												],
												"src": "4783:619:19"
											},
											{
												"body": {
													"nativeSrc": "5497:28:19",
													"nodeType": "YulBlock",
													"src": "5497:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:19"
																},
																"nativeSrc": "5507:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:19"
															},
															"nativeSrc": "5507:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:19"
											},
											{
												"body": {
													"nativeSrc": "5620:28:19",
													"nodeType": "YulBlock",
													"src": "5620:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:19"
																},
																"nativeSrc": "5630:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:19"
															},
															"nativeSrc": "5630:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:19"
											},
											{
												"body": {
													"nativeSrc": "5682:152:19",
													"nodeType": "YulBlock",
													"src": "5682:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:19",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:19"
																},
																"nativeSrc": "5692:88:19",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:19"
															},
															"nativeSrc": "5692:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:19"
																},
																"nativeSrc": "5789:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:19"
															},
															"nativeSrc": "5789:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:19"
																},
																"nativeSrc": "5813:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:19"
															},
															"nativeSrc": "5813:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:19"
											},
											{
												"body": {
													"nativeSrc": "5883:238:19",
													"nodeType": "YulBlock",
													"src": "5883:238:19",
													"statements": [
														{
															"nativeSrc": "5893:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:19"
																		},
																		"nativeSrc": "5923:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:19"
																},
																"nativeSrc": "5911:40:19",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:19",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:19",
																"nodeType": "YulBlock",
																"src": "6062:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:19"
																			},
																			"nativeSrc": "6064:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:19"
																		},
																		"nativeSrc": "6064:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:19"
																		},
																		"nativeSrc": "6002:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:19"
																		},
																		"nativeSrc": "6038:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:19"
																},
																"nativeSrc": "5999:62:19",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:19"
															},
															"nativeSrc": "5996:88:19",
															"nodeType": "YulIf",
															"src": "5996:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:19"
																},
																"nativeSrc": "6093:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:19"
															},
															"nativeSrc": "6093:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:19",
														"nodeType": "YulTypedName",
														"src": "5869:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:19",
														"nodeType": "YulTypedName",
														"src": "5877:4:19",
														"type": ""
													}
												],
												"src": "5840:281:19"
											},
											{
												"body": {
													"nativeSrc": "6168:88:19",
													"nodeType": "YulBlock",
													"src": "6168:88:19",
													"statements": [
														{
															"nativeSrc": "6178:30:19",
															"nodeType": "YulAssignment",
															"src": "6178:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:19"
																},
																"nativeSrc": "6188:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:19"
																},
																"nativeSrc": "6217:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:19"
															},
															"nativeSrc": "6217:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:19",
														"nodeType": "YulTypedName",
														"src": "6152:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:19",
														"nodeType": "YulTypedName",
														"src": "6161:6:19",
														"type": ""
													}
												],
												"src": "6127:129:19"
											},
											{
												"body": {
													"nativeSrc": "6329:241:19",
													"nodeType": "YulBlock",
													"src": "6329:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:19",
																"nodeType": "YulBlock",
																"src": "6434:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:19"
																			},
																			"nativeSrc": "6436:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:19"
																		},
																		"nativeSrc": "6436:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:19",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:19"
																},
																"nativeSrc": "6403:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:19"
															},
															"nativeSrc": "6400:56:19",
															"nodeType": "YulIf",
															"src": "6400:56:19"
														},
														{
															"nativeSrc": "6466:37:19",
															"nodeType": "YulAssignment",
															"src": "6466:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:19"
																},
																"nativeSrc": "6474:29:19",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:19"
																}
															]
														},
														{
															"nativeSrc": "6540:23:19",
															"nodeType": "YulAssignment",
															"src": "6540:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:19"
																},
																"nativeSrc": "6548:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:19",
														"nodeType": "YulTypedName",
														"src": "6313:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:19",
														"nodeType": "YulTypedName",
														"src": "6324:4:19",
														"type": ""
													}
												],
												"src": "6262:308:19"
											},
											{
												"body": {
													"nativeSrc": "6640:84:19",
													"nodeType": "YulBlock",
													"src": "6640:84:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:19"
																},
																"nativeSrc": "6651:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:19"
															},
															"nativeSrc": "6651:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:19"
																		},
																		"nativeSrc": "6697:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:19"
																},
																"nativeSrc": "6690:27:19",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:19"
															},
															"nativeSrc": "6690:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:19",
														"nodeType": "YulTypedName",
														"src": "6622:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:19",
														"nodeType": "YulTypedName",
														"src": "6627:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:19",
														"nodeType": "YulTypedName",
														"src": "6632:6:19",
														"type": ""
													}
												],
												"src": "6576:148:19"
											},
											{
												"body": {
													"nativeSrc": "6814:341:19",
													"nodeType": "YulBlock",
													"src": "6814:341:19",
													"statements": [
														{
															"nativeSrc": "6824:75:19",
															"nodeType": "YulAssignment",
															"src": "6824:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:19"
																		},
																		"nativeSrc": "6849:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:19"
																},
																"nativeSrc": "6833:66:19",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:19"
																},
																"nativeSrc": "6908:21:19",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:19"
															},
															"nativeSrc": "6908:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:19"
														},
														{
															"nativeSrc": "6938:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:19"
																},
																"nativeSrc": "6949:16:19",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:19",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:19",
																"nodeType": "YulBlock",
																"src": "7003:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:19"
																			},
																			"nativeSrc": "7005:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:19"
																		},
																		"nativeSrc": "7005:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:19"
																		},
																		"nativeSrc": "6980:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:19"
																},
																"nativeSrc": "6977:25:19",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:19"
															},
															"nativeSrc": "6974:112:19",
															"nodeType": "YulIf",
															"src": "6974:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:19"
																},
																"nativeSrc": "7095:54:19",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:19"
															},
															"nativeSrc": "7095:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:19",
														"nodeType": "YulTypedName",
														"src": "6787:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:19",
														"nodeType": "YulTypedName",
														"src": "6792:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:19",
														"nodeType": "YulTypedName",
														"src": "6800:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:19",
														"nodeType": "YulTypedName",
														"src": "6808:5:19",
														"type": ""
													}
												],
												"src": "6730:425:19"
											},
											{
												"body": {
													"nativeSrc": "7237:278:19",
													"nodeType": "YulBlock",
													"src": "7237:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:19",
																"nodeType": "YulBlock",
																"src": "7286:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:19"
																			},
																			"nativeSrc": "7288:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:19"
																		},
																		"nativeSrc": "7288:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:19",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:19"
																				},
																				"nativeSrc": "7261:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:19"
																		},
																		"nativeSrc": "7257:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:19"
																},
																"nativeSrc": "7250:35:19",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:19"
															},
															"nativeSrc": "7247:122:19",
															"nodeType": "YulIf",
															"src": "7247:122:19"
														},
														{
															"nativeSrc": "7378:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:19"
																},
																"nativeSrc": "7392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:19",
															"nodeType": "YulAssignment",
															"src": "7421:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:19"
																		},
																		"nativeSrc": "7478:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:19"
																},
																"nativeSrc": "7430:79:19",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:19",
														"nodeType": "YulTypedName",
														"src": "7215:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:19",
														"nodeType": "YulTypedName",
														"src": "7223:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:19",
														"nodeType": "YulTypedName",
														"src": "7231:5:19",
														"type": ""
													}
												],
												"src": "7175:340:19"
											},
											{
												"body": {
													"nativeSrc": "7648:818:19",
													"nodeType": "YulBlock",
													"src": "7648:818:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7695:83:19",
																"nodeType": "YulBlock",
																"src": "7695:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7697:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7697:77:19"
																			},
																			"nativeSrc": "7697:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7697:79:19"
																		},
																		"nativeSrc": "7697:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7697:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7669:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7669:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7678:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7678:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7665:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:19"
																		},
																		"nativeSrc": "7665:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7665:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7690:3:19",
																		"nodeType": "YulLiteral",
																		"src": "7690:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7661:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7661:3:19"
																},
																"nativeSrc": "7661:33:19",
																"nodeType": "YulFunctionCall",
																"src": "7661:33:19"
															},
															"nativeSrc": "7658:120:19",
															"nodeType": "YulIf",
															"src": "7658:120:19"
														},
														{
															"nativeSrc": "7788:117:19",
															"nodeType": "YulBlock",
															"src": "7788:117:19",
															"statements": [
																{
																	"nativeSrc": "7803:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7803:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7817:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7807:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7807:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7832:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7832:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7867:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7867:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7878:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7878:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7863:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7863:3:19"
																				},
																				"nativeSrc": "7863:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7863:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7887:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7887:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7842:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7842:20:19"
																		},
																		"nativeSrc": "7842:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7842:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7832:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7832:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7915:288:19",
															"nodeType": "YulBlock",
															"src": "7915:288:19",
															"statements": [
																{
																	"nativeSrc": "7930:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7930:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7961:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7961:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7972:2:19",
																						"nodeType": "YulLiteral",
																						"src": "7972:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7957:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7957:3:19"
																				},
																				"nativeSrc": "7957:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7957:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7944:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "7944:12:19"
																		},
																		"nativeSrc": "7944:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7934:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7934:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8023:83:19",
																		"nodeType": "YulBlock",
																		"src": "8023:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8025:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "8025:77:19"
																					},
																					"nativeSrc": "8025:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8025:79:19"
																				},
																				"nativeSrc": "8025:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "8025:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7995:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7995:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8003:18:19",
																				"nodeType": "YulLiteral",
																				"src": "8003:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7992:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7992:2:19"
																		},
																		"nativeSrc": "7992:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:30:19"
																	},
																	"nativeSrc": "7989:117:19",
																	"nodeType": "YulIf",
																	"src": "7989:117:19"
																},
																{
																	"nativeSrc": "8120:73:19",
																	"nodeType": "YulAssignment",
																	"src": "8120:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8165:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8165:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8176:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8176:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8161:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8161:3:19"
																				},
																				"nativeSrc": "8161:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8161:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8185:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8185:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8130:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "8130:30:19"
																		},
																		"nativeSrc": "8130:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8130:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8120:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8120:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8213:118:19",
															"nodeType": "YulBlock",
															"src": "8213:118:19",
															"statements": [
																{
																	"nativeSrc": "8228:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8228:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8242:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8242:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8232:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8232:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8258:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8258:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8293:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8293:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8304:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8304:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8289:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8289:3:19"
																				},
																				"nativeSrc": "8289:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8289:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8313:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8313:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8268:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8268:20:19"
																		},
																		"nativeSrc": "8268:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8268:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8258:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8258:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8341:118:19",
															"nodeType": "YulBlock",
															"src": "8341:118:19",
															"statements": [
																{
																	"nativeSrc": "8356:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8356:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8370:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8370:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8360:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8360:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8386:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8386:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8421:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8421:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8432:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8432:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8417:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8417:3:19"
																				},
																				"nativeSrc": "8417:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8417:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8441:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8441:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8396:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8396:20:19"
																		},
																		"nativeSrc": "8396:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8386:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8386:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "7521:945:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7594:9:19",
														"nodeType": "YulTypedName",
														"src": "7594:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7605:7:19",
														"nodeType": "YulTypedName",
														"src": "7605:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7617:6:19",
														"nodeType": "YulTypedName",
														"src": "7617:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7625:6:19",
														"nodeType": "YulTypedName",
														"src": "7625:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7633:6:19",
														"nodeType": "YulTypedName",
														"src": "7633:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7641:6:19",
														"nodeType": "YulTypedName",
														"src": "7641:6:19",
														"type": ""
													}
												],
												"src": "7521:945:19"
											},
											{
												"body": {
													"nativeSrc": "8555:391:19",
													"nodeType": "YulBlock",
													"src": "8555:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8601:83:19",
																"nodeType": "YulBlock",
																"src": "8601:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8603:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8603:77:19"
																			},
																			"nativeSrc": "8603:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8603:79:19"
																		},
																		"nativeSrc": "8603:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8603:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8576:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8576:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8585:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8572:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:19"
																		},
																		"nativeSrc": "8572:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8597:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8597:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8568:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8568:3:19"
																},
																"nativeSrc": "8568:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8568:32:19"
															},
															"nativeSrc": "8565:119:19",
															"nodeType": "YulIf",
															"src": "8565:119:19"
														},
														{
															"nativeSrc": "8694:117:19",
															"nodeType": "YulBlock",
															"src": "8694:117:19",
															"statements": [
																{
																	"nativeSrc": "8709:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8709:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8723:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8723:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8713:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8713:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8738:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8738:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8773:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8773:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8784:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8784:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8769:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8769:3:19"
																				},
																				"nativeSrc": "8769:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8769:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8793:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8793:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8748:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8748:20:19"
																		},
																		"nativeSrc": "8748:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8748:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8738:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8738:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8821:118:19",
															"nodeType": "YulBlock",
															"src": "8821:118:19",
															"statements": [
																{
																	"nativeSrc": "8836:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8836:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8850:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8850:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8840:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8840:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8866:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8866:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8901:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8901:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8912:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8912:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8897:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8897:3:19"
																				},
																				"nativeSrc": "8897:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8897:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8921:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8921:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8876:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8876:20:19"
																		},
																		"nativeSrc": "8876:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8876:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8866:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8866:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8472:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8517:9:19",
														"nodeType": "YulTypedName",
														"src": "8517:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8528:7:19",
														"nodeType": "YulTypedName",
														"src": "8528:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8540:6:19",
														"nodeType": "YulTypedName",
														"src": "8540:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8548:6:19",
														"nodeType": "YulTypedName",
														"src": "8548:6:19",
														"type": ""
													}
												],
												"src": "8472:474:19"
											},
											{
												"body": {
													"nativeSrc": "9018:263:19",
													"nodeType": "YulBlock",
													"src": "9018:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9064:83:19",
																"nodeType": "YulBlock",
																"src": "9064:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9066:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9066:77:19"
																			},
																			"nativeSrc": "9066:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9066:79:19"
																		},
																		"nativeSrc": "9066:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9066:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9039:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9039:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9048:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9048:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9035:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:19"
																		},
																		"nativeSrc": "9035:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9035:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9060:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9031:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9031:3:19"
																},
																"nativeSrc": "9031:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9031:32:19"
															},
															"nativeSrc": "9028:119:19",
															"nodeType": "YulIf",
															"src": "9028:119:19"
														},
														{
															"nativeSrc": "9157:117:19",
															"nodeType": "YulBlock",
															"src": "9157:117:19",
															"statements": [
																{
																	"nativeSrc": "9172:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9172:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9186:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9186:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9176:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9176:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9201:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9201:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9236:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9236:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9247:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9247:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9232:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9232:3:19"
																				},
																				"nativeSrc": "9232:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9232:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9256:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9256:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9211:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9211:20:19"
																		},
																		"nativeSrc": "9211:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9211:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9201:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9201:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8952:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8988:9:19",
														"nodeType": "YulTypedName",
														"src": "8988:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8999:7:19",
														"nodeType": "YulTypedName",
														"src": "8999:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9011:6:19",
														"nodeType": "YulTypedName",
														"src": "9011:6:19",
														"type": ""
													}
												],
												"src": "8952:329:19"
											},
											{
												"body": {
													"nativeSrc": "9352:53:19",
													"nodeType": "YulBlock",
													"src": "9352:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9369:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9369:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9392:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9392:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9374:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "9374:17:19"
																		},
																		"nativeSrc": "9374:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9374:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9362:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9362:6:19"
																},
																"nativeSrc": "9362:37:19",
																"nodeType": "YulFunctionCall",
																"src": "9362:37:19"
															},
															"nativeSrc": "9362:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "9362:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9287:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9340:5:19",
														"nodeType": "YulTypedName",
														"src": "9340:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9347:3:19",
														"nodeType": "YulTypedName",
														"src": "9347:3:19",
														"type": ""
													}
												],
												"src": "9287:118:19"
											},
											{
												"body": {
													"nativeSrc": "9509:124:19",
													"nodeType": "YulBlock",
													"src": "9509:124:19",
													"statements": [
														{
															"nativeSrc": "9519:26:19",
															"nodeType": "YulAssignment",
															"src": "9519:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9531:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9531:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9527:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9527:3:19"
																},
																"nativeSrc": "9527:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9527:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9519:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9519:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9599:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9612:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9612:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9623:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9608:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9608:3:19"
																		},
																		"nativeSrc": "9608:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9608:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9555:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "9555:43:19"
																},
																"nativeSrc": "9555:71:19",
																"nodeType": "YulFunctionCall",
																"src": "9555:71:19"
															},
															"nativeSrc": "9555:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "9555:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9411:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9481:9:19",
														"nodeType": "YulTypedName",
														"src": "9481:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9493:6:19",
														"nodeType": "YulTypedName",
														"src": "9493:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9504:4:19",
														"nodeType": "YulTypedName",
														"src": "9504:4:19",
														"type": ""
													}
												],
												"src": "9411:222:19"
											},
											{
												"body": {
													"nativeSrc": "9721:229:19",
													"nodeType": "YulBlock",
													"src": "9721:229:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9826:22:19",
																"nodeType": "YulBlock",
																"src": "9826:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9828:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9828:16:19"
																			},
																			"nativeSrc": "9828:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9828:18:19"
																		},
																		"nativeSrc": "9828:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9828:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9798:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9798:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9806:18:19",
																		"nodeType": "YulLiteral",
																		"src": "9806:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9795:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9795:2:19"
																},
																"nativeSrc": "9795:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9795:30:19"
															},
															"nativeSrc": "9792:56:19",
															"nodeType": "YulIf",
															"src": "9792:56:19"
														},
														{
															"nativeSrc": "9858:25:19",
															"nodeType": "YulAssignment",
															"src": "9858:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9870:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9870:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9878:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9878:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9866:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9866:3:19"
																},
																"nativeSrc": "9866:17:19",
																"nodeType": "YulFunctionCall",
																"src": "9866:17:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9858:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9858:4:19"
																}
															]
														},
														{
															"nativeSrc": "9920:23:19",
															"nodeType": "YulAssignment",
															"src": "9920:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9932:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9932:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9938:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9938:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9928:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9928:3:19"
																},
																"nativeSrc": "9928:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9928:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9920:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9920:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9639:311:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9705:6:19",
														"nodeType": "YulTypedName",
														"src": "9705:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9716:4:19",
														"nodeType": "YulTypedName",
														"src": "9716:4:19",
														"type": ""
													}
												],
												"src": "9639:311:19"
											},
											{
												"body": {
													"nativeSrc": "10045:28:19",
													"nodeType": "YulBlock",
													"src": "10045:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10062:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10062:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10065:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10065:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10055:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10055:6:19"
																},
																"nativeSrc": "10055:12:19",
																"nodeType": "YulFunctionCall",
																"src": "10055:12:19"
															},
															"nativeSrc": "10055:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "10055:12:19"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9956:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "9956:117:19"
											},
											{
												"body": {
													"nativeSrc": "10198:608:19",
													"nodeType": "YulBlock",
													"src": "10198:608:19",
													"statements": [
														{
															"nativeSrc": "10208:90:19",
															"nodeType": "YulAssignment",
															"src": "10208:90:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10290:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10290:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10233:56:19",
																			"nodeType": "YulIdentifier",
																			"src": "10233:56:19"
																		},
																		"nativeSrc": "10233:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10233:64:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10217:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "10217:15:19"
																},
																"nativeSrc": "10217:81:19",
																"nodeType": "YulFunctionCall",
																"src": "10217:81:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10208:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10208:5:19"
																}
															]
														},
														{
															"nativeSrc": "10307:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10307:16:19",
															"value": {
																"name": "array",
																"nativeSrc": "10318:5:19",
																"nodeType": "YulIdentifier",
																"src": "10318:5:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10311:3:19",
																	"nodeType": "YulTypedName",
																	"src": "10311:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10340:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10340:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10347:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10347:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10333:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10333:6:19"
																},
																"nativeSrc": "10333:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10333:21:19"
															},
															"nativeSrc": "10333:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10333:21:19"
														},
														{
															"nativeSrc": "10363:23:19",
															"nodeType": "YulAssignment",
															"src": "10363:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10374:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10374:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10381:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10381:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10370:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10370:3:19"
																},
																"nativeSrc": "10370:16:19",
																"nodeType": "YulFunctionCall",
																"src": "10370:16:19"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10363:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10363:3:19"
																}
															]
														},
														{
															"nativeSrc": "10396:44:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10396:44:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10414:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10414:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10426:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10426:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10434:4:19",
																				"nodeType": "YulLiteral",
																				"src": "10434:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10422:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10422:3:19"
																		},
																		"nativeSrc": "10422:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10422:17:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10410:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10410:3:19"
																},
																"nativeSrc": "10410:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10410:30:19"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10400:6:19",
																	"nodeType": "YulTypedName",
																	"src": "10400:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10468:103:19",
																"nodeType": "YulBlock",
																"src": "10468:103:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10482:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10482:77:19"
																			},
																			"nativeSrc": "10482:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10482:79:19"
																		},
																		"nativeSrc": "10482:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10455:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10463:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10463:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10452:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10452:2:19"
																},
																"nativeSrc": "10452:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10452:15:19"
															},
															"nativeSrc": "10449:122:19",
															"nodeType": "YulIf",
															"src": "10449:122:19"
														},
														{
															"body": {
																"nativeSrc": "10656:144:19",
																"nodeType": "YulBlock",
																"src": "10656:144:19",
																"statements": [
																	{
																		"nativeSrc": "10671:21:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10671:21:19",
																		"value": {
																			"name": "src",
																			"nativeSrc": "10689:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:19"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10675:10:19",
																				"nodeType": "YulTypedName",
																				"src": "10675:10:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10713:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10713:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10739:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "10739:10:19"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10751:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "10751:3:19"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "10718:20:19",
																						"nodeType": "YulIdentifier",
																						"src": "10718:20:19"
																					},
																					"nativeSrc": "10718:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "10718:37:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10706:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10706:6:19"
																			},
																			"nativeSrc": "10706:50:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10706:50:19"
																		},
																		"nativeSrc": "10706:50:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10706:50:19"
																	},
																	{
																		"nativeSrc": "10769:21:19",
																		"nodeType": "YulAssignment",
																		"src": "10769:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10780:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10780:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10785:4:19",
																					"nodeType": "YulLiteral",
																					"src": "10785:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10776:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10776:3:19"
																			},
																			"nativeSrc": "10776:14:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10776:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10769:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10769:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10609:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10609:3:19"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10614:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10614:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10606:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10606:2:19"
																},
																"nativeSrc": "10606:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10606:15:19"
															},
															"nativeSrc": "10580:220:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10622:25:19",
																"nodeType": "YulBlock",
																"src": "10622:25:19",
																"statements": [
																	{
																		"nativeSrc": "10624:21:19",
																		"nodeType": "YulAssignment",
																		"src": "10624:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10635:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10635:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10640:4:19",
																					"nodeType": "YulLiteral",
																					"src": "10640:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10631:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10631:3:19"
																			},
																			"nativeSrc": "10631:14:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10631:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10624:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10624:3:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10584:21:19",
																"nodeType": "YulBlock",
																"src": "10584:21:19",
																"statements": [
																	{
																		"nativeSrc": "10586:17:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10586:17:19",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10597:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10597:6:19"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10590:3:19",
																				"nodeType": "YulTypedName",
																				"src": "10590:3:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10580:220:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10096:710:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10168:6:19",
														"nodeType": "YulTypedName",
														"src": "10168:6:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10176:6:19",
														"nodeType": "YulTypedName",
														"src": "10176:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10184:3:19",
														"nodeType": "YulTypedName",
														"src": "10184:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10192:5:19",
														"nodeType": "YulTypedName",
														"src": "10192:5:19",
														"type": ""
													}
												],
												"src": "10096:710:19"
											},
											{
												"body": {
													"nativeSrc": "10906:293:19",
													"nodeType": "YulBlock",
													"src": "10906:293:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10955:83:19",
																"nodeType": "YulBlock",
																"src": "10955:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10957:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10957:77:19"
																			},
																			"nativeSrc": "10957:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10957:79:19"
																		},
																		"nativeSrc": "10957:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10957:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10934:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10934:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10942:4:19",
																						"nodeType": "YulLiteral",
																						"src": "10942:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10930:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10930:3:19"
																				},
																				"nativeSrc": "10930:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10930:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10949:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10949:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10926:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:19"
																		},
																		"nativeSrc": "10926:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10919:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10919:6:19"
																},
																"nativeSrc": "10919:35:19",
																"nodeType": "YulFunctionCall",
																"src": "10919:35:19"
															},
															"nativeSrc": "10916:122:19",
															"nodeType": "YulIf",
															"src": "10916:122:19"
														},
														{
															"nativeSrc": "11047:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11047:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11074:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11074:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11061:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "11061:12:19"
																},
																"nativeSrc": "11061:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11061:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11051:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11051:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11090:103:19",
															"nodeType": "YulAssignment",
															"src": "11090:103:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11166:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11166:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11174:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11174:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11162:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:19"
																		},
																		"nativeSrc": "11162:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11162:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11181:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11181:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11189:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11189:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11099:62:19",
																	"nodeType": "YulIdentifier",
																	"src": "11099:62:19"
																},
																"nativeSrc": "11099:94:19",
																"nodeType": "YulFunctionCall",
																"src": "11099:94:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11090:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11090:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10829:370:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10884:6:19",
														"nodeType": "YulTypedName",
														"src": "10884:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10892:3:19",
														"nodeType": "YulTypedName",
														"src": "10892:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10900:5:19",
														"nodeType": "YulTypedName",
														"src": "10900:5:19",
														"type": ""
													}
												],
												"src": "10829:370:19"
											},
											{
												"body": {
													"nativeSrc": "11297:229:19",
													"nodeType": "YulBlock",
													"src": "11297:229:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11402:22:19",
																"nodeType": "YulBlock",
																"src": "11402:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11404:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "11404:16:19"
																			},
																			"nativeSrc": "11404:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11404:18:19"
																		},
																		"nativeSrc": "11404:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11404:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11374:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11374:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11382:18:19",
																		"nodeType": "YulLiteral",
																		"src": "11382:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11371:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11371:2:19"
																},
																"nativeSrc": "11371:30:19",
																"nodeType": "YulFunctionCall",
																"src": "11371:30:19"
															},
															"nativeSrc": "11368:56:19",
															"nodeType": "YulIf",
															"src": "11368:56:19"
														},
														{
															"nativeSrc": "11434:25:19",
															"nodeType": "YulAssignment",
															"src": "11434:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11446:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11446:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11454:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11454:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11442:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:19"
																},
																"nativeSrc": "11442:17:19",
																"nodeType": "YulFunctionCall",
																"src": "11442:17:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11434:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11434:4:19"
																}
															]
														},
														{
															"nativeSrc": "11496:23:19",
															"nodeType": "YulAssignment",
															"src": "11496:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11508:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11508:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11514:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11514:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11504:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11504:3:19"
																},
																"nativeSrc": "11504:15:19",
																"nodeType": "YulFunctionCall",
																"src": "11504:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11496:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11496:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11205:321:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11281:6:19",
														"nodeType": "YulTypedName",
														"src": "11281:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11292:4:19",
														"nodeType": "YulTypedName",
														"src": "11292:4:19",
														"type": ""
													}
												],
												"src": "11205:321:19"
											},
											{
												"body": {
													"nativeSrc": "11660:833:19",
													"nodeType": "YulBlock",
													"src": "11660:833:19",
													"statements": [
														{
															"nativeSrc": "11670:100:19",
															"nodeType": "YulAssignment",
															"src": "11670:100:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11762:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11762:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "11695:66:19",
																			"nodeType": "YulIdentifier",
																			"src": "11695:66:19"
																		},
																		"nativeSrc": "11695:74:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11695:74:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11679:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "11679:15:19"
																},
																"nativeSrc": "11679:91:19",
																"nodeType": "YulFunctionCall",
																"src": "11679:91:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11670:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11670:5:19"
																}
															]
														},
														{
															"nativeSrc": "11779:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11779:16:19",
															"value": {
																"name": "array",
																"nativeSrc": "11790:5:19",
																"nodeType": "YulIdentifier",
																"src": "11790:5:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11783:3:19",
																	"nodeType": "YulTypedName",
																	"src": "11783:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11812:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11812:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11819:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11819:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11805:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11805:6:19"
																},
																"nativeSrc": "11805:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11805:21:19"
															},
															"nativeSrc": "11805:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11805:21:19"
														},
														{
															"nativeSrc": "11835:23:19",
															"nodeType": "YulAssignment",
															"src": "11835:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11846:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11846:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11853:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11853:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11842:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11842:3:19"
																},
																"nativeSrc": "11842:16:19",
																"nodeType": "YulFunctionCall",
																"src": "11842:16:19"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "11835:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:19"
																}
															]
														},
														{
															"nativeSrc": "11868:44:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11868:44:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11886:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11886:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11898:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11898:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11906:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11906:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11894:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11894:3:19"
																		},
																		"nativeSrc": "11894:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11894:17:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11882:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11882:3:19"
																},
																"nativeSrc": "11882:30:19",
																"nodeType": "YulFunctionCall",
																"src": "11882:30:19"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "11872:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11872:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11940:103:19",
																"nodeType": "YulBlock",
																"src": "11940:103:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11954:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11954:77:19"
																			},
																			"nativeSrc": "11954:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11954:79:19"
																		},
																		"nativeSrc": "11954:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11954:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11927:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11927:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11935:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11935:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11924:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11924:2:19"
																},
																"nativeSrc": "11924:15:19",
																"nodeType": "YulFunctionCall",
																"src": "11924:15:19"
															},
															"nativeSrc": "11921:122:19",
															"nodeType": "YulIf",
															"src": "11921:122:19"
														},
														{
															"body": {
																"nativeSrc": "12128:359:19",
																"nodeType": "YulBlock",
																"src": "12128:359:19",
																"statements": [
																	{
																		"nativeSrc": "12143:36:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12143:36:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12175:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12175:3:19"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "12162:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "12162:12:19"
																			},
																			"nativeSrc": "12162:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12162:17:19"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "12147:11:19",
																				"nodeType": "YulTypedName",
																				"src": "12147:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12231:83:19",
																			"nodeType": "YulBlock",
																			"src": "12231:83:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "12233:77:19",
																							"nodeType": "YulIdentifier",
																							"src": "12233:77:19"
																						},
																						"nativeSrc": "12233:79:19",
																						"nodeType": "YulFunctionCall",
																						"src": "12233:79:19"
																					},
																					"nativeSrc": "12233:79:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "12233:79:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "12198:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "12198:11:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12211:18:19",
																					"nodeType": "YulLiteral",
																					"src": "12211:18:19",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12195:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "12195:2:19"
																			},
																			"nativeSrc": "12195:35:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12195:35:19"
																		},
																		"nativeSrc": "12192:122:19",
																		"nodeType": "YulIf",
																		"src": "12192:122:19"
																	},
																	{
																		"nativeSrc": "12327:42:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12327:42:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "12349:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "12349:6:19"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "12357:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "12357:11:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12345:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12345:3:19"
																			},
																			"nativeSrc": "12345:24:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12345:24:19"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "12331:10:19",
																				"nodeType": "YulTypedName",
																				"src": "12331:10:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12390:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12390:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "12426:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "12426:10:19"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "12438:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "12438:3:19"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_string_memory_ptr",
																						"nativeSrc": "12395:30:19",
																						"nodeType": "YulIdentifier",
																						"src": "12395:30:19"
																					},
																					"nativeSrc": "12395:47:19",
																					"nodeType": "YulFunctionCall",
																					"src": "12395:47:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12383:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12383:6:19"
																			},
																			"nativeSrc": "12383:60:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12383:60:19"
																		},
																		"nativeSrc": "12383:60:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12383:60:19"
																	},
																	{
																		"nativeSrc": "12456:21:19",
																		"nodeType": "YulAssignment",
																		"src": "12456:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12467:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12467:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12472:4:19",
																					"nodeType": "YulLiteral",
																					"src": "12472:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12463:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12463:3:19"
																			},
																			"nativeSrc": "12463:14:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12463:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12456:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12456:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12081:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12081:3:19"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12086:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12086:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12078:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "12078:2:19"
																},
																"nativeSrc": "12078:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12078:15:19"
															},
															"nativeSrc": "12052:435:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12094:25:19",
																"nodeType": "YulBlock",
																"src": "12094:25:19",
																"statements": [
																	{
																		"nativeSrc": "12096:21:19",
																		"nodeType": "YulAssignment",
																		"src": "12096:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12107:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12107:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12112:4:19",
																					"nodeType": "YulLiteral",
																					"src": "12112:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12103:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12103:3:19"
																			},
																			"nativeSrc": "12103:14:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12103:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12096:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12096:3:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12056:21:19",
																"nodeType": "YulBlock",
																"src": "12056:21:19",
																"statements": [
																	{
																		"nativeSrc": "12058:17:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12058:17:19",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "12069:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12069:6:19"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "12062:3:19",
																				"nodeType": "YulTypedName",
																				"src": "12062:3:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12052:435:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11548:945:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11630:6:19",
														"nodeType": "YulTypedName",
														"src": "11630:6:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11638:6:19",
														"nodeType": "YulTypedName",
														"src": "11638:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11646:3:19",
														"nodeType": "YulTypedName",
														"src": "11646:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11654:5:19",
														"nodeType": "YulTypedName",
														"src": "11654:5:19",
														"type": ""
													}
												],
												"src": "11548:945:19"
											},
											{
												"body": {
													"nativeSrc": "12602:303:19",
													"nodeType": "YulBlock",
													"src": "12602:303:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12651:83:19",
																"nodeType": "YulBlock",
																"src": "12651:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12653:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12653:77:19"
																			},
																			"nativeSrc": "12653:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12653:79:19"
																		},
																		"nativeSrc": "12653:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12653:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12630:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12630:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12638:4:19",
																						"nodeType": "YulLiteral",
																						"src": "12638:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12626:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12626:3:19"
																				},
																				"nativeSrc": "12626:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12626:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12645:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12645:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12622:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12622:3:19"
																		},
																		"nativeSrc": "12622:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12622:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12615:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12615:6:19"
																},
																"nativeSrc": "12615:35:19",
																"nodeType": "YulFunctionCall",
																"src": "12615:35:19"
															},
															"nativeSrc": "12612:122:19",
															"nodeType": "YulIf",
															"src": "12612:122:19"
														},
														{
															"nativeSrc": "12743:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12743:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12770:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12770:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12757:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "12757:12:19"
																},
																"nativeSrc": "12757:20:19",
																"nodeType": "YulFunctionCall",
																"src": "12757:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12747:6:19",
																	"nodeType": "YulTypedName",
																	"src": "12747:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12786:113:19",
															"nodeType": "YulAssignment",
															"src": "12786:113:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12872:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12872:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12880:4:19",
																				"nodeType": "YulLiteral",
																				"src": "12880:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12868:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12868:3:19"
																		},
																		"nativeSrc": "12868:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12868:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12887:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12887:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12895:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12895:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "12795:72:19",
																	"nodeType": "YulIdentifier",
																	"src": "12795:72:19"
																},
																"nativeSrc": "12795:104:19",
																"nodeType": "YulFunctionCall",
																"src": "12795:104:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12786:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "12786:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12515:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12580:6:19",
														"nodeType": "YulTypedName",
														"src": "12580:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12588:3:19",
														"nodeType": "YulTypedName",
														"src": "12588:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12596:5:19",
														"nodeType": "YulTypedName",
														"src": "12596:5:19",
														"type": ""
													}
												],
												"src": "12515:390:19"
											},
											{
												"body": {
													"nativeSrc": "13071:899:19",
													"nodeType": "YulBlock",
													"src": "13071:899:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "13117:83:19",
																"nodeType": "YulBlock",
																"src": "13117:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13119:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "13119:77:19"
																			},
																			"nativeSrc": "13119:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13119:79:19"
																		},
																		"nativeSrc": "13119:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13119:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13092:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13092:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13101:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13101:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13088:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13088:3:19"
																		},
																		"nativeSrc": "13088:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13088:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13113:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13084:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:19"
																},
																"nativeSrc": "13084:32:19",
																"nodeType": "YulFunctionCall",
																"src": "13084:32:19"
															},
															"nativeSrc": "13081:119:19",
															"nodeType": "YulIf",
															"src": "13081:119:19"
														},
														{
															"nativeSrc": "13210:117:19",
															"nodeType": "YulBlock",
															"src": "13210:117:19",
															"statements": [
																{
																	"nativeSrc": "13225:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13225:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13239:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13239:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13229:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13229:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13254:63:19",
																	"nodeType": "YulAssignment",
																	"src": "13254:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13289:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13289:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13300:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13300:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13285:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13285:3:19"
																				},
																				"nativeSrc": "13285:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13285:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13309:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13309:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13264:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "13264:20:19"
																		},
																		"nativeSrc": "13264:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13264:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13254:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13254:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13337:303:19",
															"nodeType": "YulBlock",
															"src": "13337:303:19",
															"statements": [
																{
																	"nativeSrc": "13352:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13352:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13383:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13383:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13394:2:19",
																						"nodeType": "YulLiteral",
																						"src": "13394:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13379:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13379:3:19"
																				},
																				"nativeSrc": "13379:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13379:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13366:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "13366:12:19"
																		},
																		"nativeSrc": "13366:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13366:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13356:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13356:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13445:83:19",
																		"nodeType": "YulBlock",
																		"src": "13445:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13447:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "13447:77:19"
																					},
																					"nativeSrc": "13447:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "13447:79:19"
																				},
																				"nativeSrc": "13447:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "13447:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13417:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13417:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13425:18:19",
																				"nodeType": "YulLiteral",
																				"src": "13425:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13414:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13414:2:19"
																		},
																		"nativeSrc": "13414:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13414:30:19"
																	},
																	"nativeSrc": "13411:117:19",
																	"nodeType": "YulIf",
																	"src": "13411:117:19"
																},
																{
																	"nativeSrc": "13542:88:19",
																	"nodeType": "YulAssignment",
																	"src": "13542:88:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13602:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13602:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13613:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13613:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13598:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13598:3:19"
																				},
																				"nativeSrc": "13598:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13598:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13622:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13622:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13552:45:19",
																			"nodeType": "YulIdentifier",
																			"src": "13552:45:19"
																		},
																		"nativeSrc": "13552:78:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13552:78:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13542:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13542:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13650:313:19",
															"nodeType": "YulBlock",
															"src": "13650:313:19",
															"statements": [
																{
																	"nativeSrc": "13665:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13665:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13696:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13696:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13707:2:19",
																						"nodeType": "YulLiteral",
																						"src": "13707:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13692:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13692:3:19"
																				},
																				"nativeSrc": "13692:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13692:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13679:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "13679:12:19"
																		},
																		"nativeSrc": "13679:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13679:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13669:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13669:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13758:83:19",
																		"nodeType": "YulBlock",
																		"src": "13758:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13760:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "13760:77:19"
																					},
																					"nativeSrc": "13760:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "13760:79:19"
																				},
																				"nativeSrc": "13760:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "13760:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13730:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13730:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13738:18:19",
																				"nodeType": "YulLiteral",
																				"src": "13738:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13727:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13727:2:19"
																		},
																		"nativeSrc": "13727:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13727:30:19"
																	},
																	"nativeSrc": "13724:117:19",
																	"nodeType": "YulIf",
																	"src": "13724:117:19"
																},
																{
																	"nativeSrc": "13855:98:19",
																	"nodeType": "YulAssignment",
																	"src": "13855:98:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13925:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13925:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13936:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13936:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13921:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13921:3:19"
																				},
																				"nativeSrc": "13921:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13921:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13945:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13945:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "13865:55:19",
																			"nodeType": "YulIdentifier",
																			"src": "13865:55:19"
																		},
																		"nativeSrc": "13865:88:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13865:88:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13855:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13855:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12911:1059:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13025:9:19",
														"nodeType": "YulTypedName",
														"src": "13025:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13036:7:19",
														"nodeType": "YulTypedName",
														"src": "13036:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13048:6:19",
														"nodeType": "YulTypedName",
														"src": "13048:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13056:6:19",
														"nodeType": "YulTypedName",
														"src": "13056:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13064:6:19",
														"nodeType": "YulTypedName",
														"src": "13064:6:19",
														"type": ""
													}
												],
												"src": "12911:1059:19"
											},
											{
												"body": {
													"nativeSrc": "14016:76:19",
													"nodeType": "YulBlock",
													"src": "14016:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14070:16:19",
																"nodeType": "YulBlock",
																"src": "14070:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14079:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14079:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14082:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14082:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14072:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14072:6:19"
																			},
																			"nativeSrc": "14072:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14072:12:19"
																		},
																		"nativeSrc": "14072:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14072:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14039:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "14039:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14061:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "14061:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14046:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "14046:14:19"
																				},
																				"nativeSrc": "14046:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14046:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14036:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "14036:2:19"
																		},
																		"nativeSrc": "14036:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14029:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:19"
																},
																"nativeSrc": "14029:40:19",
																"nodeType": "YulFunctionCall",
																"src": "14029:40:19"
															},
															"nativeSrc": "14026:60:19",
															"nodeType": "YulIf",
															"src": "14026:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13976:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14009:5:19",
														"nodeType": "YulTypedName",
														"src": "14009:5:19",
														"type": ""
													}
												],
												"src": "13976:116:19"
											},
											{
												"body": {
													"nativeSrc": "14147:84:19",
													"nodeType": "YulBlock",
													"src": "14147:84:19",
													"statements": [
														{
															"nativeSrc": "14157:29:19",
															"nodeType": "YulAssignment",
															"src": "14157:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14179:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14179:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14166:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "14166:12:19"
																},
																"nativeSrc": "14166:20:19",
																"nodeType": "YulFunctionCall",
																"src": "14166:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14157:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "14157:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14219:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "14219:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14195:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "14195:23:19"
																},
																"nativeSrc": "14195:30:19",
																"nodeType": "YulFunctionCall",
																"src": "14195:30:19"
															},
															"nativeSrc": "14195:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "14195:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "14098:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14125:6:19",
														"nodeType": "YulTypedName",
														"src": "14125:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14133:3:19",
														"nodeType": "YulTypedName",
														"src": "14133:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14141:5:19",
														"nodeType": "YulTypedName",
														"src": "14141:5:19",
														"type": ""
													}
												],
												"src": "14098:133:19"
											},
											{
												"body": {
													"nativeSrc": "14317:388:19",
													"nodeType": "YulBlock",
													"src": "14317:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14363:83:19",
																"nodeType": "YulBlock",
																"src": "14363:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14365:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "14365:77:19"
																			},
																			"nativeSrc": "14365:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14365:79:19"
																		},
																		"nativeSrc": "14365:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14365:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14338:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14338:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14347:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14347:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14334:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:19"
																		},
																		"nativeSrc": "14334:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14334:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14359:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14359:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14330:3:19"
																},
																"nativeSrc": "14330:32:19",
																"nodeType": "YulFunctionCall",
																"src": "14330:32:19"
															},
															"nativeSrc": "14327:119:19",
															"nodeType": "YulIf",
															"src": "14327:119:19"
														},
														{
															"nativeSrc": "14456:117:19",
															"nodeType": "YulBlock",
															"src": "14456:117:19",
															"statements": [
																{
																	"nativeSrc": "14471:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14471:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14485:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14485:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14475:6:19",
																			"nodeType": "YulTypedName",
																			"src": "14475:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14500:63:19",
																	"nodeType": "YulAssignment",
																	"src": "14500:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14535:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "14535:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14546:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "14546:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14531:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "14531:3:19"
																				},
																				"nativeSrc": "14531:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14531:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14555:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14555:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14510:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "14510:20:19"
																		},
																		"nativeSrc": "14510:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14510:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14500:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "14500:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14583:115:19",
															"nodeType": "YulBlock",
															"src": "14583:115:19",
															"statements": [
																{
																	"nativeSrc": "14598:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14598:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14612:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14612:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14602:6:19",
																			"nodeType": "YulTypedName",
																			"src": "14602:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14628:60:19",
																	"nodeType": "YulAssignment",
																	"src": "14628:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14660:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "14660:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14671:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "14671:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14656:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "14656:3:19"
																				},
																				"nativeSrc": "14656:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14656:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14680:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14680:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "14638:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "14638:17:19"
																		},
																		"nativeSrc": "14638:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14638:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14628:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "14628:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "14237:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14279:9:19",
														"nodeType": "YulTypedName",
														"src": "14279:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14290:7:19",
														"nodeType": "YulTypedName",
														"src": "14290:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14302:6:19",
														"nodeType": "YulTypedName",
														"src": "14302:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14310:6:19",
														"nodeType": "YulTypedName",
														"src": "14310:6:19",
														"type": ""
													}
												],
												"src": "14237:468:19"
											},
											{
												"body": {
													"nativeSrc": "14777:241:19",
													"nodeType": "YulBlock",
													"src": "14777:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14882:22:19",
																"nodeType": "YulBlock",
																"src": "14882:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14884:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "14884:16:19"
																			},
																			"nativeSrc": "14884:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14884:18:19"
																		},
																		"nativeSrc": "14884:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14884:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14854:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14854:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14862:18:19",
																		"nodeType": "YulLiteral",
																		"src": "14862:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14851:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14851:2:19"
																},
																"nativeSrc": "14851:30:19",
																"nodeType": "YulFunctionCall",
																"src": "14851:30:19"
															},
															"nativeSrc": "14848:56:19",
															"nodeType": "YulIf",
															"src": "14848:56:19"
														},
														{
															"nativeSrc": "14914:37:19",
															"nodeType": "YulAssignment",
															"src": "14914:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14944:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14944:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "14922:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "14922:21:19"
																},
																"nativeSrc": "14922:29:19",
																"nodeType": "YulFunctionCall",
																"src": "14922:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14914:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14914:4:19"
																}
															]
														},
														{
															"nativeSrc": "14988:23:19",
															"nodeType": "YulAssignment",
															"src": "14988:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "15000:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15000:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15006:4:19",
																		"nodeType": "YulLiteral",
																		"src": "15006:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14996:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14996:3:19"
																},
																"nativeSrc": "14996:15:19",
																"nodeType": "YulFunctionCall",
																"src": "14996:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14988:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14988:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "14711:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "14761:6:19",
														"nodeType": "YulTypedName",
														"src": "14761:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "14772:4:19",
														"nodeType": "YulTypedName",
														"src": "14772:4:19",
														"type": ""
													}
												],
												"src": "14711:307:19"
											},
											{
												"body": {
													"nativeSrc": "15107:340:19",
													"nodeType": "YulBlock",
													"src": "15107:340:19",
													"statements": [
														{
															"nativeSrc": "15117:74:19",
															"nodeType": "YulAssignment",
															"src": "15117:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15183:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15183:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "15142:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "15142:40:19"
																		},
																		"nativeSrc": "15142:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15142:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "15126:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "15126:15:19"
																},
																"nativeSrc": "15126:65:19",
																"nodeType": "YulFunctionCall",
																"src": "15126:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15117:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15117:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15207:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15207:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15214:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15214:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15200:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15200:6:19"
																},
																"nativeSrc": "15200:21:19",
																"nodeType": "YulFunctionCall",
																"src": "15200:21:19"
															},
															"nativeSrc": "15200:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "15200:21:19"
														},
														{
															"nativeSrc": "15230:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15230:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15245:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15245:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15252:4:19",
																		"nodeType": "YulLiteral",
																		"src": "15252:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15241:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15241:3:19"
																},
																"nativeSrc": "15241:16:19",
																"nodeType": "YulFunctionCall",
																"src": "15241:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "15234:3:19",
																	"nodeType": "YulTypedName",
																	"src": "15234:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15295:83:19",
																"nodeType": "YulBlock",
																"src": "15295:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "15297:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "15297:77:19"
																			},
																			"nativeSrc": "15297:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15297:79:19"
																		},
																		"nativeSrc": "15297:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15297:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "15276:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "15276:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "15281:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15281:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15272:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15272:3:19"
																		},
																		"nativeSrc": "15272:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15272:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15290:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15290:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15269:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "15269:2:19"
																},
																"nativeSrc": "15269:25:19",
																"nodeType": "YulFunctionCall",
																"src": "15269:25:19"
															},
															"nativeSrc": "15266:112:19",
															"nodeType": "YulIf",
															"src": "15266:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15424:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15424:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "15429:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15429:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15434:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15434:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15387:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "15387:36:19"
																},
																"nativeSrc": "15387:54:19",
																"nodeType": "YulFunctionCall",
																"src": "15387:54:19"
															},
															"nativeSrc": "15387:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "15387:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "15024:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "15080:3:19",
														"nodeType": "YulTypedName",
														"src": "15080:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15085:6:19",
														"nodeType": "YulTypedName",
														"src": "15085:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15093:3:19",
														"nodeType": "YulTypedName",
														"src": "15093:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15101:5:19",
														"nodeType": "YulTypedName",
														"src": "15101:5:19",
														"type": ""
													}
												],
												"src": "15024:423:19"
											},
											{
												"body": {
													"nativeSrc": "15527:277:19",
													"nodeType": "YulBlock",
													"src": "15527:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "15576:83:19",
																"nodeType": "YulBlock",
																"src": "15576:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15578:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "15578:77:19"
																			},
																			"nativeSrc": "15578:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15578:79:19"
																		},
																		"nativeSrc": "15578:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15578:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15555:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "15555:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15563:4:19",
																						"nodeType": "YulLiteral",
																						"src": "15563:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15551:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "15551:3:19"
																				},
																				"nativeSrc": "15551:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15551:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15570:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "15570:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15547:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15547:3:19"
																		},
																		"nativeSrc": "15547:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15547:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15540:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15540:6:19"
																},
																"nativeSrc": "15540:35:19",
																"nodeType": "YulFunctionCall",
																"src": "15540:35:19"
															},
															"nativeSrc": "15537:122:19",
															"nodeType": "YulIf",
															"src": "15537:122:19"
														},
														{
															"nativeSrc": "15668:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15668:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15695:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15695:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15682:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "15682:12:19"
																},
																"nativeSrc": "15682:20:19",
																"nodeType": "YulFunctionCall",
																"src": "15682:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15672:6:19",
																	"nodeType": "YulTypedName",
																	"src": "15672:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15711:87:19",
															"nodeType": "YulAssignment",
															"src": "15711:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15771:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15771:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15779:4:19",
																				"nodeType": "YulLiteral",
																				"src": "15779:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15767:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15767:3:19"
																		},
																		"nativeSrc": "15767:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15767:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15786:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15786:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15794:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15794:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "15720:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "15720:46:19"
																},
																"nativeSrc": "15720:78:19",
																"nodeType": "YulFunctionCall",
																"src": "15720:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15711:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15711:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "15466:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15505:6:19",
														"nodeType": "YulTypedName",
														"src": "15505:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15513:3:19",
														"nodeType": "YulTypedName",
														"src": "15513:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15521:5:19",
														"nodeType": "YulTypedName",
														"src": "15521:5:19",
														"type": ""
													}
												],
												"src": "15466:338:19"
											},
											{
												"body": {
													"nativeSrc": "15936:817:19",
													"nodeType": "YulBlock",
													"src": "15936:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "15983:83:19",
																"nodeType": "YulBlock",
																"src": "15983:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15985:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "15985:77:19"
																			},
																			"nativeSrc": "15985:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15985:79:19"
																		},
																		"nativeSrc": "15985:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15985:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15957:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "15957:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15966:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15966:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15953:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15953:3:19"
																		},
																		"nativeSrc": "15953:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15953:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:3:19",
																		"nodeType": "YulLiteral",
																		"src": "15978:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15949:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15949:3:19"
																},
																"nativeSrc": "15949:33:19",
																"nodeType": "YulFunctionCall",
																"src": "15949:33:19"
															},
															"nativeSrc": "15946:120:19",
															"nodeType": "YulIf",
															"src": "15946:120:19"
														},
														{
															"nativeSrc": "16076:117:19",
															"nodeType": "YulBlock",
															"src": "16076:117:19",
															"statements": [
																{
																	"nativeSrc": "16091:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16091:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16105:1:19",
																		"nodeType": "YulLiteral",
																		"src": "16105:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16095:6:19",
																			"nodeType": "YulTypedName",
																			"src": "16095:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16120:63:19",
																	"nodeType": "YulAssignment",
																	"src": "16120:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16155:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "16155:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16166:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "16166:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16151:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "16151:3:19"
																				},
																				"nativeSrc": "16151:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16151:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16175:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "16175:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16130:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "16130:20:19"
																		},
																		"nativeSrc": "16130:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16130:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16120:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "16120:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16203:118:19",
															"nodeType": "YulBlock",
															"src": "16203:118:19",
															"statements": [
																{
																	"nativeSrc": "16218:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16218:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16232:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16232:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16222:6:19",
																			"nodeType": "YulTypedName",
																			"src": "16222:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16248:63:19",
																	"nodeType": "YulAssignment",
																	"src": "16248:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16283:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "16283:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16294:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "16294:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16279:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "16279:3:19"
																				},
																				"nativeSrc": "16279:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16279:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16303:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "16303:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16258:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "16258:20:19"
																		},
																		"nativeSrc": "16258:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16258:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16248:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "16248:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16331:118:19",
															"nodeType": "YulBlock",
															"src": "16331:118:19",
															"statements": [
																{
																	"nativeSrc": "16346:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16346:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16360:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16360:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16350:6:19",
																			"nodeType": "YulTypedName",
																			"src": "16350:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16376:63:19",
																	"nodeType": "YulAssignment",
																	"src": "16376:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16411:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "16411:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16422:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "16422:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16407:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "16407:3:19"
																				},
																				"nativeSrc": "16407:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16407:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16431:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "16431:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16386:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "16386:20:19"
																		},
																		"nativeSrc": "16386:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16386:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16376:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "16376:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16459:287:19",
															"nodeType": "YulBlock",
															"src": "16459:287:19",
															"statements": [
																{
																	"nativeSrc": "16474:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16474:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16505:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "16505:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16516:2:19",
																						"nodeType": "YulLiteral",
																						"src": "16516:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16501:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "16501:3:19"
																				},
																				"nativeSrc": "16501:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16501:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16488:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "16488:12:19"
																		},
																		"nativeSrc": "16488:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16488:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16478:6:19",
																			"nodeType": "YulTypedName",
																			"src": "16478:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16567:83:19",
																		"nodeType": "YulBlock",
																		"src": "16567:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16569:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "16569:77:19"
																					},
																					"nativeSrc": "16569:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "16569:79:19"
																				},
																				"nativeSrc": "16569:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "16569:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16539:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16539:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16547:18:19",
																				"nodeType": "YulLiteral",
																				"src": "16547:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16536:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "16536:2:19"
																		},
																		"nativeSrc": "16536:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16536:30:19"
																	},
																	"nativeSrc": "16533:117:19",
																	"nodeType": "YulIf",
																	"src": "16533:117:19"
																},
																{
																	"nativeSrc": "16664:72:19",
																	"nodeType": "YulAssignment",
																	"src": "16664:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16708:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "16708:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16719:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "16719:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16704:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "16704:3:19"
																				},
																				"nativeSrc": "16704:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16704:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16728:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "16728:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16674:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "16674:29:19"
																		},
																		"nativeSrc": "16674:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16674:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16664:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "16664:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "15810:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15882:9:19",
														"nodeType": "YulTypedName",
														"src": "15882:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15893:7:19",
														"nodeType": "YulTypedName",
														"src": "15893:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15905:6:19",
														"nodeType": "YulTypedName",
														"src": "15905:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15913:6:19",
														"nodeType": "YulTypedName",
														"src": "15913:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15921:6:19",
														"nodeType": "YulTypedName",
														"src": "15921:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15929:6:19",
														"nodeType": "YulTypedName",
														"src": "15929:6:19",
														"type": ""
													}
												],
												"src": "15810:943:19"
											},
											{
												"body": {
													"nativeSrc": "16885:206:19",
													"nodeType": "YulBlock",
													"src": "16885:206:19",
													"statements": [
														{
															"nativeSrc": "16895:26:19",
															"nodeType": "YulAssignment",
															"src": "16895:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16907:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16907:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16918:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16918:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16903:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16903:3:19"
																},
																"nativeSrc": "16903:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16903:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16895:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16895:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16975:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16975:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16988:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16988:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16999:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16999:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16984:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16984:3:19"
																		},
																		"nativeSrc": "16984:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16984:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16931:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16931:43:19"
																},
																"nativeSrc": "16931:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16931:71:19"
															},
															"nativeSrc": "16931:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16931:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17056:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17056:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17069:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17069:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17080:2:19",
																				"nodeType": "YulLiteral",
																				"src": "17080:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17065:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17065:3:19"
																		},
																		"nativeSrc": "17065:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17065:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17012:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "17012:43:19"
																},
																"nativeSrc": "17012:72:19",
																"nodeType": "YulFunctionCall",
																"src": "17012:72:19"
															},
															"nativeSrc": "17012:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "17012:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16759:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16849:9:19",
														"nodeType": "YulTypedName",
														"src": "16849:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16861:6:19",
														"nodeType": "YulTypedName",
														"src": "16861:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16869:6:19",
														"nodeType": "YulTypedName",
														"src": "16869:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16880:4:19",
														"nodeType": "YulTypedName",
														"src": "16880:4:19",
														"type": ""
													}
												],
												"src": "16759:332:19"
											},
											{
												"body": {
													"nativeSrc": "17180:391:19",
													"nodeType": "YulBlock",
													"src": "17180:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "17226:83:19",
																"nodeType": "YulBlock",
																"src": "17226:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17228:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "17228:77:19"
																			},
																			"nativeSrc": "17228:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17228:79:19"
																		},
																		"nativeSrc": "17228:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "17228:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17201:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17201:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17210:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17210:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17197:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17197:3:19"
																		},
																		"nativeSrc": "17197:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17197:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17222:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17222:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17193:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17193:3:19"
																},
																"nativeSrc": "17193:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17193:32:19"
															},
															"nativeSrc": "17190:119:19",
															"nodeType": "YulIf",
															"src": "17190:119:19"
														},
														{
															"nativeSrc": "17319:117:19",
															"nodeType": "YulBlock",
															"src": "17319:117:19",
															"statements": [
																{
																	"nativeSrc": "17334:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17334:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17348:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17348:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17338:6:19",
																			"nodeType": "YulTypedName",
																			"src": "17338:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17363:63:19",
																	"nodeType": "YulAssignment",
																	"src": "17363:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17398:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "17398:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17409:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17409:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17394:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "17394:3:19"
																				},
																				"nativeSrc": "17394:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17394:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17418:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17418:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17373:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "17373:20:19"
																		},
																		"nativeSrc": "17373:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17373:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17363:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "17363:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17446:118:19",
															"nodeType": "YulBlock",
															"src": "17446:118:19",
															"statements": [
																{
																	"nativeSrc": "17461:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17461:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17475:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17475:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17465:6:19",
																			"nodeType": "YulTypedName",
																			"src": "17465:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17491:63:19",
																	"nodeType": "YulAssignment",
																	"src": "17491:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17526:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "17526:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17537:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17537:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17522:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "17522:3:19"
																				},
																				"nativeSrc": "17522:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17522:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17546:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17546:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17501:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "17501:20:19"
																		},
																		"nativeSrc": "17501:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17501:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17491:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "17491:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17097:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17142:9:19",
														"nodeType": "YulTypedName",
														"src": "17142:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17153:7:19",
														"nodeType": "YulTypedName",
														"src": "17153:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17165:6:19",
														"nodeType": "YulTypedName",
														"src": "17165:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17173:6:19",
														"nodeType": "YulTypedName",
														"src": "17173:6:19",
														"type": ""
													}
												],
												"src": "17097:474:19"
											},
											{
												"body": {
													"nativeSrc": "17605:152:19",
													"nodeType": "YulBlock",
													"src": "17605:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17622:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17622:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17625:77:19",
																		"nodeType": "YulLiteral",
																		"src": "17625:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17615:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17615:6:19"
																},
																"nativeSrc": "17615:88:19",
																"nodeType": "YulFunctionCall",
																"src": "17615:88:19"
															},
															"nativeSrc": "17615:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "17615:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17719:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17719:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17722:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17722:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17712:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17712:6:19"
																},
																"nativeSrc": "17712:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17712:15:19"
															},
															"nativeSrc": "17712:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17712:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17743:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17743:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17746:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17746:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17736:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17736:6:19"
																},
																"nativeSrc": "17736:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17736:15:19"
															},
															"nativeSrc": "17736:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17736:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17577:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "17577:180:19"
											},
											{
												"body": {
													"nativeSrc": "17814:269:19",
													"nodeType": "YulBlock",
													"src": "17814:269:19",
													"statements": [
														{
															"nativeSrc": "17824:22:19",
															"nodeType": "YulAssignment",
															"src": "17824:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17838:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "17838:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17844:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17844:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17834:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17834:3:19"
																},
																"nativeSrc": "17834:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17834:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17824:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17824:6:19"
																}
															]
														},
														{
															"nativeSrc": "17855:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "17855:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17885:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "17885:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17891:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17891:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17881:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17881:3:19"
																},
																"nativeSrc": "17881:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17881:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "17859:18:19",
																	"nodeType": "YulTypedName",
																	"src": "17859:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17932:51:19",
																"nodeType": "YulBlock",
																"src": "17932:51:19",
																"statements": [
																	{
																		"nativeSrc": "17946:27:19",
																		"nodeType": "YulAssignment",
																		"src": "17946:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17960:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "17960:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17968:4:19",
																					"nodeType": "YulLiteral",
																					"src": "17968:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17956:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "17956:3:19"
																			},
																			"nativeSrc": "17956:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17956:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17946:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17946:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17912:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "17912:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17905:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17905:6:19"
																},
																"nativeSrc": "17905:26:19",
																"nodeType": "YulFunctionCall",
																"src": "17905:26:19"
															},
															"nativeSrc": "17902:81:19",
															"nodeType": "YulIf",
															"src": "17902:81:19"
														},
														{
															"body": {
																"nativeSrc": "18035:42:19",
																"nodeType": "YulBlock",
																"src": "18035:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18049:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "18049:16:19"
																			},
																			"nativeSrc": "18049:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18049:18:19"
																		},
																		"nativeSrc": "18049:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18049:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17999:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "17999:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18022:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "18022:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18030:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18030:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18019:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "18019:2:19"
																		},
																		"nativeSrc": "18019:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18019:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17996:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "17996:2:19"
																},
																"nativeSrc": "17996:38:19",
																"nodeType": "YulFunctionCall",
																"src": "17996:38:19"
															},
															"nativeSrc": "17993:84:19",
															"nodeType": "YulIf",
															"src": "17993:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "17763:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17798:4:19",
														"nodeType": "YulTypedName",
														"src": "17798:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17807:6:19",
														"nodeType": "YulTypedName",
														"src": "17807:6:19",
														"type": ""
													}
												],
												"src": "17763:320:19"
											},
											{
												"body": {
													"nativeSrc": "18243:288:19",
													"nodeType": "YulBlock",
													"src": "18243:288:19",
													"statements": [
														{
															"nativeSrc": "18253:26:19",
															"nodeType": "YulAssignment",
															"src": "18253:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18265:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18265:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18276:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18276:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18261:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18261:3:19"
																},
																"nativeSrc": "18261:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18261:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18253:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18253:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18333:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18333:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18346:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18346:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18357:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18357:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18342:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18342:3:19"
																		},
																		"nativeSrc": "18342:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18342:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18289:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18289:43:19"
																},
																"nativeSrc": "18289:71:19",
																"nodeType": "YulFunctionCall",
																"src": "18289:71:19"
															},
															"nativeSrc": "18289:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "18289:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18414:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18414:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18427:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18427:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18438:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18438:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18423:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18423:3:19"
																		},
																		"nativeSrc": "18423:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18423:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18370:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18370:43:19"
																},
																"nativeSrc": "18370:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18370:72:19"
															},
															"nativeSrc": "18370:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18370:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18496:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18509:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18509:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18520:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18520:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18505:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18505:3:19"
																		},
																		"nativeSrc": "18505:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18505:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18452:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18452:43:19"
																},
																"nativeSrc": "18452:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18452:72:19"
															},
															"nativeSrc": "18452:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18452:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "18089:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18199:9:19",
														"nodeType": "YulTypedName",
														"src": "18199:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18211:6:19",
														"nodeType": "YulTypedName",
														"src": "18211:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18219:6:19",
														"nodeType": "YulTypedName",
														"src": "18219:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18227:6:19",
														"nodeType": "YulTypedName",
														"src": "18227:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18238:4:19",
														"nodeType": "YulTypedName",
														"src": "18238:4:19",
														"type": ""
													}
												],
												"src": "18089:442:19"
											},
											{
												"body": {
													"nativeSrc": "18565:152:19",
													"nodeType": "YulBlock",
													"src": "18565:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18582:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18582:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18585:77:19",
																		"nodeType": "YulLiteral",
																		"src": "18585:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18575:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18575:6:19"
																},
																"nativeSrc": "18575:88:19",
																"nodeType": "YulFunctionCall",
																"src": "18575:88:19"
															},
															"nativeSrc": "18575:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "18575:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18679:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18679:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18682:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18682:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18672:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18672:6:19"
																},
																"nativeSrc": "18672:15:19",
																"nodeType": "YulFunctionCall",
																"src": "18672:15:19"
															},
															"nativeSrc": "18672:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "18672:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18703:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18703:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18706:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18706:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18696:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18696:6:19"
																},
																"nativeSrc": "18696:15:19",
																"nodeType": "YulFunctionCall",
																"src": "18696:15:19"
															},
															"nativeSrc": "18696:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "18696:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18537:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "18537:180:19"
											},
											{
												"body": {
													"nativeSrc": "18767:147:19",
													"nodeType": "YulBlock",
													"src": "18767:147:19",
													"statements": [
														{
															"nativeSrc": "18777:25:19",
															"nodeType": "YulAssignment",
															"src": "18777:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18800:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18800:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18782:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "18782:17:19"
																},
																"nativeSrc": "18782:20:19",
																"nodeType": "YulFunctionCall",
																"src": "18782:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18777:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "18777:1:19"
																}
															]
														},
														{
															"nativeSrc": "18811:25:19",
															"nodeType": "YulAssignment",
															"src": "18811:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18834:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18834:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18816:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "18816:17:19"
																},
																"nativeSrc": "18816:20:19",
																"nodeType": "YulFunctionCall",
																"src": "18816:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18811:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "18811:1:19"
																}
															]
														},
														{
															"nativeSrc": "18845:16:19",
															"nodeType": "YulAssignment",
															"src": "18845:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18856:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18856:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18859:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18859:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18852:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18852:3:19"
																},
																"nativeSrc": "18852:9:19",
																"nodeType": "YulFunctionCall",
																"src": "18852:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18845:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18845:3:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18885:22:19",
																"nodeType": "YulBlock",
																"src": "18885:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18887:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "18887:16:19"
																			},
																			"nativeSrc": "18887:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18887:18:19"
																		},
																		"nativeSrc": "18887:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18887:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18877:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18877:1:19"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18880:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18880:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18874:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "18874:2:19"
																},
																"nativeSrc": "18874:10:19",
																"nodeType": "YulFunctionCall",
																"src": "18874:10:19"
															},
															"nativeSrc": "18871:36:19",
															"nodeType": "YulIf",
															"src": "18871:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18723:191:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18754:1:19",
														"nodeType": "YulTypedName",
														"src": "18754:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18757:1:19",
														"nodeType": "YulTypedName",
														"src": "18757:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18763:3:19",
														"nodeType": "YulTypedName",
														"src": "18763:3:19",
														"type": ""
													}
												],
												"src": "18723:191:19"
											},
											{
												"body": {
													"nativeSrc": "19026:65:19",
													"nodeType": "YulBlock",
													"src": "19026:65:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19048:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "19048:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19056:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19056:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19044:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19044:3:19"
																		},
																		"nativeSrc": "19044:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19044:14:19"
																	},
																	{
																		"hexValue": "4172726179206c656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "19060:23:19",
																		"nodeType": "YulLiteral",
																		"src": "19060:23:19",
																		"type": "",
																		"value": "Array length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19037:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19037:6:19"
																},
																"nativeSrc": "19037:47:19",
																"nodeType": "YulFunctionCall",
																"src": "19037:47:19"
															},
															"nativeSrc": "19037:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "19037:47:19"
														}
													]
												},
												"name": "store_literal_in_memory_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
												"nativeSrc": "18920:171:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19018:6:19",
														"nodeType": "YulTypedName",
														"src": "19018:6:19",
														"type": ""
													}
												],
												"src": "18920:171:19"
											},
											{
												"body": {
													"nativeSrc": "19243:220:19",
													"nodeType": "YulBlock",
													"src": "19243:220:19",
													"statements": [
														{
															"nativeSrc": "19253:74:19",
															"nodeType": "YulAssignment",
															"src": "19253:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19319:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19319:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19324:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19324:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19260:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "19260:58:19"
																},
																"nativeSrc": "19260:67:19",
																"nodeType": "YulFunctionCall",
																"src": "19260:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19253:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19253:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19425:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19425:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																	"nativeSrc": "19336:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "19336:88:19"
																},
																"nativeSrc": "19336:93:19",
																"nodeType": "YulFunctionCall",
																"src": "19336:93:19"
															},
															"nativeSrc": "19336:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "19336:93:19"
														},
														{
															"nativeSrc": "19438:19:19",
															"nodeType": "YulAssignment",
															"src": "19438:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19449:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19449:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19454:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19454:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19445:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19445:3:19"
																},
																"nativeSrc": "19445:12:19",
																"nodeType": "YulFunctionCall",
																"src": "19445:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19438:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19438:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19097:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19231:3:19",
														"nodeType": "YulTypedName",
														"src": "19231:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19239:3:19",
														"nodeType": "YulTypedName",
														"src": "19239:3:19",
														"type": ""
													}
												],
												"src": "19097:366:19"
											},
											{
												"body": {
													"nativeSrc": "19640:248:19",
													"nodeType": "YulBlock",
													"src": "19640:248:19",
													"statements": [
														{
															"nativeSrc": "19650:26:19",
															"nodeType": "YulAssignment",
															"src": "19650:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19662:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19662:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19673:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19673:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19658:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19658:3:19"
																},
																"nativeSrc": "19658:18:19",
																"nodeType": "YulFunctionCall",
																"src": "19658:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19650:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19650:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19697:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19697:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19708:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19708:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19693:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19693:3:19"
																		},
																		"nativeSrc": "19693:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19693:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19716:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19716:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19722:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19722:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19712:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19712:3:19"
																		},
																		"nativeSrc": "19712:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19712:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19686:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19686:6:19"
																},
																"nativeSrc": "19686:47:19",
																"nodeType": "YulFunctionCall",
																"src": "19686:47:19"
															},
															"nativeSrc": "19686:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "19686:47:19"
														},
														{
															"nativeSrc": "19742:139:19",
															"nodeType": "YulAssignment",
															"src": "19742:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19876:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19876:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19750:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "19750:124:19"
																},
																"nativeSrc": "19750:131:19",
																"nodeType": "YulFunctionCall",
																"src": "19750:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19742:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19742:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19469:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19620:9:19",
														"nodeType": "YulTypedName",
														"src": "19620:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19635:4:19",
														"nodeType": "YulTypedName",
														"src": "19635:4:19",
														"type": ""
													}
												],
												"src": "19469:419:19"
											},
											{
												"body": {
													"nativeSrc": "19922:152:19",
													"nodeType": "YulBlock",
													"src": "19922:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19939:1:19",
																		"nodeType": "YulLiteral",
																		"src": "19939:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19942:77:19",
																		"nodeType": "YulLiteral",
																		"src": "19942:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19932:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19932:6:19"
																},
																"nativeSrc": "19932:88:19",
																"nodeType": "YulFunctionCall",
																"src": "19932:88:19"
															},
															"nativeSrc": "19932:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "19932:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20036:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20036:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20039:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20039:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20029:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20029:6:19"
																},
																"nativeSrc": "20029:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20029:15:19"
															},
															"nativeSrc": "20029:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20029:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20060:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20060:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20063:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20063:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20053:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20053:6:19"
																},
																"nativeSrc": "20053:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20053:15:19"
															},
															"nativeSrc": "20053:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20053:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "19894:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "19894:180:19"
											},
											{
												"body": {
													"nativeSrc": "20128:362:19",
													"nodeType": "YulBlock",
													"src": "20128:362:19",
													"statements": [
														{
															"nativeSrc": "20138:25:19",
															"nodeType": "YulAssignment",
															"src": "20138:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20161:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20161:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20143:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20143:17:19"
																},
																"nativeSrc": "20143:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20143:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20138:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20138:1:19"
																}
															]
														},
														{
															"nativeSrc": "20172:25:19",
															"nodeType": "YulAssignment",
															"src": "20172:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20195:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20195:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20177:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20177:17:19"
																},
																"nativeSrc": "20177:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20177:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20172:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20172:1:19"
																}
															]
														},
														{
															"nativeSrc": "20206:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20206:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20229:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20229:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20232:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20232:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20225:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20225:3:19"
																},
																"nativeSrc": "20225:9:19",
																"nodeType": "YulFunctionCall",
																"src": "20225:9:19"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20210:11:19",
																	"nodeType": "YulTypedName",
																	"src": "20210:11:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20243:41:19",
															"nodeType": "YulAssignment",
															"src": "20243:41:19",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20272:11:19",
																		"nodeType": "YulIdentifier",
																		"src": "20272:11:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20254:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20254:17:19"
																},
																"nativeSrc": "20254:30:19",
																"nodeType": "YulFunctionCall",
																"src": "20254:30:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20243:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "20243:7:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20461:22:19",
																"nodeType": "YulBlock",
																"src": "20461:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20463:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "20463:16:19"
																			},
																			"nativeSrc": "20463:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20463:18:19"
																		},
																		"nativeSrc": "20463:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20463:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "20394:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "20394:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "20387:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "20387:6:19"
																				},
																				"nativeSrc": "20387:9:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20387:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "20417:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "20417:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "20424:7:19",
																								"nodeType": "YulIdentifier",
																								"src": "20424:7:19"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "20433:1:19",
																								"nodeType": "YulIdentifier",
																								"src": "20433:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "20420:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "20420:3:19"
																						},
																						"nativeSrc": "20420:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "20420:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "20414:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "20414:2:19"
																				},
																				"nativeSrc": "20414:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20414:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "20367:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "20367:2:19"
																		},
																		"nativeSrc": "20367:83:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20367:83:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20347:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20347:6:19"
																},
																"nativeSrc": "20347:113:19",
																"nodeType": "YulFunctionCall",
																"src": "20347:113:19"
															},
															"nativeSrc": "20344:139:19",
															"nodeType": "YulIf",
															"src": "20344:139:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "20080:410:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20111:1:19",
														"nodeType": "YulTypedName",
														"src": "20111:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20114:1:19",
														"nodeType": "YulTypedName",
														"src": "20114:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "20120:7:19",
														"nodeType": "YulTypedName",
														"src": "20120:7:19",
														"type": ""
													}
												],
												"src": "20080:410:19"
											},
											{
												"body": {
													"nativeSrc": "20524:152:19",
													"nodeType": "YulBlock",
													"src": "20524:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20541:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20541:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20544:77:19",
																		"nodeType": "YulLiteral",
																		"src": "20544:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20534:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20534:6:19"
																},
																"nativeSrc": "20534:88:19",
																"nodeType": "YulFunctionCall",
																"src": "20534:88:19"
															},
															"nativeSrc": "20534:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "20534:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20638:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20638:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20641:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20641:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20631:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20631:6:19"
																},
																"nativeSrc": "20631:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20631:15:19"
															},
															"nativeSrc": "20631:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20631:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20662:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20662:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20665:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20665:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20655:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20655:6:19"
																},
																"nativeSrc": "20655:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20655:15:19"
															},
															"nativeSrc": "20655:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20655:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20496:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "20496:180:19"
											},
											{
												"body": {
													"nativeSrc": "20724:143:19",
													"nodeType": "YulBlock",
													"src": "20724:143:19",
													"statements": [
														{
															"nativeSrc": "20734:25:19",
															"nodeType": "YulAssignment",
															"src": "20734:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20757:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20757:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20739:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20739:17:19"
																},
																"nativeSrc": "20739:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20739:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20734:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20734:1:19"
																}
															]
														},
														{
															"nativeSrc": "20768:25:19",
															"nodeType": "YulAssignment",
															"src": "20768:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20791:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20791:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20773:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20773:17:19"
																},
																"nativeSrc": "20773:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20773:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20768:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20768:1:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20815:22:19",
																"nodeType": "YulBlock",
																"src": "20815:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "20817:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "20817:16:19"
																			},
																			"nativeSrc": "20817:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20817:18:19"
																		},
																		"nativeSrc": "20817:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20817:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20812:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20812:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20805:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20805:6:19"
																},
																"nativeSrc": "20805:9:19",
																"nodeType": "YulFunctionCall",
																"src": "20805:9:19"
															},
															"nativeSrc": "20802:35:19",
															"nodeType": "YulIf",
															"src": "20802:35:19"
														},
														{
															"nativeSrc": "20847:14:19",
															"nodeType": "YulAssignment",
															"src": "20847:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20856:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20856:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20859:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20859:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20852:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20852:3:19"
																},
																"nativeSrc": "20852:9:19",
																"nodeType": "YulFunctionCall",
																"src": "20852:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "20847:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20847:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "20682:185:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20713:1:19",
														"nodeType": "YulTypedName",
														"src": "20713:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20716:1:19",
														"nodeType": "YulTypedName",
														"src": "20716:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "20722:1:19",
														"nodeType": "YulTypedName",
														"src": "20722:1:19",
														"type": ""
													}
												],
												"src": "20682:185:19"
											},
											{
												"body": {
													"nativeSrc": "20920:32:19",
													"nodeType": "YulBlock",
													"src": "20920:32:19",
													"statements": [
														{
															"nativeSrc": "20930:16:19",
															"nodeType": "YulAssignment",
															"src": "20930:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "20941:5:19",
																"nodeType": "YulIdentifier",
																"src": "20941:5:19"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "20930:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "20930:7:19"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "20873:79:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20902:5:19",
														"nodeType": "YulTypedName",
														"src": "20902:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "20912:7:19",
														"nodeType": "YulTypedName",
														"src": "20912:7:19",
														"type": ""
													}
												],
												"src": "20873:79:19"
											},
											{
												"body": {
													"nativeSrc": "21041:74:19",
													"nodeType": "YulBlock",
													"src": "21041:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21058:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21058:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21101:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "21101:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "21083:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "21083:17:19"
																				},
																				"nativeSrc": "21083:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21083:24:19"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "21063:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "21063:19:19"
																		},
																		"nativeSrc": "21063:45:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21063:45:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21051:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21051:6:19"
																},
																"nativeSrc": "21051:58:19",
																"nodeType": "YulFunctionCall",
																"src": "21051:58:19"
															},
															"nativeSrc": "21051:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "21051:58:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "20958:157:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21029:5:19",
														"nodeType": "YulTypedName",
														"src": "21029:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21036:3:19",
														"nodeType": "YulTypedName",
														"src": "21036:3:19",
														"type": ""
													}
												],
												"src": "20958:157:19"
											},
											{
												"body": {
													"nativeSrc": "21167:32:19",
													"nodeType": "YulBlock",
													"src": "21167:32:19",
													"statements": [
														{
															"nativeSrc": "21177:16:19",
															"nodeType": "YulAssignment",
															"src": "21177:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "21188:5:19",
																"nodeType": "YulIdentifier",
																"src": "21188:5:19"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "21177:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "21177:7:19"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes4",
												"nativeSrc": "21121:78:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21149:5:19",
														"nodeType": "YulTypedName",
														"src": "21149:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "21159:7:19",
														"nodeType": "YulTypedName",
														"src": "21159:7:19",
														"type": ""
													}
												],
												"src": "21121:78:19"
											},
											{
												"body": {
													"nativeSrc": "21286:72:19",
													"nodeType": "YulBlock",
													"src": "21286:72:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21303:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21303:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21344:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "21344:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "21327:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "21327:16:19"
																				},
																				"nativeSrc": "21327:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21327:23:19"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes4",
																			"nativeSrc": "21308:18:19",
																			"nodeType": "YulIdentifier",
																			"src": "21308:18:19"
																		},
																		"nativeSrc": "21308:43:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21308:43:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21296:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21296:6:19"
																},
																"nativeSrc": "21296:56:19",
																"nodeType": "YulFunctionCall",
																"src": "21296:56:19"
															},
															"nativeSrc": "21296:56:19",
															"nodeType": "YulExpressionStatement",
															"src": "21296:56:19"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack",
												"nativeSrc": "21205:153:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21274:5:19",
														"nodeType": "YulTypedName",
														"src": "21274:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21281:3:19",
														"nodeType": "YulTypedName",
														"src": "21281:3:19",
														"type": ""
													}
												],
												"src": "21205:153:19"
											},
											{
												"body": {
													"nativeSrc": "21534:363:19",
													"nodeType": "YulBlock",
													"src": "21534:363:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21607:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21607:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21616:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21616:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "21545:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "21545:61:19"
																},
																"nativeSrc": "21545:75:19",
																"nodeType": "YulFunctionCall",
																"src": "21545:75:19"
															},
															"nativeSrc": "21545:75:19",
															"nodeType": "YulExpressionStatement",
															"src": "21545:75:19"
														},
														{
															"nativeSrc": "21629:19:19",
															"nodeType": "YulAssignment",
															"src": "21629:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21640:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21640:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21645:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21645:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21636:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21636:3:19"
																},
																"nativeSrc": "21636:12:19",
																"nodeType": "YulFunctionCall",
																"src": "21636:12:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21629:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21629:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21720:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21720:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21729:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21729:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "21658:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "21658:61:19"
																},
																"nativeSrc": "21658:75:19",
																"nodeType": "YulFunctionCall",
																"src": "21658:75:19"
															},
															"nativeSrc": "21658:75:19",
															"nodeType": "YulExpressionStatement",
															"src": "21658:75:19"
														},
														{
															"nativeSrc": "21742:19:19",
															"nodeType": "YulAssignment",
															"src": "21742:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21753:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21753:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21758:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21758:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21749:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21749:3:19"
																},
																"nativeSrc": "21749:12:19",
																"nodeType": "YulFunctionCall",
																"src": "21749:12:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21742:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21742:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21831:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21831:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21840:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21840:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack",
																	"nativeSrc": "21771:59:19",
																	"nodeType": "YulIdentifier",
																	"src": "21771:59:19"
																},
																"nativeSrc": "21771:73:19",
																"nodeType": "YulFunctionCall",
																"src": "21771:73:19"
															},
															"nativeSrc": "21771:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "21771:73:19"
														},
														{
															"nativeSrc": "21853:18:19",
															"nodeType": "YulAssignment",
															"src": "21853:18:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21864:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21864:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21869:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21869:1:19",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21860:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21860:3:19"
																},
																"nativeSrc": "21860:11:19",
																"nodeType": "YulFunctionCall",
																"src": "21860:11:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21853:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21853:3:19"
																}
															]
														},
														{
															"nativeSrc": "21881:10:19",
															"nodeType": "YulAssignment",
															"src": "21881:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "21888:3:19",
																"nodeType": "YulIdentifier",
																"src": "21888:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21881:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21881:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes4__to_t_uint256_t_uint256_t_bytes4__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21364:533:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21497:3:19",
														"nodeType": "YulTypedName",
														"src": "21497:3:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21503:6:19",
														"nodeType": "YulTypedName",
														"src": "21503:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21511:6:19",
														"nodeType": "YulTypedName",
														"src": "21511:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21519:6:19",
														"nodeType": "YulTypedName",
														"src": "21519:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21530:3:19",
														"nodeType": "YulTypedName",
														"src": "21530:3:19",
														"type": ""
													}
												],
												"src": "21364:533:19"
											},
											{
												"body": {
													"nativeSrc": "21957:87:19",
													"nodeType": "YulBlock",
													"src": "21957:87:19",
													"statements": [
														{
															"nativeSrc": "21967:11:19",
															"nodeType": "YulAssignment",
															"src": "21967:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "21975:3:19",
																"nodeType": "YulIdentifier",
																"src": "21975:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21967:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21967:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21995:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21995:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21998:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21988:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21988:6:19"
																},
																"nativeSrc": "21988:14:19",
																"nodeType": "YulFunctionCall",
																"src": "21988:14:19"
															},
															"nativeSrc": "21988:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "21988:14:19"
														},
														{
															"nativeSrc": "22011:26:19",
															"nodeType": "YulAssignment",
															"src": "22011:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22029:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22029:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22032:4:19",
																		"nodeType": "YulLiteral",
																		"src": "22032:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22019:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "22019:9:19"
																},
																"nativeSrc": "22019:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22019:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22011:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22011:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21903:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21944:3:19",
														"nodeType": "YulTypedName",
														"src": "21944:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21952:4:19",
														"nodeType": "YulTypedName",
														"src": "21952:4:19",
														"type": ""
													}
												],
												"src": "21903:141:19"
											},
											{
												"body": {
													"nativeSrc": "22094:49:19",
													"nodeType": "YulBlock",
													"src": "22094:49:19",
													"statements": [
														{
															"nativeSrc": "22104:33:19",
															"nodeType": "YulAssignment",
															"src": "22104:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22122:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "22122:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22129:2:19",
																				"nodeType": "YulLiteral",
																				"src": "22129:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22118:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22118:3:19"
																		},
																		"nativeSrc": "22118:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22118:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22134:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22134:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22114:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22114:3:19"
																},
																"nativeSrc": "22114:23:19",
																"nodeType": "YulFunctionCall",
																"src": "22114:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22104:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22104:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22050:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22077:5:19",
														"nodeType": "YulTypedName",
														"src": "22077:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22087:6:19",
														"nodeType": "YulTypedName",
														"src": "22087:6:19",
														"type": ""
													}
												],
												"src": "22050:93:19"
											},
											{
												"body": {
													"nativeSrc": "22202:54:19",
													"nodeType": "YulBlock",
													"src": "22202:54:19",
													"statements": [
														{
															"nativeSrc": "22212:37:19",
															"nodeType": "YulAssignment",
															"src": "22212:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22237:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22237:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22243:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22243:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22233:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22233:3:19"
																},
																"nativeSrc": "22233:16:19",
																"nodeType": "YulFunctionCall",
																"src": "22233:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22212:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "22212:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22149:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22177:4:19",
														"nodeType": "YulTypedName",
														"src": "22177:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22183:5:19",
														"nodeType": "YulTypedName",
														"src": "22183:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22193:8:19",
														"nodeType": "YulTypedName",
														"src": "22193:8:19",
														"type": ""
													}
												],
												"src": "22149:107:19"
											},
											{
												"body": {
													"nativeSrc": "22338:317:19",
													"nodeType": "YulBlock",
													"src": "22338:317:19",
													"statements": [
														{
															"nativeSrc": "22348:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22348:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22369:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "22369:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22381:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22381:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22365:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22365:3:19"
																},
																"nativeSrc": "22365:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22365:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22352:9:19",
																	"nodeType": "YulTypedName",
																	"src": "22352:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22392:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22392:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22423:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "22423:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22434:66:19",
																		"nodeType": "YulLiteral",
																		"src": "22434:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22404:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "22404:18:19"
																},
																"nativeSrc": "22404:97:19",
																"nodeType": "YulFunctionCall",
																"src": "22404:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22396:4:19",
																	"nodeType": "YulTypedName",
																	"src": "22396:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22510:51:19",
															"nodeType": "YulAssignment",
															"src": "22510:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22541:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "22541:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22552:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "22552:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22522:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "22522:18:19"
																},
																"nativeSrc": "22522:39:19",
																"nodeType": "YulFunctionCall",
																"src": "22522:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22510:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "22510:8:19"
																}
															]
														},
														{
															"nativeSrc": "22570:30:19",
															"nodeType": "YulAssignment",
															"src": "22570:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22583:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22583:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22594:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "22594:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22590:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22590:3:19"
																		},
																		"nativeSrc": "22590:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22590:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22579:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22579:3:19"
																},
																"nativeSrc": "22579:21:19",
																"nodeType": "YulFunctionCall",
																"src": "22579:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22570:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "22570:5:19"
																}
															]
														},
														{
															"nativeSrc": "22609:40:19",
															"nodeType": "YulAssignment",
															"src": "22609:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22622:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22622:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22633:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "22633:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22643:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "22643:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22629:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22629:3:19"
																		},
																		"nativeSrc": "22629:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22629:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22619:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "22619:2:19"
																},
																"nativeSrc": "22619:30:19",
																"nodeType": "YulFunctionCall",
																"src": "22619:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22609:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22609:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22262:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22299:5:19",
														"nodeType": "YulTypedName",
														"src": "22299:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22306:10:19",
														"nodeType": "YulTypedName",
														"src": "22306:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22318:8:19",
														"nodeType": "YulTypedName",
														"src": "22318:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22331:6:19",
														"nodeType": "YulTypedName",
														"src": "22331:6:19",
														"type": ""
													}
												],
												"src": "22262:393:19"
											},
											{
												"body": {
													"nativeSrc": "22693:28:19",
													"nodeType": "YulBlock",
													"src": "22693:28:19",
													"statements": [
														{
															"nativeSrc": "22703:12:19",
															"nodeType": "YulAssignment",
															"src": "22703:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "22710:5:19",
																"nodeType": "YulIdentifier",
																"src": "22710:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22703:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22703:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "22661:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22679:5:19",
														"nodeType": "YulTypedName",
														"src": "22679:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22689:3:19",
														"nodeType": "YulTypedName",
														"src": "22689:3:19",
														"type": ""
													}
												],
												"src": "22661:60:19"
											},
											{
												"body": {
													"nativeSrc": "22787:82:19",
													"nodeType": "YulBlock",
													"src": "22787:82:19",
													"statements": [
														{
															"nativeSrc": "22797:66:19",
															"nodeType": "YulAssignment",
															"src": "22797:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22855:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "22855:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22837:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "22837:17:19"
																				},
																				"nativeSrc": "22837:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22837:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22828:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "22828:8:19"
																		},
																		"nativeSrc": "22828:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22828:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22810:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "22810:17:19"
																},
																"nativeSrc": "22810:53:19",
																"nodeType": "YulFunctionCall",
																"src": "22810:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22797:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "22797:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22727:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22767:5:19",
														"nodeType": "YulTypedName",
														"src": "22767:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22777:9:19",
														"nodeType": "YulTypedName",
														"src": "22777:9:19",
														"type": ""
													}
												],
												"src": "22727:142:19"
											},
											{
												"body": {
													"nativeSrc": "22922:28:19",
													"nodeType": "YulBlock",
													"src": "22922:28:19",
													"statements": [
														{
															"nativeSrc": "22932:12:19",
															"nodeType": "YulAssignment",
															"src": "22932:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "22939:5:19",
																"nodeType": "YulIdentifier",
																"src": "22939:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22932:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22932:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22875:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22908:5:19",
														"nodeType": "YulTypedName",
														"src": "22908:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22918:3:19",
														"nodeType": "YulTypedName",
														"src": "22918:3:19",
														"type": ""
													}
												],
												"src": "22875:75:19"
											},
											{
												"body": {
													"nativeSrc": "23032:193:19",
													"nodeType": "YulBlock",
													"src": "23032:193:19",
													"statements": [
														{
															"nativeSrc": "23042:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23042:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23097:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "23097:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23066:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "23066:30:19"
																},
																"nativeSrc": "23066:39:19",
																"nodeType": "YulFunctionCall",
																"src": "23066:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23046:16:19",
																	"nodeType": "YulTypedName",
																	"src": "23046:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23121:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23121:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23161:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "23161:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23155:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23155:5:19"
																				},
																				"nativeSrc": "23155:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23155:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23168:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "23168:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23200:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "23200:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23176:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "23176:23:19"
																				},
																				"nativeSrc": "23176:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23176:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23127:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "23127:27:19"
																		},
																		"nativeSrc": "23127:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23127:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23114:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23114:6:19"
																},
																"nativeSrc": "23114:105:19",
																"nodeType": "YulFunctionCall",
																"src": "23114:105:19"
															},
															"nativeSrc": "23114:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "23114:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22956:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23009:4:19",
														"nodeType": "YulTypedName",
														"src": "23009:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23015:6:19",
														"nodeType": "YulTypedName",
														"src": "23015:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23023:7:19",
														"nodeType": "YulTypedName",
														"src": "23023:7:19",
														"type": ""
													}
												],
												"src": "22956:269:19"
											},
											{
												"body": {
													"nativeSrc": "23280:24:19",
													"nodeType": "YulBlock",
													"src": "23280:24:19",
													"statements": [
														{
															"nativeSrc": "23290:8:19",
															"nodeType": "YulAssignment",
															"src": "23290:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23297:1:19",
																"nodeType": "YulLiteral",
																"src": "23297:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23290:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23290:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23231:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23276:3:19",
														"nodeType": "YulTypedName",
														"src": "23276:3:19",
														"type": ""
													}
												],
												"src": "23231:73:19"
											},
											{
												"body": {
													"nativeSrc": "23363:136:19",
													"nodeType": "YulBlock",
													"src": "23363:136:19",
													"statements": [
														{
															"nativeSrc": "23373:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23373:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23387:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "23387:30:19"
																},
																"nativeSrc": "23387:32:19",
																"nodeType": "YulFunctionCall",
																"src": "23387:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23377:6:19",
																	"nodeType": "YulTypedName",
																	"src": "23377:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23472:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23472:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23478:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23486:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23486:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23428:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23428:43:19"
																},
																"nativeSrc": "23428:65:19",
																"nodeType": "YulFunctionCall",
																"src": "23428:65:19"
															},
															"nativeSrc": "23428:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "23428:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23310:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23349:4:19",
														"nodeType": "YulTypedName",
														"src": "23349:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23355:6:19",
														"nodeType": "YulTypedName",
														"src": "23355:6:19",
														"type": ""
													}
												],
												"src": "23310:189:19"
											},
											{
												"body": {
													"nativeSrc": "23555:136:19",
													"nodeType": "YulBlock",
													"src": "23555:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "23622:63:19",
																"nodeType": "YulBlock",
																"src": "23622:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23666:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23666:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23673:1:19",
																					"nodeType": "YulLiteral",
																					"src": "23673:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23636:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "23636:29:19"
																			},
																			"nativeSrc": "23636:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23636:39:19"
																		},
																		"nativeSrc": "23636:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "23636:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23575:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "23575:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23582:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23582:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23572:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23572:2:19"
																},
																"nativeSrc": "23572:14:19",
																"nodeType": "YulFunctionCall",
																"src": "23572:14:19"
															},
															"nativeSrc": "23565:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23587:26:19",
																"nodeType": "YulBlock",
																"src": "23587:26:19",
																"statements": [
																	{
																		"nativeSrc": "23589:22:19",
																		"nodeType": "YulAssignment",
																		"src": "23589:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23602:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23602:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23609:1:19",
																					"nodeType": "YulLiteral",
																					"src": "23609:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23598:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "23598:3:19"
																			},
																			"nativeSrc": "23598:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23598:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23589:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "23589:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23569:2:19",
																"nodeType": "YulBlock",
																"src": "23569:2:19",
																"statements": []
															},
															"src": "23565:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23505:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23543:5:19",
														"nodeType": "YulTypedName",
														"src": "23543:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23550:3:19",
														"nodeType": "YulTypedName",
														"src": "23550:3:19",
														"type": ""
													}
												],
												"src": "23505:186:19"
											},
											{
												"body": {
													"nativeSrc": "23776:464:19",
													"nodeType": "YulBlock",
													"src": "23776:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "23802:431:19",
																"nodeType": "YulBlock",
																"src": "23802:431:19",
																"statements": [
																	{
																		"nativeSrc": "23816:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23816:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23864:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23864:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23832:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "23832:31:19"
																			},
																			"nativeSrc": "23832:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23832:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23820:8:19",
																				"nodeType": "YulTypedName",
																				"src": "23820:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23883:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23883:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23906:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "23906:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23934:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "23934:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23916:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "23916:17:19"
																					},
																					"nativeSrc": "23916:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23916:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23902:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "23902:3:19"
																			},
																			"nativeSrc": "23902:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23902:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23887:11:19",
																				"nodeType": "YulTypedName",
																				"src": "23887:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24103:27:19",
																			"nodeType": "YulBlock",
																			"src": "24103:27:19",
																			"statements": [
																				{
																					"nativeSrc": "24105:23:19",
																					"nodeType": "YulAssignment",
																					"src": "24105:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24120:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "24120:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24105:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "24105:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24087:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "24087:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24099:2:19",
																					"nodeType": "YulLiteral",
																					"src": "24099:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24084:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "24084:2:19"
																			},
																			"nativeSrc": "24084:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24084:18:19"
																		},
																		"nativeSrc": "24081:49:19",
																		"nodeType": "YulIf",
																		"src": "24081:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24172:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "24172:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24189:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "24189:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24217:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24217:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24199:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "24199:17:19"
																							},
																							"nativeSrc": "24199:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24199:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24185:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "24185:3:19"
																					},
																					"nativeSrc": "24185:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24185:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24143:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "24143:28:19"
																			},
																			"nativeSrc": "24143:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24143:80:19"
																		},
																		"nativeSrc": "24143:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "24143:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23793:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23793:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23798:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23798:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23790:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23790:2:19"
																},
																"nativeSrc": "23790:11:19",
																"nodeType": "YulFunctionCall",
																"src": "23790:11:19"
															},
															"nativeSrc": "23787:446:19",
															"nodeType": "YulIf",
															"src": "23787:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23697:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23752:5:19",
														"nodeType": "YulTypedName",
														"src": "23752:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23759:3:19",
														"nodeType": "YulTypedName",
														"src": "23759:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23764:10:19",
														"nodeType": "YulTypedName",
														"src": "23764:10:19",
														"type": ""
													}
												],
												"src": "23697:543:19"
											},
											{
												"body": {
													"nativeSrc": "24309:54:19",
													"nodeType": "YulBlock",
													"src": "24309:54:19",
													"statements": [
														{
															"nativeSrc": "24319:37:19",
															"nodeType": "YulAssignment",
															"src": "24319:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24344:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24344:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24350:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24350:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24340:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24340:3:19"
																},
																"nativeSrc": "24340:16:19",
																"nodeType": "YulFunctionCall",
																"src": "24340:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24319:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "24319:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24246:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24284:4:19",
														"nodeType": "YulTypedName",
														"src": "24284:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24290:5:19",
														"nodeType": "YulTypedName",
														"src": "24290:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24300:8:19",
														"nodeType": "YulTypedName",
														"src": "24300:8:19",
														"type": ""
													}
												],
												"src": "24246:117:19"
											},
											{
												"body": {
													"nativeSrc": "24420:118:19",
													"nodeType": "YulBlock",
													"src": "24420:118:19",
													"statements": [
														{
															"nativeSrc": "24430:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24430:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24479:1:19",
																						"nodeType": "YulLiteral",
																						"src": "24479:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24482:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "24482:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24475:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "24475:3:19"
																				},
																				"nativeSrc": "24475:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "24475:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24494:1:19",
																						"nodeType": "YulLiteral",
																						"src": "24494:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24490:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "24490:3:19"
																				},
																				"nativeSrc": "24490:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "24490:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24446:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "24446:28:19"
																		},
																		"nativeSrc": "24446:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24446:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24442:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24442:3:19"
																},
																"nativeSrc": "24442:56:19",
																"nodeType": "YulFunctionCall",
																"src": "24442:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24434:4:19",
																	"nodeType": "YulTypedName",
																	"src": "24434:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24507:25:19",
															"nodeType": "YulAssignment",
															"src": "24507:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24521:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24521:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24527:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24527:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24517:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24517:3:19"
																},
																"nativeSrc": "24517:15:19",
																"nodeType": "YulFunctionCall",
																"src": "24517:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24507:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24369:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24397:4:19",
														"nodeType": "YulTypedName",
														"src": "24397:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24403:5:19",
														"nodeType": "YulTypedName",
														"src": "24403:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24413:6:19",
														"nodeType": "YulTypedName",
														"src": "24413:6:19",
														"type": ""
													}
												],
												"src": "24369:169:19"
											},
											{
												"body": {
													"nativeSrc": "24624:214:19",
													"nodeType": "YulBlock",
													"src": "24624:214:19",
													"statements": [
														{
															"nativeSrc": "24757:37:19",
															"nodeType": "YulAssignment",
															"src": "24757:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24784:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24784:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24790:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24790:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24765:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "24765:18:19"
																},
																"nativeSrc": "24765:29:19",
																"nodeType": "YulFunctionCall",
																"src": "24765:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24757:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24757:4:19"
																}
															]
														},
														{
															"nativeSrc": "24803:29:19",
															"nodeType": "YulAssignment",
															"src": "24803:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24814:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24814:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24824:1:19",
																				"nodeType": "YulLiteral",
																				"src": "24824:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24827:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "24827:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24820:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24820:3:19"
																		},
																		"nativeSrc": "24820:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24820:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24811:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24811:2:19"
																},
																"nativeSrc": "24811:21:19",
																"nodeType": "YulFunctionCall",
																"src": "24811:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24803:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24803:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24543:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24605:4:19",
														"nodeType": "YulTypedName",
														"src": "24605:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24611:3:19",
														"nodeType": "YulTypedName",
														"src": "24611:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24619:4:19",
														"nodeType": "YulTypedName",
														"src": "24619:4:19",
														"type": ""
													}
												],
												"src": "24543:295:19"
											},
											{
												"body": {
													"nativeSrc": "24935:1303:19",
													"nodeType": "YulBlock",
													"src": "24935:1303:19",
													"statements": [
														{
															"nativeSrc": "24946:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24946:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24993:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24993:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24960:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "24960:32:19"
																},
																"nativeSrc": "24960:37:19",
																"nodeType": "YulFunctionCall",
																"src": "24960:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24950:6:19",
																	"nodeType": "YulTypedName",
																	"src": "24950:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25082:22:19",
																"nodeType": "YulBlock",
																"src": "25082:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25084:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "25084:16:19"
																			},
																			"nativeSrc": "25084:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "25084:18:19"
																		},
																		"nativeSrc": "25084:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "25084:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25054:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25054:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25062:18:19",
																		"nodeType": "YulLiteral",
																		"src": "25062:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25051:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "25051:2:19"
																},
																"nativeSrc": "25051:30:19",
																"nodeType": "YulFunctionCall",
																"src": "25051:30:19"
															},
															"nativeSrc": "25048:56:19",
															"nodeType": "YulIf",
															"src": "25048:56:19"
														},
														{
															"nativeSrc": "25114:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "25114:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25160:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "25160:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25154:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "25154:5:19"
																		},
																		"nativeSrc": "25154:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25154:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25128:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "25128:25:19"
																},
																"nativeSrc": "25128:38:19",
																"nodeType": "YulFunctionCall",
																"src": "25128:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25118:6:19",
																	"nodeType": "YulTypedName",
																	"src": "25118:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25259:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25259:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25265:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25265:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25273:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25273:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25213:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "25213:45:19"
																},
																"nativeSrc": "25213:67:19",
																"nodeType": "YulFunctionCall",
																"src": "25213:67:19"
															},
															"nativeSrc": "25213:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "25213:67:19"
														},
														{
															"nativeSrc": "25290:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "25290:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "25307:1:19",
																"nodeType": "YulLiteral",
																"src": "25307:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25294:9:19",
																	"nodeType": "YulTypedName",
																	"src": "25294:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25318:17:19",
															"nodeType": "YulAssignment",
															"src": "25318:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "25331:4:19",
																"nodeType": "YulLiteral",
																"src": "25331:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25318:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "25318:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25382:611:19",
																		"nodeType": "YulBlock",
																		"src": "25382:611:19",
																		"statements": [
																			{
																				"nativeSrc": "25396:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25396:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25415:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "25415:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25427:4:19",
																									"nodeType": "YulLiteral",
																									"src": "25427:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25423:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "25423:3:19"
																							},
																							"nativeSrc": "25423:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "25423:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25411:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "25411:3:19"
																					},
																					"nativeSrc": "25411:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25411:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25400:7:19",
																						"nodeType": "YulTypedName",
																						"src": "25400:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25447:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25447:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25493:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "25493:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25461:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "25461:31:19"
																					},
																					"nativeSrc": "25461:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25461:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25451:6:19",
																						"nodeType": "YulTypedName",
																						"src": "25451:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25511:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25511:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25520:1:19",
																					"nodeType": "YulLiteral",
																					"src": "25520:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25515:1:19",
																						"nodeType": "YulTypedName",
																						"src": "25515:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25579:163:19",
																					"nodeType": "YulBlock",
																					"src": "25579:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25604:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "25604:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25622:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "25622:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25627:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "25627:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25618:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "25618:3:19"
																												},
																												"nativeSrc": "25618:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "25618:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25612:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "25612:5:19"
																										},
																										"nativeSrc": "25612:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25612:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25597:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "25597:6:19"
																								},
																								"nativeSrc": "25597:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25597:42:19"
																							},
																							"nativeSrc": "25597:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "25597:42:19"
																						},
																						{
																							"nativeSrc": "25656:24:19",
																							"nodeType": "YulAssignment",
																							"src": "25656:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25670:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "25670:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25678:1:19",
																										"nodeType": "YulLiteral",
																										"src": "25678:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25666:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "25666:3:19"
																								},
																								"nativeSrc": "25666:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25666:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25656:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "25656:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25697:31:19",
																							"nodeType": "YulAssignment",
																							"src": "25697:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25714:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "25714:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25725:2:19",
																										"nodeType": "YulLiteral",
																										"src": "25725:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25710:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "25710:3:19"
																								},
																								"nativeSrc": "25710:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25710:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25697:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "25697:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25545:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "25545:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25548:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "25548:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25542:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "25542:2:19"
																					},
																					"nativeSrc": "25542:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25542:14:19"
																				},
																				"nativeSrc": "25534:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25557:21:19",
																					"nodeType": "YulBlock",
																					"src": "25557:21:19",
																					"statements": [
																						{
																							"nativeSrc": "25559:17:19",
																							"nodeType": "YulAssignment",
																							"src": "25559:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25568:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "25568:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25571:4:19",
																										"nodeType": "YulLiteral",
																										"src": "25571:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25564:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "25564:3:19"
																								},
																								"nativeSrc": "25564:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25564:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25559:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "25559:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25538:3:19",
																					"nodeType": "YulBlock",
																					"src": "25538:3:19",
																					"statements": []
																				},
																				"src": "25534:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "25778:156:19",
																					"nodeType": "YulBlock",
																					"src": "25778:156:19",
																					"statements": [
																						{
																							"nativeSrc": "25796:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25796:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25823:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "25823:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25828:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "25828:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25819:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "25819:3:19"
																										},
																										"nativeSrc": "25819:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25819:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25813:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "25813:5:19"
																								},
																								"nativeSrc": "25813:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25813:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25800:9:19",
																									"nodeType": "YulTypedName",
																									"src": "25800:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25863:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "25863:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25890:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "25890:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25905:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "25905:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25913:4:19",
																														"nodeType": "YulLiteral",
																														"src": "25913:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25901:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "25901:3:19"
																												},
																												"nativeSrc": "25901:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "25901:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25871:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "25871:18:19"
																										},
																										"nativeSrc": "25871:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25871:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25856:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "25856:6:19"
																								},
																								"nativeSrc": "25856:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25856:64:19"
																							},
																							"nativeSrc": "25856:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "25856:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25761:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "25761:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25770:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "25770:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25758:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "25758:2:19"
																					},
																					"nativeSrc": "25758:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25758:19:19"
																				},
																				"nativeSrc": "25755:179:19",
																				"nodeType": "YulIf",
																				"src": "25755:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25954:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "25954:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25968:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "25968:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25976:1:19",
																											"nodeType": "YulLiteral",
																											"src": "25976:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25964:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "25964:3:19"
																									},
																									"nativeSrc": "25964:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "25964:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25980:1:19",
																									"nodeType": "YulLiteral",
																									"src": "25980:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25960:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "25960:3:19"
																							},
																							"nativeSrc": "25960:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "25960:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25947:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "25947:6:19"
																					},
																					"nativeSrc": "25947:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25947:36:19"
																				},
																				"nativeSrc": "25947:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "25947:36:19"
																			}
																		]
																	},
																	"nativeSrc": "25375:618:19",
																	"nodeType": "YulCase",
																	"src": "25375:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25380:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25380:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26010:222:19",
																		"nodeType": "YulBlock",
																		"src": "26010:222:19",
																		"statements": [
																			{
																				"nativeSrc": "26024:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26024:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26037:1:19",
																					"nodeType": "YulLiteral",
																					"src": "26037:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26028:5:19",
																						"nodeType": "YulTypedName",
																						"src": "26028:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26061:67:19",
																					"nodeType": "YulBlock",
																					"src": "26061:67:19",
																					"statements": [
																						{
																							"nativeSrc": "26079:35:19",
																							"nodeType": "YulAssignment",
																							"src": "26079:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26098:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "26098:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26103:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "26103:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26094:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "26094:3:19"
																										},
																										"nativeSrc": "26094:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "26094:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26088:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26088:5:19"
																								},
																								"nativeSrc": "26088:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26088:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26079:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26079:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26054:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "26054:6:19"
																				},
																				"nativeSrc": "26051:77:19",
																				"nodeType": "YulIf",
																				"src": "26051:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26148:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "26148:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26207:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26207:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26214:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "26214:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26154:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "26154:52:19"
																							},
																							"nativeSrc": "26154:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "26154:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26141:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "26141:6:19"
																					},
																					"nativeSrc": "26141:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "26141:81:19"
																				},
																				"nativeSrc": "26141:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "26141:81:19"
																			}
																		]
																	},
																	"nativeSrc": "26002:230:19",
																	"nodeType": "YulCase",
																	"src": "26002:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25355:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25355:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25363:2:19",
																		"nodeType": "YulLiteral",
																		"src": "25363:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25352:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "25352:2:19"
																},
																"nativeSrc": "25352:14:19",
																"nodeType": "YulFunctionCall",
																"src": "25352:14:19"
															},
															"nativeSrc": "25345:887:19",
															"nodeType": "YulSwitch",
															"src": "25345:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24843:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24924:4:19",
														"nodeType": "YulTypedName",
														"src": "24924:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24930:3:19",
														"nodeType": "YulTypedName",
														"src": "24930:3:19",
														"type": ""
													}
												],
												"src": "24843:1395:19"
											},
											{
												"body": {
													"nativeSrc": "26302:40:19",
													"nodeType": "YulBlock",
													"src": "26302:40:19",
													"statements": [
														{
															"nativeSrc": "26313:22:19",
															"nodeType": "YulAssignment",
															"src": "26313:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26329:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "26329:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26323:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "26323:5:19"
																},
																"nativeSrc": "26323:12:19",
																"nodeType": "YulFunctionCall",
																"src": "26323:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "26313:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26313:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "26244:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26285:5:19",
														"nodeType": "YulTypedName",
														"src": "26285:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "26295:6:19",
														"nodeType": "YulTypedName",
														"src": "26295:6:19",
														"type": ""
													}
												],
												"src": "26244:98:19"
											},
											{
												"body": {
													"nativeSrc": "26443:73:19",
													"nodeType": "YulBlock",
													"src": "26443:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26460:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26460:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26465:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26465:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26453:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26453:6:19"
																},
																"nativeSrc": "26453:19:19",
																"nodeType": "YulFunctionCall",
																"src": "26453:19:19"
															},
															"nativeSrc": "26453:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "26453:19:19"
														},
														{
															"nativeSrc": "26481:29:19",
															"nodeType": "YulAssignment",
															"src": "26481:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26500:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26500:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26505:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26505:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26496:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26496:3:19"
																},
																"nativeSrc": "26496:14:19",
																"nodeType": "YulFunctionCall",
																"src": "26496:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26481:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "26481:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26348:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26415:3:19",
														"nodeType": "YulTypedName",
														"src": "26415:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26420:6:19",
														"nodeType": "YulTypedName",
														"src": "26420:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26431:11:19",
														"nodeType": "YulTypedName",
														"src": "26431:11:19",
														"type": ""
													}
												],
												"src": "26348:168:19"
											},
											{
												"body": {
													"nativeSrc": "26612:283:19",
													"nodeType": "YulBlock",
													"src": "26612:283:19",
													"statements": [
														{
															"nativeSrc": "26622:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "26622:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26668:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "26668:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "26636:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "26636:31:19"
																},
																"nativeSrc": "26636:38:19",
																"nodeType": "YulFunctionCall",
																"src": "26636:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26626:6:19",
																	"nodeType": "YulTypedName",
																	"src": "26626:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26683:77:19",
															"nodeType": "YulAssignment",
															"src": "26683:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26748:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26748:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26753:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26753:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26690:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "26690:57:19"
																},
																"nativeSrc": "26690:70:19",
																"nodeType": "YulFunctionCall",
																"src": "26690:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26683:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26683:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26808:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "26808:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26815:4:19",
																				"nodeType": "YulLiteral",
																				"src": "26815:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26804:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "26804:3:19"
																		},
																		"nativeSrc": "26804:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26804:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26822:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26822:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26827:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26827:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26769:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "26769:34:19"
																},
																"nativeSrc": "26769:65:19",
																"nodeType": "YulFunctionCall",
																"src": "26769:65:19"
															},
															"nativeSrc": "26769:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "26769:65:19"
														},
														{
															"nativeSrc": "26843:46:19",
															"nodeType": "YulAssignment",
															"src": "26843:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26854:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26854:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "26881:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "26881:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "26859:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "26859:21:19"
																		},
																		"nativeSrc": "26859:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26859:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26850:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26850:3:19"
																},
																"nativeSrc": "26850:39:19",
																"nodeType": "YulFunctionCall",
																"src": "26850:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26843:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26843:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26522:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26593:5:19",
														"nodeType": "YulTypedName",
														"src": "26593:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26600:3:19",
														"nodeType": "YulTypedName",
														"src": "26600:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26608:3:19",
														"nodeType": "YulTypedName",
														"src": "26608:3:19",
														"type": ""
													}
												],
												"src": "26522:373:19"
											},
											{
												"body": {
													"nativeSrc": "27101:440:19",
													"nodeType": "YulBlock",
													"src": "27101:440:19",
													"statements": [
														{
															"nativeSrc": "27111:27:19",
															"nodeType": "YulAssignment",
															"src": "27111:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27123:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "27123:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27134:3:19",
																		"nodeType": "YulLiteral",
																		"src": "27134:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27119:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27119:3:19"
																},
																"nativeSrc": "27119:19:19",
																"nodeType": "YulFunctionCall",
																"src": "27119:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27111:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "27111:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27192:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27192:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27205:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27216:1:19",
																				"nodeType": "YulLiteral",
																				"src": "27216:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27201:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27201:3:19"
																		},
																		"nativeSrc": "27201:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27201:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27148:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27148:43:19"
																},
																"nativeSrc": "27148:71:19",
																"nodeType": "YulFunctionCall",
																"src": "27148:71:19"
															},
															"nativeSrc": "27148:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "27148:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27273:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27273:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27286:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27286:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27297:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27297:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27282:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27282:3:19"
																		},
																		"nativeSrc": "27282:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27282:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27229:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27229:43:19"
																},
																"nativeSrc": "27229:72:19",
																"nodeType": "YulFunctionCall",
																"src": "27229:72:19"
															},
															"nativeSrc": "27229:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "27229:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27355:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27355:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27368:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27368:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27379:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27379:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27364:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27364:3:19"
																		},
																		"nativeSrc": "27364:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27364:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27311:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27311:43:19"
																},
																"nativeSrc": "27311:72:19",
																"nodeType": "YulFunctionCall",
																"src": "27311:72:19"
															},
															"nativeSrc": "27311:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "27311:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27404:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27404:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27415:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27415:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27400:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27400:3:19"
																		},
																		"nativeSrc": "27400:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27400:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27424:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "27424:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27430:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27430:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27420:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27420:3:19"
																		},
																		"nativeSrc": "27420:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27420:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27393:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "27393:6:19"
																},
																"nativeSrc": "27393:48:19",
																"nodeType": "YulFunctionCall",
																"src": "27393:48:19"
															},
															"nativeSrc": "27393:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "27393:48:19"
														},
														{
															"nativeSrc": "27450:84:19",
															"nodeType": "YulAssignment",
															"src": "27450:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27520:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27520:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27529:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "27529:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27458:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "27458:61:19"
																},
																"nativeSrc": "27458:76:19",
																"nodeType": "YulFunctionCall",
																"src": "27458:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27450:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "27450:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "26901:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27049:9:19",
														"nodeType": "YulTypedName",
														"src": "27049:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27061:6:19",
														"nodeType": "YulTypedName",
														"src": "27061:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27069:6:19",
														"nodeType": "YulTypedName",
														"src": "27069:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27077:6:19",
														"nodeType": "YulTypedName",
														"src": "27077:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27085:6:19",
														"nodeType": "YulTypedName",
														"src": "27085:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27096:4:19",
														"nodeType": "YulTypedName",
														"src": "27096:4:19",
														"type": ""
													}
												],
												"src": "26901:640:19"
											},
											{
												"body": {
													"nativeSrc": "27609:79:19",
													"nodeType": "YulBlock",
													"src": "27609:79:19",
													"statements": [
														{
															"nativeSrc": "27619:22:19",
															"nodeType": "YulAssignment",
															"src": "27619:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27634:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27634:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27628:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "27628:5:19"
																},
																"nativeSrc": "27628:13:19",
																"nodeType": "YulFunctionCall",
																"src": "27628:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27619:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "27619:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27676:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "27676:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "27650:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "27650:25:19"
																},
																"nativeSrc": "27650:32:19",
																"nodeType": "YulFunctionCall",
																"src": "27650:32:19"
															},
															"nativeSrc": "27650:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "27650:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27547:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27587:6:19",
														"nodeType": "YulTypedName",
														"src": "27587:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27595:3:19",
														"nodeType": "YulTypedName",
														"src": "27595:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27603:5:19",
														"nodeType": "YulTypedName",
														"src": "27603:5:19",
														"type": ""
													}
												],
												"src": "27547:141:19"
											},
											{
												"body": {
													"nativeSrc": "27770:273:19",
													"nodeType": "YulBlock",
													"src": "27770:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "27816:83:19",
																"nodeType": "YulBlock",
																"src": "27816:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27818:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "27818:77:19"
																			},
																			"nativeSrc": "27818:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "27818:79:19"
																		},
																		"nativeSrc": "27818:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "27818:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27791:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "27791:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27800:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27800:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27787:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27787:3:19"
																		},
																		"nativeSrc": "27787:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27787:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27812:2:19",
																		"nodeType": "YulLiteral",
																		"src": "27812:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "27783:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27783:3:19"
																},
																"nativeSrc": "27783:32:19",
																"nodeType": "YulFunctionCall",
																"src": "27783:32:19"
															},
															"nativeSrc": "27780:119:19",
															"nodeType": "YulIf",
															"src": "27780:119:19"
														},
														{
															"nativeSrc": "27909:127:19",
															"nodeType": "YulBlock",
															"src": "27909:127:19",
															"statements": [
																{
																	"nativeSrc": "27924:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27924:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27938:1:19",
																		"nodeType": "YulLiteral",
																		"src": "27938:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27928:6:19",
																			"nodeType": "YulTypedName",
																			"src": "27928:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27953:73:19",
																	"nodeType": "YulAssignment",
																	"src": "27953:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27998:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "27998:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28009:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "28009:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27994:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "27994:3:19"
																				},
																				"nativeSrc": "27994:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "27994:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28018:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "28018:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "27963:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "27963:30:19"
																		},
																		"nativeSrc": "27963:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27963:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "27953:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "27953:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "27694:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27740:9:19",
														"nodeType": "YulTypedName",
														"src": "27740:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "27751:7:19",
														"nodeType": "YulTypedName",
														"src": "27751:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "27763:6:19",
														"nodeType": "YulTypedName",
														"src": "27763:6:19",
														"type": ""
													}
												],
												"src": "27694:349:19"
											},
											{
												"body": {
													"nativeSrc": "28163:34:19",
													"nodeType": "YulBlock",
													"src": "28163:34:19",
													"statements": [
														{
															"nativeSrc": "28173:18:19",
															"nodeType": "YulAssignment",
															"src": "28173:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "28188:3:19",
																"nodeType": "YulIdentifier",
																"src": "28188:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "28173:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "28173:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "28049:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28135:3:19",
														"nodeType": "YulTypedName",
														"src": "28135:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "28140:6:19",
														"nodeType": "YulTypedName",
														"src": "28140:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "28151:11:19",
														"nodeType": "YulTypedName",
														"src": "28151:11:19",
														"type": ""
													}
												],
												"src": "28049:148:19"
											},
											{
												"body": {
													"nativeSrc": "28313:280:19",
													"nodeType": "YulBlock",
													"src": "28313:280:19",
													"statements": [
														{
															"nativeSrc": "28323:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "28323:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28370:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "28370:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "28337:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "28337:32:19"
																},
																"nativeSrc": "28337:39:19",
																"nodeType": "YulFunctionCall",
																"src": "28337:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "28327:6:19",
																	"nodeType": "YulTypedName",
																	"src": "28327:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28385:96:19",
															"nodeType": "YulAssignment",
															"src": "28385:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28469:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "28469:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28474:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28474:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28392:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "28392:76:19"
																},
																"nativeSrc": "28392:89:19",
																"nodeType": "YulFunctionCall",
																"src": "28392:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28385:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28385:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28529:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "28529:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28536:4:19",
																				"nodeType": "YulLiteral",
																				"src": "28536:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28525:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "28525:3:19"
																		},
																		"nativeSrc": "28525:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "28525:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28543:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "28543:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28548:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28548:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "28490:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "28490:34:19"
																},
																"nativeSrc": "28490:65:19",
																"nodeType": "YulFunctionCall",
																"src": "28490:65:19"
															},
															"nativeSrc": "28490:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "28490:65:19"
														},
														{
															"nativeSrc": "28564:23:19",
															"nodeType": "YulAssignment",
															"src": "28564:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28575:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "28575:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28580:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28580:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28571:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28571:3:19"
																},
																"nativeSrc": "28571:16:19",
																"nodeType": "YulFunctionCall",
																"src": "28571:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28564:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28564:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "28203:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28294:5:19",
														"nodeType": "YulTypedName",
														"src": "28294:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "28301:3:19",
														"nodeType": "YulTypedName",
														"src": "28301:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28309:3:19",
														"nodeType": "YulTypedName",
														"src": "28309:3:19",
														"type": ""
													}
												],
												"src": "28203:390:19"
											},
											{
												"body": {
													"nativeSrc": "28783:251:19",
													"nodeType": "YulBlock",
													"src": "28783:251:19",
													"statements": [
														{
															"nativeSrc": "28794:102:19",
															"nodeType": "YulAssignment",
															"src": "28794:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28883:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28883:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28892:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "28892:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28801:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "28801:81:19"
																},
																"nativeSrc": "28801:95:19",
																"nodeType": "YulFunctionCall",
																"src": "28801:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28794:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28794:3:19"
																}
															]
														},
														{
															"nativeSrc": "28906:102:19",
															"nodeType": "YulAssignment",
															"src": "28906:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28995:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28995:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29004:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "29004:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28913:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "28913:81:19"
																},
																"nativeSrc": "28913:95:19",
																"nodeType": "YulFunctionCall",
																"src": "28913:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28906:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28906:3:19"
																}
															]
														},
														{
															"nativeSrc": "29018:10:19",
															"nodeType": "YulAssignment",
															"src": "29018:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "29025:3:19",
																"nodeType": "YulIdentifier",
																"src": "29025:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29018:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "29018:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "28599:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28754:3:19",
														"nodeType": "YulTypedName",
														"src": "28754:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28760:6:19",
														"nodeType": "YulTypedName",
														"src": "28760:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28768:6:19",
														"nodeType": "YulTypedName",
														"src": "28768:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28779:3:19",
														"nodeType": "YulTypedName",
														"src": "28779:3:19",
														"type": ""
													}
												],
												"src": "28599:435:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Array length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function leftAlign_t_bytes4(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes4(cleanup_t_bytes4(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes4__to_t_uint256_t_uint256_t_bytes4__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 4)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063a22cb4651161007a578063a22cb46514610385578063b88d4fde146103a1578063c87b56dd146103bd578063cef6d368146103ed578063e985e9c51461041e578063f2fde38b1461044e5761014b565b8063715018a6146102d55780637aae3ccb146102df5780638a71bb2d1461030f5780638da5cb5b1461032d57806395d89b411461034b5780639caea80a146103695761014b565b80632923ce11116101135780632923ce111461020557806342842e0e1461022157806342966c681461023d5780635146ea0e146102595780636352211e1461027557806370a08231146102a55761014b565b806301ffc9a71461014f57806306fdde031461017f578063081812fc1461019d578063095ea7b3146101cd57806323b872dd146101e9575b5f80fd5b61016960048036038101906101649190611d23565b61046a565b6040516101769190611d68565b60405180910390f35b61018761047b565b6040516101949190611df1565b60405180910390f35b6101b760048036038101906101b29190611e44565b61050a565b6040516101c49190611eae565b60405180910390f35b6101e760048036038101906101e29190611ef1565b610525565b005b61020360048036038101906101fe9190611f2f565b61053b565b005b61021f600480360381019061021a91906120ab565b61063a565b005b61023b60048036038101906102369190611f2f565b61066a565b005b61025760048036038101906102529190611e44565b610689565b005b610273600480360381019061026e919061212b565b61069f565b005b61028f600480360381019061028a9190611e44565b6106d2565b60405161029c9190611eae565b60405180910390f35b6102bf60048036038101906102ba9190612169565b6106e3565b6040516102cc91906121a3565b60405180910390f35b6102dd610799565b005b6102f960048036038101906102f49190611e44565b6107ac565b60405161030691906121a3565b60405180910390f35b6103176107c1565b60405161032491906121a3565b60405180910390f35b6103356107c7565b6040516103429190611eae565b60405180910390f35b6103536107ef565b6040516103609190611df1565b60405180910390f35b610383600480360381019061037e919061235e565b61087f565b005b61039f600480360381019061039a9190612410565b61094b565b005b6103bb60048036038101906103b691906124ec565b610961565b005b6103d760048036038101906103d29190611e44565b61097e565b6040516103e49190611df1565b60405180910390f35b61040760048036038101906104029190611e44565b610990565b60405161041592919061256c565b60405180910390f35b61043860048036038101906104339190612593565b6109be565b6040516104459190611d68565b60405180910390f35b61046860048036038101906104639190612169565b610a4c565b005b5f61047482610ad0565b9050919050565b60605f8054610489906125fe565b80601f01602080910402602001604051908101604052809291908181526020018280546104b5906125fe565b80156105005780601f106104d757610100808354040283529160200191610500565b820191905f5260205f20905b8154815290600101906020018083116104e357829003601f168201915b5050505050905090565b5f61051482610b30565b5061051e82610bb6565b9050919050565b6105378282610532610bef565b610bf6565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611eae565b60405180910390fd5b5f6105be83836105b9610bef565b610c08565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610634578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062b9392919061262e565b60405180910390fd5b50505050565b610642610e13565b5f61064d8383610e9a565b90506106598582610ef3565b6106638185610f10565b5050505050565b61068483838360405180602001604052805f815250610961565b505050565b61069b5f82610696610bef565b610c08565b5050565b6106a7610e13565b8060095f8481526020019081526020015f205f8282546106c79190612690565b925050819055505050565b5f6106dc82610b30565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610754575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161074b9190611eae565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107a1610e13565b6107aa5f610f6a565b565b6009602052805f5260405f205f915090505481565b60085481565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107fe906125fe565b80601f016020809104026020016040519081016040528092919081815260200182805461082a906125fe565b80156108755780601f1061084c57610100808354040283529160200191610875565b820191905f5260205f20905b81548152906001019060200180831161085857829003601f168201915b5050505050905090565b610887610e13565b80518251146108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c29061270d565b60405180910390fd5b5f5b8251811015610945576108fa848483815181106108ed576108ec61272b565b5b6020026020010151610ef3565b6109388382815181106109105761090f61272b565b5b602002602001015183838151811061092b5761092a61272b565b5b6020026020010151610f10565b80806001019150506108cd565b50505050565b61095d610956610bef565b838361102d565b5050565b61096c84848461053b565b61097884848484611196565b50505050565b606061098982611348565b9050919050565b5f8061099a6107c7565b612710600854856109ab9190612758565b6109b591906127c6565b91509150915091565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610a54610e13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610abb9190611eae565b60405180910390fd5b610acd81610f6a565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b295750610b2882611453565b5b9050919050565b5f80610b3b83611534565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bad57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ba491906121a3565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610c03838383600161156d565b505050565b5f80610c1384611534565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c5457610c5381848661172c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cdf57610c935f855f8061156d565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d5e57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610e1b610bef565b73ffffffffffffffffffffffffffffffffffffffff16610e396107c7565b73ffffffffffffffffffffffffffffffffffffffff1614610e9857610e5c610bef565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e8f9190611eae565b60405180910390fd5b565b5f82825f357fffffffff0000000000000000000000000000000000000000000000000000000016604051602001610ed393929190612836565b604051602081830303815290604052805190602001205f1c905092915050565b610f0c828260405180602001604052805f8152506117ef565b5050565b8060065f8481526020019081526020015f209081610f2e9190612a0f565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f5e91906121a3565b60405180910390a15050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361109d57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110949190611eae565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111899190611d68565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611342578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d9610bef565b8685856040518563ffffffff1660e01b81526004016111fb9493929190612b30565b6020604051808303815f875af192505050801561123657506040513d601f19601f820116820180604052508101906112339190612b8e565b60015b6112b7573d805f8114611264576040519150601f19603f3d011682016040523d82523d5f602084013e611269565b606091505b505f8151036112af57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112a69190611eae565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461134057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113379190611eae565b60405180910390fd5b505b50505050565b606061135382610b30565b505f60065f8481526020019081526020015f208054611371906125fe565b80601f016020809104026020016040519081016040528092919081815260200182805461139d906125fe565b80156113e85780601f106113bf576101008083540402835291602001916113e8565b820191905f5260205f20905b8154815290600101906020018083116113cb57829003601f168201915b505050505090505f6113f861180a565b90505f81510361140c57819250505061144e565b5f82511115611440578082604051602001611428929190612bf3565b6040516020818303038152906040529250505061144e565b61144984611820565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061151d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061152d575061152c82611886565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115a557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116d7575f6115b484610b30565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561161e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611631575061162f81846109be565b155b1561167357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161166a9190611eae565b60405180910390fd5b81156116d557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117378383836118ef565b6117ea575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ab57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117a291906121a3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117e192919061256c565b60405180910390fd5b505050565b6117f983836119af565b6118055f848484611196565b505050565b606060405180602001604052805f815250905090565b606061182b82610b30565b505f61183561180a565b90505f8151116118535760405180602001604052805f81525061187e565b8061185d84611aa2565b60405160200161186e929190612bf3565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119a657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611967575061196684846109be565b5b806119a557508273ffffffffffffffffffffffffffffffffffffffff1661198d83610bb6565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a1f575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a169190611eae565b60405180910390fd5b5f611a2b83835f610c08565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a9d575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a949190611eae565b60405180910390fd5b505050565b60605f6001611ab084611b6c565b0190505f8167ffffffffffffffff811115611ace57611acd611f87565b5b6040519080825280601f01601f191660200182016040528015611b005781602001600182028036833780820191505090505b5090505f82602001820190505b600115611b61578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611b5657611b55612799565b5b0494505f8503611b0d575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bc8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611bbe57611bbd612799565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c05576d04ee2d6d415b85acef81000000008381611bfb57611bfa612799565b5b0492506020810190505b662386f26fc100008310611c3457662386f26fc100008381611c2a57611c29612799565b5b0492506010810190505b6305f5e1008310611c5d576305f5e1008381611c5357611c52612799565b5b0492506008810190505b6127108310611c82576127108381611c7857611c77612799565b5b0492506004810190505b60648310611ca55760648381611c9b57611c9a612799565b5b0492506002810190505b600a8310611cb4576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d0281611cce565b8114611d0c575f80fd5b50565b5f81359050611d1d81611cf9565b92915050565b5f60208284031215611d3857611d37611cc6565b5b5f611d4584828501611d0f565b91505092915050565b5f8115159050919050565b611d6281611d4e565b82525050565b5f602082019050611d7b5f830184611d59565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611dc382611d81565b611dcd8185611d8b565b9350611ddd818560208601611d9b565b611de681611da9565b840191505092915050565b5f6020820190508181035f830152611e098184611db9565b905092915050565b5f819050919050565b611e2381611e11565b8114611e2d575f80fd5b50565b5f81359050611e3e81611e1a565b92915050565b5f60208284031215611e5957611e58611cc6565b5b5f611e6684828501611e30565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e9882611e6f565b9050919050565b611ea881611e8e565b82525050565b5f602082019050611ec15f830184611e9f565b92915050565b611ed081611e8e565b8114611eda575f80fd5b50565b5f81359050611eeb81611ec7565b92915050565b5f8060408385031215611f0757611f06611cc6565b5b5f611f1485828601611edd565b9250506020611f2585828601611e30565b9150509250929050565b5f805f60608486031215611f4657611f45611cc6565b5b5f611f5386828701611edd565b9350506020611f6486828701611edd565b9250506040611f7586828701611e30565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fbd82611da9565b810181811067ffffffffffffffff82111715611fdc57611fdb611f87565b5b80604052505050565b5f611fee611cbd565b9050611ffa8282611fb4565b919050565b5f67ffffffffffffffff82111561201957612018611f87565b5b61202282611da9565b9050602081019050919050565b828183375f83830152505050565b5f61204f61204a84611fff565b611fe5565b90508281526020810184848401111561206b5761206a611f83565b5b61207684828561202f565b509392505050565b5f82601f83011261209257612091611f7f565b5b81356120a284826020860161203d565b91505092915050565b5f805f80608085870312156120c3576120c2611cc6565b5b5f6120d087828801611edd565b945050602085013567ffffffffffffffff8111156120f1576120f0611cca565b5b6120fd8782880161207e565b935050604061210e87828801611e30565b925050606061211f87828801611e30565b91505092959194509250565b5f806040838503121561214157612140611cc6565b5b5f61214e85828601611e30565b925050602061215f85828601611e30565b9150509250929050565b5f6020828403121561217e5761217d611cc6565b5b5f61218b84828501611edd565b91505092915050565b61219d81611e11565b82525050565b5f6020820190506121b65f830184612194565b92915050565b5f67ffffffffffffffff8211156121d6576121d5611f87565b5b602082029050602081019050919050565b5f80fd5b5f6121fd6121f8846121bc565b611fe5565b905080838252602082019050602084028301858111156122205761221f6121e7565b5b835b8181101561224957806122358882611e30565b845260208401935050602081019050612222565b5050509392505050565b5f82601f83011261226757612266611f7f565b5b81356122778482602086016121eb565b91505092915050565b5f67ffffffffffffffff82111561229a57612299611f87565b5b602082029050602081019050919050565b5f6122bd6122b884612280565b611fe5565b905080838252602082019050602084028301858111156122e0576122df6121e7565b5b835b8181101561232757803567ffffffffffffffff81111561230557612304611f7f565b5b808601612312898261207e565b855260208501945050506020810190506122e2565b5050509392505050565b5f82601f83011261234557612344611f7f565b5b81356123558482602086016122ab565b91505092915050565b5f805f6060848603121561237557612374611cc6565b5b5f61238286828701611edd565b935050602084013567ffffffffffffffff8111156123a3576123a2611cca565b5b6123af86828701612253565b925050604084013567ffffffffffffffff8111156123d0576123cf611cca565b5b6123dc86828701612331565b9150509250925092565b6123ef81611d4e565b81146123f9575f80fd5b50565b5f8135905061240a816123e6565b92915050565b5f806040838503121561242657612425611cc6565b5b5f61243385828601611edd565b9250506020612444858286016123fc565b9150509250929050565b5f67ffffffffffffffff82111561246857612467611f87565b5b61247182611da9565b9050602081019050919050565b5f61249061248b8461244e565b611fe5565b9050828152602081018484840111156124ac576124ab611f83565b5b6124b784828561202f565b509392505050565b5f82601f8301126124d3576124d2611f7f565b5b81356124e384826020860161247e565b91505092915050565b5f805f806080858703121561250457612503611cc6565b5b5f61251187828801611edd565b945050602061252287828801611edd565b935050604061253387828801611e30565b925050606085013567ffffffffffffffff81111561255457612553611cca565b5b612560878288016124bf565b91505092959194509250565b5f60408201905061257f5f830185611e9f565b61258c6020830184612194565b9392505050565b5f80604083850312156125a9576125a8611cc6565b5b5f6125b685828601611edd565b92505060206125c785828601611edd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061261557607f821691505b602082108103612628576126276125d1565b5b50919050565b5f6060820190506126415f830186611e9f565b61264e6020830185612194565b61265b6040830184611e9f565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61269a82611e11565b91506126a583611e11565b92508282019050808211156126bd576126bc612663565b5b92915050565b7f4172726179206c656e677468206d69736d6174636800000000000000000000005f82015250565b5f6126f7601583611d8b565b9150612702826126c3565b602082019050919050565b5f6020820190508181035f830152612724816126eb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61276282611e11565b915061276d83611e11565b925082820261277b81611e11565b9150828204841483151761279257612791612663565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6127d082611e11565b91506127db83611e11565b9250826127eb576127ea612799565b5b828204905092915050565b5f819050919050565b61281061280b82611e11565b6127f6565b82525050565b5f819050919050565b61283061282b82611cce565b612816565b82525050565b5f61284182866127ff565b60208201915061285182856127ff565b602082019150612861828461281f565b600482019150819050949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612893565b6128d88683612893565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61291361290e61290984611e11565b6128f0565b611e11565b9050919050565b5f819050919050565b61292c836128f9565b6129406129388261291a565b84845461289f565b825550505050565b5f90565b612954612948565b61295f818484612923565b505050565b5b81811015612982576129775f8261294c565b600181019050612965565b5050565b601f8211156129c75761299881612872565b6129a184612884565b810160208510156129b0578190505b6129c46129bc85612884565b830182612964565b50505b505050565b5f82821c905092915050565b5f6129e75f19846008026129cc565b1980831691505092915050565b5f6129ff83836129d8565b9150826002028217905092915050565b612a1882611d81565b67ffffffffffffffff811115612a3157612a30611f87565b5b612a3b82546125fe565b612a46828285612986565b5f60209050601f831160018114612a77575f8415612a65578287015190505b612a6f85826129f4565b865550612ad6565b601f198416612a8586612872565b5f5b82811015612aac57848901518255600182019150602085019450602081019050612a87565b86831015612ac95784890151612ac5601f8916826129d8565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612b0282612ade565b612b0c8185612ae8565b9350612b1c818560208601611d9b565b612b2581611da9565b840191505092915050565b5f608082019050612b435f830187611e9f565b612b506020830186611e9f565b612b5d6040830185612194565b8181036060830152612b6f8184612af8565b905095945050505050565b5f81519050612b8881611cf9565b92915050565b5f60208284031215612ba357612ba2611cc6565b5b5f612bb084828501612b7a565b91505092915050565b5f81905092915050565b5f612bcd82611d81565b612bd78185612bb9565b9350612be7818560208601611d9b565b80840191505092915050565b5f612bfe8285612bc3565b9150612c0a8284612bc3565b9150819050939250505056fea2646970667358221220d9c44b52f69ad304f672aa4c55274c8ad2ddd52401c23cab1b65cebfa94efe6564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xCEF6D368 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44E JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x7AAE3CCB EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x9CAEA80A EQ PUSH2 0x369 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x2923CE11 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x2923CE11 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5146EA0E EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x24EC JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP3 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x474 DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x500 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x500 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x514 DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5BE DUP4 DUP4 PUSH2 0x5B9 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x634 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x642 PUSH2 0xE13 JUMP JUMPDEST PUSH0 PUSH2 0x64D DUP4 DUP4 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH2 0x659 DUP6 DUP3 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x663 DUP2 DUP6 PUSH2 0xF10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x961 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x69B PUSH0 DUP3 PUSH2 0x696 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xE13 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x2690 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x754 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x7AA PUSH0 PUSH2 0xF6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7FE SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x875 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x875 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x858 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH2 0xE13 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x945 JUMPI PUSH2 0x8FA DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8ED JUMPI PUSH2 0x8EC PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x910 JUMPI PUSH2 0x90F PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x272B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xF10 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8CD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x95D PUSH2 0x956 PUSH2 0xBEF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x96C DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x978 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1196 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x989 DUP3 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99A PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x27C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0xE13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xF6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB29 JUMPI POP PUSH2 0xB28 DUP3 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB3B DUP4 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x156D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC13 DUP5 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC54 JUMPI PUSH2 0xC53 DUP2 DUP5 DUP7 PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDF JUMPI PUSH2 0xC93 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE1B PUSH2 0xBEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE39 PUSH2 0x7C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE98 JUMPI PUSH2 0xE5C PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8F SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x17EF JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1094 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1342 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D9 PUSH2 0xBEF JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1236 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1264 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12AF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1340 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1353 DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1371 SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139D SWAP1 PUSH2 0x25FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x13F8 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x140C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x144E JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1440 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1428 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0x1449 DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x151D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x152D JUMPI POP PUSH2 0x152C DUP3 PUSH2 0x1886 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x15A5 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16D7 JUMPI PUSH0 PUSH2 0x15B4 DUP5 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x161E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1631 JUMPI POP PUSH2 0x162F DUP2 DUP5 PUSH2 0x9BE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1673 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16D5 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1737 DUP4 DUP4 DUP4 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x17EA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP3 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17F9 DUP4 DUP4 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x1805 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1196 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x182B DUP3 PUSH2 0xB30 JUMP JUMPDEST POP PUSH0 PUSH2 0x1835 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x187E JUMP JUMPDEST DUP1 PUSH2 0x185D DUP5 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x186E SWAP3 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19A6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1967 JUMPI POP PUSH2 0x1966 DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19A5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x198D DUP4 PUSH2 0xBB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A2B DUP4 DUP4 PUSH0 PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1AB0 DUP5 PUSH2 0x1B6C JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B00 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B61 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1B0D JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1BC8 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C05 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1BFB JUMPI PUSH2 0x1BFA PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C34 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C5D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C82 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C78 JUMPI PUSH2 0x1C77 PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CA5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C9B JUMPI PUSH2 0x1C9A PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1CB4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D02 DUP2 PUSH2 0x1CCE JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1D DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D45 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC3 DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x1DCD DUP2 DUP6 PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DDD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E09 DUP2 DUP5 PUSH2 0x1DB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3E DUP2 PUSH2 0x1E1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E66 DUP5 DUP3 DUP6 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E98 DUP3 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA8 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED0 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EEB DUP2 PUSH2 0x1EC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F07 JUMPI PUSH2 0x1F06 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F14 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F25 DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F53 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F64 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F75 DUP7 DUP3 DUP8 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FBD DUP3 PUSH2 0x1DA9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEE PUSH2 0x1CBD JUMP JUMPDEST SWAP1 POP PUSH2 0x1FFA DUP3 DUP3 PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2022 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x204F PUSH2 0x204A DUP5 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x2076 DUP5 DUP3 DUP6 PUSH2 0x202F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x203D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D0 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F0 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x207E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x210E DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x211F DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x214E DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x215F DUP6 DUP3 DUP7 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH2 0x217D PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x218B DUP5 DUP3 DUP6 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D6 JUMPI PUSH2 0x21D5 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x21FD PUSH2 0x21F8 DUP5 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2249 JUMPI DUP1 PUSH2 0x2235 DUP9 DUP3 PUSH2 0x1E30 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2222 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2267 JUMPI PUSH2 0x2266 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2277 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x229A JUMPI PUSH2 0x2299 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22BD PUSH2 0x22B8 DUP5 PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22E0 JUMPI PUSH2 0x22DF PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2327 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2312 DUP10 DUP3 PUSH2 0x207E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2355 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2374 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2382 DUP7 DUP3 DUP8 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x23AF DUP7 DUP3 DUP8 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x23DC DUP7 DUP3 DUP8 ADD PUSH2 0x2331 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x23EF DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x23F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x240A DUP2 PUSH2 0x23E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2426 JUMPI PUSH2 0x2425 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2433 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2444 DUP6 DUP3 DUP7 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2471 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2490 PUSH2 0x248B DUP5 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x24AB PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x24B7 DUP5 DUP3 DUP6 PUSH2 0x202F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24D3 JUMPI PUSH2 0x24D2 PUSH2 0x1F7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x247E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2504 JUMPI PUSH2 0x2503 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2511 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2522 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2533 DUP8 DUP3 DUP9 ADD PUSH2 0x1E30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x2560 DUP8 DUP3 DUP9 ADD PUSH2 0x24BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x257F PUSH0 DUP4 ADD DUP6 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x258C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A9 JUMPI PUSH2 0x25A8 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2615 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2628 JUMPI PUSH2 0x2627 PUSH2 0x25D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2641 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x264E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x265B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x269A DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A5 DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26BD JUMPI PUSH2 0x26BC PUSH2 0x2663 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172726179206C656E677468206D69736D617463680000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH1 0x15 DUP4 PUSH2 0x1D8B JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP3 PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2724 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2762 DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x276D DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x277B DUP2 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2792 JUMPI PUSH2 0x2791 PUSH2 0x2663 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x27D0 DUP3 PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP PUSH2 0x27DB DUP4 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x2799 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2810 PUSH2 0x280B DUP3 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x27F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2830 PUSH2 0x282B DUP3 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2841 DUP3 DUP7 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2851 DUP3 DUP6 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2861 DUP3 DUP5 PUSH2 0x281F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x28CE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2893 JUMP JUMPDEST PUSH2 0x28D8 DUP7 DUP4 PUSH2 0x2893 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH2 0x290E PUSH2 0x2909 DUP5 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x1E11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292C DUP4 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x2940 PUSH2 0x2938 DUP3 PUSH2 0x291A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x289F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2954 PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x295F DUP2 DUP5 DUP5 PUSH2 0x2923 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2982 JUMPI PUSH2 0x2977 PUSH0 DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2965 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2998 DUP2 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x29A1 DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x29B0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x29C4 PUSH2 0x29BC DUP6 PUSH2 0x2884 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2964 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29CC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29FF DUP4 DUP4 PUSH2 0x29D8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A18 DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A31 JUMPI PUSH2 0x2A30 PUSH2 0x1F87 JUMP JUMPDEST JUMPDEST PUSH2 0x2A3B DUP3 SLOAD PUSH2 0x25FE JUMP JUMPDEST PUSH2 0x2A46 DUP3 DUP3 DUP6 PUSH2 0x2986 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A77 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A65 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A6F DUP6 DUP3 PUSH2 0x29F4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A85 DUP7 PUSH2 0x2872 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2AAC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A87 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2AC9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2AC5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x29D8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B02 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2B0C DUP2 DUP6 PUSH2 0x2AE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x2B25 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B43 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x2B50 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x2B5D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2194 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B6F DUP2 DUP5 PUSH2 0x2AF8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B88 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BB0 DUP5 DUP3 DUP6 ADD PUSH2 0x2B7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BCD DUP3 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x2BD7 DUP2 DUP6 PUSH2 0x2BB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFE DUP3 DUP6 PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 DUP5 PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xC4 0x4B MSTORE 0xF6 SWAP11 0xD3 DIV 0xF6 PUSH19 0xAA4C55274C8AD2DDD52401C23CAB1B65CEBFA9 0x4E INVALID PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "414:2185:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;691:250:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:314:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1626:100:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;552:42:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1901:332:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1014:153:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1438:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3928:153:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1173:169:18;1276:4;1299:36;1323:11;1299:23;:36::i;:::-;1292:43;;1173:169;;;:::o;2365:89:6:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;691:250:18:-;1531:13:0;:11;:13::i;:::-;808:15:18::1;826:40;842:10;854:11;826:15;:40::i;:::-;808:58;;876:22;886:2;890:7;876:9;:22::i;:::-;908:26;921:7;930:3;908:12;:26::i;:::-;798:143;691:250:::0;;;;:::o;4787:132:6:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;561:314:9:-;826:42;842:1;846:7;855:12;:10;:12::i;:::-;826:7;:42::i;:::-;;561:314;:::o;1626:100:18:-;1531:13:0;:11;:13::i;:::-;1717:2:18::1;1697:7;:16;1705:7;1697:16;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1626:100:::0;;:::o;2185:118:6:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;552:42:18:-;;;;;;;;;;;;;;;;;:::o;491:38::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:6:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;1901:332:18:-;1531:13:0;:11;:13::i;:::-;2035:4:18::1;:11;2016:8;:15;:30;2008:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2087:9;2082:145;2106:8;:15;2102:1;:19;2082:145;;;2142:26;2152:2;2156:8;2165:1;2156:11;;;;;;;;:::i;:::-;;;;;;;;2142:9;:26::i;:::-;2182:34;2195:8;2204:1;2195:11;;;;;;;;:::i;:::-;;;;;;;;2208:4;2213:1;2208:7;;;;;;;;:::i;:::-;;;;;;;;2182:12;:34::i;:::-;2123:3;;;;;;;2082:145;;;;1901:332:::0;;;:::o;3718:144:6:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1014:153:18:-;1105:13;1137:23;1152:7;1137:14;:23::i;:::-;1130:30;;1014:153;;;:::o;1438:178::-;1501:16;1519:21;1560:7;:5;:7::i;:::-;1603:5;1582:17;;1570:9;:29;;;;:::i;:::-;1569:39;;;;:::i;:::-;1552:57;;;;1438:178;;;:::o;3928:153:6:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;937:207:10:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:6:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;14418:120:6:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2405:192:18:-;2494:7;2555:10;2567:11;2580:7;;;;2538:50;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2528:61;;;;;;2520:70;;2513:77;;2405:192;;;;:::o;10633:100:6:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:10:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:6:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1210:593:10:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;1561:300:6:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:14:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;6376:272:6:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;637:698:13:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;12214:916:16:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:945::-;7617:6;7625;7633;7641;7690:3;7678:9;7669:7;7665:23;7661:33;7658:120;;;7697:79;;:::i;:::-;7658:120;7817:1;7842:53;7887:7;7878:6;7867:9;7863:22;7842:53;:::i;:::-;7832:63;;7788:117;7972:2;7961:9;7957:18;7944:32;8003:18;7995:6;7992:30;7989:117;;;8025:79;;:::i;:::-;7989:117;8130:63;8185:7;8176:6;8165:9;8161:22;8130:63;:::i;:::-;8120:73;;7915:288;8242:2;8268:53;8313:7;8304:6;8293:9;8289:22;8268:53;:::i;:::-;8258:63;;8213:118;8370:2;8396:53;8441:7;8432:6;8421:9;8417:22;8396:53;:::i;:::-;8386:63;;8341:118;7521:945;;;;;;;:::o;8472:474::-;8540:6;8548;8597:2;8585:9;8576:7;8572:23;8568:32;8565:119;;;8603:79;;:::i;:::-;8565:119;8723:1;8748:53;8793:7;8784:6;8773:9;8769:22;8748:53;:::i;:::-;8738:63;;8694:117;8850:2;8876:53;8921:7;8912:6;8901:9;8897:22;8876:53;:::i;:::-;8866:63;;8821:118;8472:474;;;;;:::o;8952:329::-;9011:6;9060:2;9048:9;9039:7;9035:23;9031:32;9028:119;;;9066:79;;:::i;:::-;9028:119;9186:1;9211:53;9256:7;9247:6;9236:9;9232:22;9211:53;:::i;:::-;9201:63;;9157:117;8952:329;;;;:::o;9287:118::-;9374:24;9392:5;9374:24;:::i;:::-;9369:3;9362:37;9287:118;;:::o;9411:222::-;9504:4;9542:2;9531:9;9527:18;9519:26;;9555:71;9623:1;9612:9;9608:17;9599:6;9555:71;:::i;:::-;9411:222;;;;:::o;9639:311::-;9716:4;9806:18;9798:6;9795:30;9792:56;;;9828:18;;:::i;:::-;9792:56;9878:4;9870:6;9866:17;9858:25;;9938:4;9932;9928:15;9920:23;;9639:311;;;:::o;9956:117::-;10065:1;10062;10055:12;10096:710;10192:5;10217:81;10233:64;10290:6;10233:64;:::i;:::-;10217:81;:::i;:::-;10208:90;;10318:5;10347:6;10340:5;10333:21;10381:4;10374:5;10370:16;10363:23;;10434:4;10426:6;10422:17;10414:6;10410:30;10463:3;10455:6;10452:15;10449:122;;;10482:79;;:::i;:::-;10449:122;10597:6;10580:220;10614:6;10609:3;10606:15;10580:220;;;10689:3;10718:37;10751:3;10739:10;10718:37;:::i;:::-;10713:3;10706:50;10785:4;10780:3;10776:14;10769:21;;10656:144;10640:4;10635:3;10631:14;10624:21;;10580:220;;;10584:21;10198:608;;10096:710;;;;;:::o;10829:370::-;10900:5;10949:3;10942:4;10934:6;10930:17;10926:27;10916:122;;10957:79;;:::i;:::-;10916:122;11074:6;11061:20;11099:94;11189:3;11181:6;11174:4;11166:6;11162:17;11099:94;:::i;:::-;11090:103;;10906:293;10829:370;;;;:::o;11205:321::-;11292:4;11382:18;11374:6;11371:30;11368:56;;;11404:18;;:::i;:::-;11368:56;11454:4;11446:6;11442:17;11434:25;;11514:4;11508;11504:15;11496:23;;11205:321;;;:::o;11548:945::-;11654:5;11679:91;11695:74;11762:6;11695:74;:::i;:::-;11679:91;:::i;:::-;11670:100;;11790:5;11819:6;11812:5;11805:21;11853:4;11846:5;11842:16;11835:23;;11906:4;11898:6;11894:17;11886:6;11882:30;11935:3;11927:6;11924:15;11921:122;;;11954:79;;:::i;:::-;11921:122;12069:6;12052:435;12086:6;12081:3;12078:15;12052:435;;;12175:3;12162:17;12211:18;12198:11;12195:35;12192:122;;;12233:79;;:::i;:::-;12192:122;12357:11;12349:6;12345:24;12395:47;12438:3;12426:10;12395:47;:::i;:::-;12390:3;12383:60;12472:4;12467:3;12463:14;12456:21;;12128:359;;12112:4;12107:3;12103:14;12096:21;;12052:435;;;12056:21;11660:833;;11548:945;;;;;:::o;12515:390::-;12596:5;12645:3;12638:4;12630:6;12626:17;12622:27;12612:122;;12653:79;;:::i;:::-;12612:122;12770:6;12757:20;12795:104;12895:3;12887:6;12880:4;12872:6;12868:17;12795:104;:::i;:::-;12786:113;;12602:303;12515:390;;;;:::o;12911:1059::-;13048:6;13056;13064;13113:2;13101:9;13092:7;13088:23;13084:32;13081:119;;;13119:79;;:::i;:::-;13081:119;13239:1;13264:53;13309:7;13300:6;13289:9;13285:22;13264:53;:::i;:::-;13254:63;;13210:117;13394:2;13383:9;13379:18;13366:32;13425:18;13417:6;13414:30;13411:117;;;13447:79;;:::i;:::-;13411:117;13552:78;13622:7;13613:6;13602:9;13598:22;13552:78;:::i;:::-;13542:88;;13337:303;13707:2;13696:9;13692:18;13679:32;13738:18;13730:6;13727:30;13724:117;;;13760:79;;:::i;:::-;13724:117;13865:88;13945:7;13936:6;13925:9;13921:22;13865:88;:::i;:::-;13855:98;;13650:313;12911:1059;;;;;:::o;13976:116::-;14046:21;14061:5;14046:21;:::i;:::-;14039:5;14036:32;14026:60;;14082:1;14079;14072:12;14026:60;13976:116;:::o;14098:133::-;14141:5;14179:6;14166:20;14157:29;;14195:30;14219:5;14195:30;:::i;:::-;14098:133;;;;:::o;14237:468::-;14302:6;14310;14359:2;14347:9;14338:7;14334:23;14330:32;14327:119;;;14365:79;;:::i;:::-;14327:119;14485:1;14510:53;14555:7;14546:6;14535:9;14531:22;14510:53;:::i;:::-;14500:63;;14456:117;14612:2;14638:50;14680:7;14671:6;14660:9;14656:22;14638:50;:::i;:::-;14628:60;;14583:115;14237:468;;;;;:::o;14711:307::-;14772:4;14862:18;14854:6;14851:30;14848:56;;;14884:18;;:::i;:::-;14848:56;14922:29;14944:6;14922:29;:::i;:::-;14914:37;;15006:4;15000;14996:15;14988:23;;14711:307;;;:::o;15024:423::-;15101:5;15126:65;15142:48;15183:6;15142:48;:::i;:::-;15126:65;:::i;:::-;15117:74;;15214:6;15207:5;15200:21;15252:4;15245:5;15241:16;15290:3;15281:6;15276:3;15272:16;15269:25;15266:112;;;15297:79;;:::i;:::-;15266:112;15387:54;15434:6;15429:3;15424;15387:54;:::i;:::-;15107:340;15024:423;;;;;:::o;15466:338::-;15521:5;15570:3;15563:4;15555:6;15551:17;15547:27;15537:122;;15578:79;;:::i;:::-;15537:122;15695:6;15682:20;15720:78;15794:3;15786:6;15779:4;15771:6;15767:17;15720:78;:::i;:::-;15711:87;;15527:277;15466:338;;;;:::o;15810:943::-;15905:6;15913;15921;15929;15978:3;15966:9;15957:7;15953:23;15949:33;15946:120;;;15985:79;;:::i;:::-;15946:120;16105:1;16130:53;16175:7;16166:6;16155:9;16151:22;16130:53;:::i;:::-;16120:63;;16076:117;16232:2;16258:53;16303:7;16294:6;16283:9;16279:22;16258:53;:::i;:::-;16248:63;;16203:118;16360:2;16386:53;16431:7;16422:6;16411:9;16407:22;16386:53;:::i;:::-;16376:63;;16331:118;16516:2;16505:9;16501:18;16488:32;16547:18;16539:6;16536:30;16533:117;;;16569:79;;:::i;:::-;16533:117;16674:62;16728:7;16719:6;16708:9;16704:22;16674:62;:::i;:::-;16664:72;;16459:287;15810:943;;;;;;;:::o;16759:332::-;16880:4;16918:2;16907:9;16903:18;16895:26;;16931:71;16999:1;16988:9;16984:17;16975:6;16931:71;:::i;:::-;17012:72;17080:2;17069:9;17065:18;17056:6;17012:72;:::i;:::-;16759:332;;;;;:::o;17097:474::-;17165:6;17173;17222:2;17210:9;17201:7;17197:23;17193:32;17190:119;;;17228:79;;:::i;:::-;17190:119;17348:1;17373:53;17418:7;17409:6;17398:9;17394:22;17373:53;:::i;:::-;17363:63;;17319:117;17475:2;17501:53;17546:7;17537:6;17526:9;17522:22;17501:53;:::i;:::-;17491:63;;17446:118;17097:474;;;;;:::o;17577:180::-;17625:77;17622:1;17615:88;17722:4;17719:1;17712:15;17746:4;17743:1;17736:15;17763:320;17807:6;17844:1;17838:4;17834:12;17824:22;;17891:1;17885:4;17881:12;17912:18;17902:81;;17968:4;17960:6;17956:17;17946:27;;17902:81;18030:2;18022:6;18019:14;17999:18;17996:38;17993:84;;18049:18;;:::i;:::-;17993:84;17814:269;17763:320;;;:::o;18089:442::-;18238:4;18276:2;18265:9;18261:18;18253:26;;18289:71;18357:1;18346:9;18342:17;18333:6;18289:71;:::i;:::-;18370:72;18438:2;18427:9;18423:18;18414:6;18370:72;:::i;:::-;18452;18520:2;18509:9;18505:18;18496:6;18452:72;:::i;:::-;18089:442;;;;;;:::o;18537:180::-;18585:77;18582:1;18575:88;18682:4;18679:1;18672:15;18706:4;18703:1;18696:15;18723:191;18763:3;18782:20;18800:1;18782:20;:::i;:::-;18777:25;;18816:20;18834:1;18816:20;:::i;:::-;18811:25;;18859:1;18856;18852:9;18845:16;;18880:3;18877:1;18874:10;18871:36;;;18887:18;;:::i;:::-;18871:36;18723:191;;;;:::o;18920:171::-;19060:23;19056:1;19048:6;19044:14;19037:47;18920:171;:::o;19097:366::-;19239:3;19260:67;19324:2;19319:3;19260:67;:::i;:::-;19253:74;;19336:93;19425:3;19336:93;:::i;:::-;19454:2;19449:3;19445:12;19438:19;;19097:366;;;:::o;19469:419::-;19635:4;19673:2;19662:9;19658:18;19650:26;;19722:9;19716:4;19712:20;19708:1;19697:9;19693:17;19686:47;19750:131;19876:4;19750:131;:::i;:::-;19742:139;;19469:419;;;:::o;19894:180::-;19942:77;19939:1;19932:88;20039:4;20036:1;20029:15;20063:4;20060:1;20053:15;20080:410;20120:7;20143:20;20161:1;20143:20;:::i;:::-;20138:25;;20177:20;20195:1;20177:20;:::i;:::-;20172:25;;20232:1;20229;20225:9;20254:30;20272:11;20254:30;:::i;:::-;20243:41;;20433:1;20424:7;20420:15;20417:1;20414:22;20394:1;20387:9;20367:83;20344:139;;20463:18;;:::i;:::-;20344:139;20128:362;20080:410;;;;:::o;20496:180::-;20544:77;20541:1;20534:88;20641:4;20638:1;20631:15;20665:4;20662:1;20655:15;20682:185;20722:1;20739:20;20757:1;20739:20;:::i;:::-;20734:25;;20773:20;20791:1;20773:20;:::i;:::-;20768:25;;20812:1;20802:35;;20817:18;;:::i;:::-;20802:35;20859:1;20856;20852:9;20847:14;;20682:185;;;;:::o;20873:79::-;20912:7;20941:5;20930:16;;20873:79;;;:::o;20958:157::-;21063:45;21083:24;21101:5;21083:24;:::i;:::-;21063:45;:::i;:::-;21058:3;21051:58;20958:157;;:::o;21121:78::-;21159:7;21188:5;21177:16;;21121:78;;;:::o;21205:153::-;21308:43;21327:23;21344:5;21327:23;:::i;:::-;21308:43;:::i;:::-;21303:3;21296:56;21205:153;;:::o;21364:533::-;21530:3;21545:75;21616:3;21607:6;21545:75;:::i;:::-;21645:2;21640:3;21636:12;21629:19;;21658:75;21729:3;21720:6;21658:75;:::i;:::-;21758:2;21753:3;21749:12;21742:19;;21771:73;21840:3;21831:6;21771:73;:::i;:::-;21869:1;21864:3;21860:11;21853:18;;21888:3;21881:10;;21364:533;;;;;;:::o;21903:141::-;21952:4;21975:3;21967:11;;21998:3;21995:1;21988:14;22032:4;22029:1;22019:18;22011:26;;21903:141;;;:::o;22050:93::-;22087:6;22134:2;22129;22122:5;22118:14;22114:23;22104:33;;22050:93;;;:::o;22149:107::-;22193:8;22243:5;22237:4;22233:16;22212:37;;22149:107;;;;:::o;22262:393::-;22331:6;22381:1;22369:10;22365:18;22404:97;22434:66;22423:9;22404:97;:::i;:::-;22522:39;22552:8;22541:9;22522:39;:::i;:::-;22510:51;;22594:4;22590:9;22583:5;22579:21;22570:30;;22643:4;22633:8;22629:19;22622:5;22619:30;22609:40;;22338:317;;22262:393;;;;;:::o;22661:60::-;22689:3;22710:5;22703:12;;22661:60;;;:::o;22727:142::-;22777:9;22810:53;22828:34;22837:24;22855:5;22837:24;:::i;:::-;22828:34;:::i;:::-;22810:53;:::i;:::-;22797:66;;22727:142;;;:::o;22875:75::-;22918:3;22939:5;22932:12;;22875:75;;;:::o;22956:269::-;23066:39;23097:7;23066:39;:::i;:::-;23127:91;23176:41;23200:16;23176:41;:::i;:::-;23168:6;23161:4;23155:11;23127:91;:::i;:::-;23121:4;23114:105;23032:193;22956:269;;;:::o;23231:73::-;23276:3;23231:73;:::o;23310:189::-;23387:32;;:::i;:::-;23428:65;23486:6;23478;23472:4;23428:65;:::i;:::-;23363:136;23310:189;;:::o;23505:186::-;23565:120;23582:3;23575:5;23572:14;23565:120;;;23636:39;23673:1;23666:5;23636:39;:::i;:::-;23609:1;23602:5;23598:13;23589:22;;23565:120;;;23505:186;;:::o;23697:543::-;23798:2;23793:3;23790:11;23787:446;;;23832:38;23864:5;23832:38;:::i;:::-;23916:29;23934:10;23916:29;:::i;:::-;23906:8;23902:44;24099:2;24087:10;24084:18;24081:49;;;24120:8;24105:23;;24081:49;24143:80;24199:22;24217:3;24199:22;:::i;:::-;24189:8;24185:37;24172:11;24143:80;:::i;:::-;23802:431;;23787:446;23697:543;;;:::o;24246:117::-;24300:8;24350:5;24344:4;24340:16;24319:37;;24246:117;;;;:::o;24369:169::-;24413:6;24446:51;24494:1;24490:6;24482:5;24479:1;24475:13;24446:51;:::i;:::-;24442:56;24527:4;24521;24517:15;24507:25;;24420:118;24369:169;;;;:::o;24543:295::-;24619:4;24765:29;24790:3;24784:4;24765:29;:::i;:::-;24757:37;;24827:3;24824:1;24820:11;24814:4;24811:21;24803:29;;24543:295;;;;:::o;24843:1395::-;24960:37;24993:3;24960:37;:::i;:::-;25062:18;25054:6;25051:30;25048:56;;;25084:18;;:::i;:::-;25048:56;25128:38;25160:4;25154:11;25128:38;:::i;:::-;25213:67;25273:6;25265;25259:4;25213:67;:::i;:::-;25307:1;25331:4;25318:17;;25363:2;25355:6;25352:14;25380:1;25375:618;;;;26037:1;26054:6;26051:77;;;26103:9;26098:3;26094:19;26088:26;26079:35;;26051:77;26154:67;26214:6;26207:5;26154:67;:::i;:::-;26148:4;26141:81;26010:222;25345:887;;25375:618;25427:4;25423:9;25415:6;25411:22;25461:37;25493:4;25461:37;:::i;:::-;25520:1;25534:208;25548:7;25545:1;25542:14;25534:208;;;25627:9;25622:3;25618:19;25612:26;25604:6;25597:42;25678:1;25670:6;25666:14;25656:24;;25725:2;25714:9;25710:18;25697:31;;25571:4;25568:1;25564:12;25559:17;;25534:208;;;25770:6;25761:7;25758:19;25755:179;;;25828:9;25823:3;25819:19;25813:26;25871:48;25913:4;25905:6;25901:17;25890:9;25871:48;:::i;:::-;25863:6;25856:64;25778:156;25755:179;25980:1;25976;25968:6;25964:14;25960:22;25954:4;25947:36;25382:611;;;25345:887;;24935:1303;;;24843:1395;;:::o;26244:98::-;26295:6;26329:5;26323:12;26313:22;;26244:98;;;:::o;26348:168::-;26431:11;26465:6;26460:3;26453:19;26505:4;26500:3;26496:14;26481:29;;26348:168;;;;:::o;26522:373::-;26608:3;26636:38;26668:5;26636:38;:::i;:::-;26690:70;26753:6;26748:3;26690:70;:::i;:::-;26683:77;;26769:65;26827:6;26822:3;26815:4;26808:5;26804:16;26769:65;:::i;:::-;26859:29;26881:6;26859:29;:::i;:::-;26854:3;26850:39;26843:46;;26612:283;26522:373;;;;:::o;26901:640::-;27096:4;27134:3;27123:9;27119:19;27111:27;;27148:71;27216:1;27205:9;27201:17;27192:6;27148:71;:::i;:::-;27229:72;27297:2;27286:9;27282:18;27273:6;27229:72;:::i;:::-;27311;27379:2;27368:9;27364:18;27355:6;27311:72;:::i;:::-;27430:9;27424:4;27420:20;27415:2;27404:9;27400:18;27393:48;27458:76;27529:4;27520:6;27458:76;:::i;:::-;27450:84;;26901:640;;;;;;;:::o;27547:141::-;27603:5;27634:6;27628:13;27619:22;;27650:32;27676:5;27650:32;:::i;:::-;27547:141;;;;:::o;27694:349::-;27763:6;27812:2;27800:9;27791:7;27787:23;27783:32;27780:119;;;27818:79;;:::i;:::-;27780:119;27938:1;27963:63;28018:7;28009:6;27998:9;27994:22;27963:63;:::i;:::-;27953:73;;27909:127;27694:349;;;;:::o;28049:148::-;28151:11;28188:3;28173:18;;28049:148;;;;:::o;28203:390::-;28309:3;28337:39;28370:5;28337:39;:::i;:::-;28392:89;28474:6;28469:3;28392:89;:::i;:::-;28385:96;;28490:65;28548:6;28543:3;28536:4;28529:5;28525:16;28490:65;:::i;:::-;28580:6;28575:3;28571:16;28564:23;;28313:280;28203:390;;;;:::o;28599:435::-;28779:3;28801:95;28892:3;28883:6;28801:95;:::i;:::-;28794:102;;28913:95;29004:3;28995:6;28913:95;:::i;:::-;28906:102;;29025:3;29018:10;;28599:435;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2268000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addXP(uint256,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"batchMint(address,uint256[],string[])": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"royaltyInfo(uint256)": "infinite",
								"royaltyPercentage()": "2492",
								"safeMint(address,string,uint256,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"tokenXP(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"generateTokenId(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 526,
									"end": 529,
									"name": "PUSH",
									"source": 18,
									"value": "1F4"
								},
								{
									"begin": 491,
									"end": 529,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 491,
									"end": 529,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 601,
									"end": 685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 601,
									"end": 685,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 685,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 669,
									"end": 681,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "46616E63794E4654000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "464E540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 685,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 19,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 19,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 19,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 19,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 19,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 19,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 2599,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9c44b52f69ad304f672aa4c55274c8ad2ddd52401c23cab1b65cebfa94efe6564736f6c634300081a0033",
									".code": [
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "CEF6D368"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "7AAE3CCB"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "8A71BB2D"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "9CAEA80A"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "2923CE11"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "2923CE11"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "42966C68"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "5146EA0E"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 414,
											"end": 2599,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1173,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1173,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1173,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 691,
											"end": 941,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 691,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 691,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1626,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1626,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 491,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 491,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "tag",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 1901,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "tag",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 1901,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 1014,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 1014,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1014,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 1438,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 1438,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 1438,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1299,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 1299,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1299,
											"end": 1335,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 1299,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1335,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1335,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 691,
											"end": 941,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 691,
											"end": 941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 842,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 854,
											"end": 865,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 826,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 826,
											"end": 866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 826,
											"end": 866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 826,
											"end": 866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 808,
											"end": 866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 808,
											"end": 866,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 876,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 886,
											"end": 888,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 876,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 876,
											"end": 898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 876,
											"end": 898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 876,
											"end": 898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 908,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 921,
											"end": 928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 930,
											"end": 933,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 908,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 908,
											"end": 934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 908,
											"end": 934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 908,
											"end": 934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 798,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 691,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 855,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 855,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 855,
											"end": 867,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 855,
											"end": 867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 826,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 826,
											"end": 868,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 826,
											"end": 868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 1697,
											"end": 1719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1697,
											"end": 1719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 491,
											"end": 529,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 491,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2035,
											"end": 2046,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2046,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2008,
											"end": 2072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2008,
											"end": 2072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2087,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2106,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2106,
											"end": 2121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2121,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 2152,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2165,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 2156,
											"end": 2167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 2142,
											"end": 2168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 2142,
											"end": 2168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2195,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2204,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 2195,
											"end": 2206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2206,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2212,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2213,
											"end": 2214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 2208,
											"end": 2215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 2182,
											"end": 2216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2182,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2082,
											"end": 2227,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 2233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1105,
											"end": 1118,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 1152,
											"end": 1159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1137,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 1137,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "tag",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1014,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1501,
											"end": 1517,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 1560,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "tag",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "PUSH",
											"source": 18,
											"value": "2710"
										},
										{
											"begin": 1582,
											"end": 1599,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1582,
											"end": 1599,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 1570,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "tag",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 1570,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "221"
										},
										{
											"begin": 1569,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "tag",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 1569,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1609,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1609,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2565,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 2538,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "tag",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2520,
											"end": 2590,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2590,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 2513,
											"end": 2590,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2513,
											"end": 2590,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 6,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7617,
											"end": 7623,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7690,
											"end": 7693,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7678,
											"end": 7687,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7669,
											"end": 7676,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7661,
											"end": 7694,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7658,
											"end": 7778,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7658,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 7658,
											"end": 7778,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 7697,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 7697,
											"end": 7776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7776,
											"name": "tag",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 7697,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7658,
											"end": 7778,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 7658,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 7863,
											"end": 7885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7842,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 7842,
											"end": 7895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7842,
											"end": 7895,
											"name": "tag",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 7842,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7832,
											"end": 7895,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 7832,
											"end": 7895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7788,
											"end": 7905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7972,
											"end": 7974,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7944,
											"end": 7976,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7995,
											"end": 8001,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7992,
											"end": 8022,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8106,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 7989,
											"end": 8106,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 8025,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 8025,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8104,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 8025,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8106,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 7989,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 8185,
											"end": 8192,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 8161,
											"end": 8183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 8130,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8193,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 8130,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8120,
											"end": 8193,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8120,
											"end": 8193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7915,
											"end": 8203,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8242,
											"end": 8244,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8268,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 8313,
											"end": 8320,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 8289,
											"end": 8311,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 8268,
											"end": 8321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8321,
											"name": "tag",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 8268,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8258,
											"end": 8321,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8258,
											"end": 8321,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8213,
											"end": 8331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8370,
											"end": 8372,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8396,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 8441,
											"end": 8448,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8421,
											"end": 8430,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 8396,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8449,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 8396,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8449,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8341,
											"end": 8459,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "tag",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8554,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8597,
											"end": 8599,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8572,
											"end": 8595,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8568,
											"end": 8600,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 8603,
											"end": 8682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 8793,
											"end": 8800,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8784,
											"end": 8790,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8769,
											"end": 8791,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8748,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 8748,
											"end": 8801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8748,
											"end": 8801,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 8748,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8738,
											"end": 8801,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8738,
											"end": 8801,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8694,
											"end": 8811,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8850,
											"end": 8852,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8876,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 8921,
											"end": 8928,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8901,
											"end": 8910,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8897,
											"end": 8919,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 8876,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8929,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 8876,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8866,
											"end": 8929,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8866,
											"end": 8929,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8821,
											"end": 8939,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "tag",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9011,
											"end": 9017,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9060,
											"end": 9062,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9039,
											"end": 9046,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9035,
											"end": 9058,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9028,
											"end": 9147,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9028,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 9028,
											"end": 9147,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9066,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 9066,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 9066,
											"end": 9145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9066,
											"end": 9145,
											"name": "tag",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 9066,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9028,
											"end": 9147,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 9028,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9186,
											"end": 9187,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 9256,
											"end": 9263,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9236,
											"end": 9245,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9232,
											"end": 9254,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 9211,
											"end": 9264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9201,
											"end": 9264,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9201,
											"end": 9264,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9157,
											"end": 9274,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9287,
											"end": 9405,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 9287,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9374,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 9392,
											"end": 9397,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9374,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 9374,
											"end": 9398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9374,
											"end": 9398,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 9374,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9369,
											"end": 9372,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9399,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9287,
											"end": 9405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9287,
											"end": 9405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9287,
											"end": 9405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "tag",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9519,
											"end": 9545,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9519,
											"end": 9545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 9623,
											"end": 9624,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9625,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 9555,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9950,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 9639,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9716,
											"end": 9720,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9798,
											"end": 9804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9795,
											"end": 9825,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9792,
											"end": 9848,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9792,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 9792,
											"end": 9848,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9828,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 9828,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 9828,
											"end": 9846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9828,
											"end": 9846,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 9828,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9792,
											"end": 9848,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 9792,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9878,
											"end": 9882,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9870,
											"end": 9876,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9866,
											"end": 9883,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9938,
											"end": 9942,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9932,
											"end": 9936,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9928,
											"end": 9943,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9920,
											"end": 9943,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9920,
											"end": 9943,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9950,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9950,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9950,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9956,
											"end": 10073,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 9956,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10065,
											"end": 10066,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10055,
											"end": 10067,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10192,
											"end": 10197,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 10233,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 10290,
											"end": 10296,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 10233,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10297,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 10233,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10217,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 10217,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10217,
											"end": 10298,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 10217,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10208,
											"end": 10298,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10208,
											"end": 10298,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10318,
											"end": 10323,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10353,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10381,
											"end": 10385,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10374,
											"end": 10379,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10370,
											"end": 10386,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 10432,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10422,
											"end": 10439,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10410,
											"end": 10440,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10463,
											"end": 10466,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10452,
											"end": 10467,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10449,
											"end": 10571,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10449,
											"end": 10571,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 10449,
											"end": 10571,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 10482,
											"end": 10561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "tag",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10449,
											"end": 10571,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 10449,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10597,
											"end": 10603,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "tag",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10614,
											"end": 10620,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10609,
											"end": 10612,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10689,
											"end": 10692,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 10718,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10755,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 10718,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10713,
											"end": 10716,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10706,
											"end": 10756,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10785,
											"end": 10789,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10780,
											"end": 10783,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10776,
											"end": 10790,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10769,
											"end": 10790,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10769,
											"end": 10790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10656,
											"end": 10800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10638,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10631,
											"end": 10645,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "tag",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 10580,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10584,
											"end": 10605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10900,
											"end": 10905,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10952,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10942,
											"end": 10946,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 10934,
											"end": 10940,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10930,
											"end": 10947,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10926,
											"end": 10953,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 10916,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 10916,
											"end": 11038,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10957,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 10957,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 10957,
											"end": 11036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10957,
											"end": 11036,
											"name": "tag",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 10957,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10916,
											"end": 11038,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 10916,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11061,
											"end": 11081,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11099,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 11189,
											"end": 11192,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11181,
											"end": 11187,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11162,
											"end": 11179,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11099,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 11099,
											"end": 11193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11099,
											"end": 11193,
											"name": "tag",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 11099,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11193,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10906,
											"end": 11199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 11199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11205,
											"end": 11526,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 11205,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11292,
											"end": 11296,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11374,
											"end": 11380,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11371,
											"end": 11401,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11368,
											"end": 11424,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11368,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 11368,
											"end": 11424,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 11404,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "tag",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11368,
											"end": 11424,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 11368,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11454,
											"end": 11458,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11446,
											"end": 11452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 11434,
											"end": 11459,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11434,
											"end": 11459,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11514,
											"end": 11518,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11508,
											"end": 11512,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11504,
											"end": 11519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11496,
											"end": 11519,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11496,
											"end": 11519,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11205,
											"end": 11526,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11205,
											"end": 11526,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11205,
											"end": 11526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11205,
											"end": 11526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11654,
											"end": 11659,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11679,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 11762,
											"end": 11768,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 11695,
											"end": 11769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "tag",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11679,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 11679,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11679,
											"end": 11770,
											"name": "tag",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 11679,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11670,
											"end": 11770,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11670,
											"end": 11770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11819,
											"end": 11825,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11812,
											"end": 11817,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11805,
											"end": 11826,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11851,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11842,
											"end": 11858,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11835,
											"end": 11858,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11835,
											"end": 11858,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11906,
											"end": 11910,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11898,
											"end": 11904,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11894,
											"end": 11911,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 11886,
											"end": 11892,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11882,
											"end": 11912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11935,
											"end": 11938,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11927,
											"end": 11933,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11924,
											"end": 11939,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11921,
											"end": 12043,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11921,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 11921,
											"end": 12043,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 11954,
											"end": 12033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11921,
											"end": 12043,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 11921,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12075,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "tag",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12086,
											"end": 12092,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12084,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12078,
											"end": 12093,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12175,
											"end": 12178,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12162,
											"end": 12179,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12211,
											"end": 12229,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12209,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12195,
											"end": 12230,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 12192,
											"end": 12314,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12192,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 12192,
											"end": 12314,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 12233,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "tag",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12192,
											"end": 12314,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 12192,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12357,
											"end": 12368,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12349,
											"end": 12355,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12345,
											"end": 12369,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12395,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 12438,
											"end": 12441,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 12426,
											"end": 12436,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12395,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 12395,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12395,
											"end": 12442,
											"name": "tag",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 12395,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12390,
											"end": 12393,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12383,
											"end": 12443,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12472,
											"end": 12476,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12463,
											"end": 12477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12456,
											"end": 12477,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12456,
											"end": 12477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12128,
											"end": 12487,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12128,
											"end": 12487,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12112,
											"end": 12116,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12110,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12103,
											"end": 12117,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 12052,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12056,
											"end": 12077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11660,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11660,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11548,
											"end": 12493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12596,
											"end": 12601,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12648,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12638,
											"end": 12642,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12626,
											"end": 12643,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12622,
											"end": 12649,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12612,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 12612,
											"end": 12734,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12653,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 12653,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 12653,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12653,
											"end": 12732,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 12653,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12612,
											"end": 12734,
											"name": "tag",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 12612,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12757,
											"end": 12777,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12795,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12887,
											"end": 12893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12880,
											"end": 12884,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12878,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12795,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 12795,
											"end": 12899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12795,
											"end": 12899,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 12795,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12602,
											"end": 12905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12515,
											"end": 12905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13064,
											"end": 13070,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13101,
											"end": 13110,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13092,
											"end": 13099,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13088,
											"end": 13111,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13084,
											"end": 13116,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 13081,
											"end": 13200,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13081,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 13081,
											"end": 13200,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13119,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 13119,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 13119,
											"end": 13198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13119,
											"end": 13198,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 13119,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13081,
											"end": 13200,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 13081,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13239,
											"end": 13240,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13264,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 13309,
											"end": 13316,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13300,
											"end": 13306,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13289,
											"end": 13298,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13285,
											"end": 13307,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13264,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 13264,
											"end": 13317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13264,
											"end": 13317,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 13264,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13254,
											"end": 13317,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13254,
											"end": 13317,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13210,
											"end": 13327,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13394,
											"end": 13396,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13383,
											"end": 13392,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 13425,
											"end": 13443,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13417,
											"end": 13423,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13414,
											"end": 13444,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13447,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 13447,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 13447,
											"end": 13526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13447,
											"end": 13526,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 13447,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13552,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 13622,
											"end": 13629,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13602,
											"end": 13611,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13598,
											"end": 13620,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13552,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 13552,
											"end": 13630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13552,
											"end": 13630,
											"name": "tag",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 13552,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13337,
											"end": 13640,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13707,
											"end": 13709,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13679,
											"end": 13711,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 13738,
											"end": 13756,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13730,
											"end": 13736,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13727,
											"end": 13757,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 13724,
											"end": 13841,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13724,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 13724,
											"end": 13841,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13760,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 13760,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 13760,
											"end": 13839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13760,
											"end": 13839,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 13760,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13724,
											"end": 13841,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 13724,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 13945,
											"end": 13952,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13925,
											"end": 13934,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13921,
											"end": 13943,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 13865,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 13953,
											"name": "tag",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 13865,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13855,
											"end": 13953,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13855,
											"end": 13953,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13650,
											"end": 13963,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13976,
											"end": 14092,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 13976,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 14061,
											"end": 14066,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 14046,
											"end": 14067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14067,
											"name": "tag",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 14046,
											"end": 14067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14039,
											"end": 14044,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14036,
											"end": 14068,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 14026,
											"end": 14086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 14026,
											"end": 14086,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14082,
											"end": 14083,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14080,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14072,
											"end": 14084,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14026,
											"end": 14086,
											"name": "tag",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 14026,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13976,
											"end": 14092,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13976,
											"end": 14092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "tag",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14141,
											"end": 14146,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14179,
											"end": 14185,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14166,
											"end": 14186,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 14157,
											"end": 14186,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14157,
											"end": 14186,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14225,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 14219,
											"end": 14224,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14225,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 14195,
											"end": 14225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14225,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 14195,
											"end": 14225,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14098,
											"end": 14231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "tag",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14302,
											"end": 14308,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14316,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14359,
											"end": 14361,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14347,
											"end": 14356,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14338,
											"end": 14345,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14334,
											"end": 14357,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14330,
											"end": 14362,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 14327,
											"end": 14446,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14327,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 14327,
											"end": 14446,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14365,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 14365,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 14365,
											"end": 14444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14365,
											"end": 14444,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 14365,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14327,
											"end": 14446,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 14327,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 14555,
											"end": 14562,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14546,
											"end": 14552,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14535,
											"end": 14544,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14553,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 14510,
											"end": 14563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14563,
											"name": "tag",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 14510,
											"end": 14563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14500,
											"end": 14563,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14500,
											"end": 14563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14456,
											"end": 14573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14612,
											"end": 14614,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14638,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 14680,
											"end": 14687,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14660,
											"end": 14669,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14656,
											"end": 14678,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14638,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 14638,
											"end": 14688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14638,
											"end": 14688,
											"name": "tag",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 14638,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14628,
											"end": 14688,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14628,
											"end": 14688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14583,
											"end": 14698,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14237,
											"end": 14705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 15018,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 14711,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14772,
											"end": 14776,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14854,
											"end": 14860,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14851,
											"end": 14881,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14848,
											"end": 14904,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14848,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 14848,
											"end": 14904,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 14884,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 14884,
											"end": 14902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 14902,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 14884,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14848,
											"end": 14904,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 14848,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14922,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 14944,
											"end": 14950,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14922,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 14922,
											"end": 14951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14922,
											"end": 14951,
											"name": "tag",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 14922,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14914,
											"end": 14951,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14914,
											"end": 14951,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15000,
											"end": 15004,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14996,
											"end": 15011,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14988,
											"end": 15011,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14988,
											"end": 15011,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 15018,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 15018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 15018,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 15018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15101,
											"end": 15106,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15126,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 15142,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 15183,
											"end": 15189,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15142,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 15142,
											"end": 15190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15142,
											"end": 15190,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 15142,
											"end": 15190,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15126,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 15126,
											"end": 15191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15126,
											"end": 15191,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 15126,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15117,
											"end": 15191,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15117,
											"end": 15191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15214,
											"end": 15220,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15207,
											"end": 15212,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15200,
											"end": 15221,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15245,
											"end": 15250,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15241,
											"end": 15257,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15293,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15281,
											"end": 15287,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15276,
											"end": 15279,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15272,
											"end": 15288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15269,
											"end": 15294,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 15266,
											"end": 15378,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15266,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 15266,
											"end": 15378,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15297,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 15297,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 15297,
											"end": 15376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15297,
											"end": 15376,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 15297,
											"end": 15376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15266,
											"end": 15378,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 15266,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15387,
											"end": 15441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 15434,
											"end": 15440,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15424,
											"end": 15427,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15387,
											"end": 15441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 15387,
											"end": 15441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15387,
											"end": 15441,
											"name": "tag",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 15387,
											"end": 15441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15107,
											"end": 15447,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15024,
											"end": 15447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15521,
											"end": 15526,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15570,
											"end": 15573,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15555,
											"end": 15561,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15551,
											"end": 15568,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15547,
											"end": 15574,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 15537,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 15537,
											"end": 15659,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 15578,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 15578,
											"end": 15657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15657,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 15578,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15537,
											"end": 15659,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 15537,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15695,
											"end": 15701,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15682,
											"end": 15702,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 15720,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 15794,
											"end": 15797,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15786,
											"end": 15792,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15779,
											"end": 15783,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15771,
											"end": 15777,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15767,
											"end": 15784,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15720,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 15720,
											"end": 15798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15720,
											"end": 15798,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 15720,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15711,
											"end": 15798,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15711,
											"end": 15798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15527,
											"end": 15804,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15905,
											"end": 15911,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15913,
											"end": 15919,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15921,
											"end": 15927,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15929,
											"end": 15935,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15978,
											"end": 15981,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 15966,
											"end": 15975,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15957,
											"end": 15964,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 15953,
											"end": 15976,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15949,
											"end": 15982,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 15946,
											"end": 16066,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15946,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 15946,
											"end": 16066,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15985,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 15985,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 15985,
											"end": 16064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15985,
											"end": 16064,
											"name": "tag",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 15985,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15946,
											"end": 16066,
											"name": "tag",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 15946,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16105,
											"end": 16106,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16130,
											"end": 16183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 16175,
											"end": 16182,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16166,
											"end": 16172,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16164,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 16151,
											"end": 16173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16130,
											"end": 16183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 16130,
											"end": 16183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16130,
											"end": 16183,
											"name": "tag",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 16130,
											"end": 16183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16120,
											"end": 16183,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16120,
											"end": 16183,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16076,
											"end": 16193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16232,
											"end": 16234,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 16303,
											"end": 16310,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16294,
											"end": 16300,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16283,
											"end": 16292,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 16279,
											"end": 16301,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16258,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 16258,
											"end": 16311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16258,
											"end": 16311,
											"name": "tag",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 16258,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16248,
											"end": 16311,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16248,
											"end": 16311,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16203,
											"end": 16321,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16360,
											"end": 16362,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16386,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 16431,
											"end": 16438,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16422,
											"end": 16428,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16411,
											"end": 16420,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 16407,
											"end": 16429,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16386,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 16386,
											"end": 16439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16386,
											"end": 16439,
											"name": "tag",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 16386,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16439,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16439,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16331,
											"end": 16449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16516,
											"end": 16518,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16505,
											"end": 16514,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16501,
											"end": 16519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16488,
											"end": 16520,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 16547,
											"end": 16565,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16539,
											"end": 16545,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16536,
											"end": 16566,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16533,
											"end": 16650,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16533,
											"end": 16650,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "646"
										},
										{
											"begin": 16533,
											"end": 16650,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 16569,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 16569,
											"end": 16648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 16648,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 16569,
											"end": 16648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16533,
											"end": 16650,
											"name": "tag",
											"source": 19,
											"value": "646"
										},
										{
											"begin": 16533,
											"end": 16650,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16674,
											"end": 16736,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 16728,
											"end": 16735,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16719,
											"end": 16725,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16708,
											"end": 16717,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 16704,
											"end": 16726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16674,
											"end": 16736,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 16674,
											"end": 16736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16674,
											"end": 16736,
											"name": "tag",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 16674,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16664,
											"end": 16736,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16664,
											"end": 16736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16459,
											"end": 16746,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15810,
											"end": 16753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16880,
											"end": 16884,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16918,
											"end": 16920,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16916,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16895,
											"end": 16921,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16895,
											"end": 16921,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16931,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 16999,
											"end": 17000,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16988,
											"end": 16997,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16984,
											"end": 17001,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16975,
											"end": 16981,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16931,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 16931,
											"end": 17002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16931,
											"end": 17002,
											"name": "tag",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 16931,
											"end": 17002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17012,
											"end": 17084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 17080,
											"end": 17082,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17069,
											"end": 17078,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17065,
											"end": 17083,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17056,
											"end": 17062,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17012,
											"end": 17084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 17012,
											"end": 17084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17012,
											"end": 17084,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 17012,
											"end": 17084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 17091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17165,
											"end": 17171,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17173,
											"end": 17179,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17222,
											"end": 17224,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17201,
											"end": 17208,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17197,
											"end": 17220,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17193,
											"end": 17225,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 17190,
											"end": 17309,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17190,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 17190,
											"end": 17309,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17228,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 17228,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 17228,
											"end": 17307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17228,
											"end": 17307,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 17228,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17190,
											"end": 17309,
											"name": "tag",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 17190,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 17418,
											"end": 17425,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17409,
											"end": 17415,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17398,
											"end": 17407,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17373,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 17373,
											"end": 17426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17373,
											"end": 17426,
											"name": "tag",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 17373,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17363,
											"end": 17426,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17363,
											"end": 17426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17475,
											"end": 17477,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 17546,
											"end": 17553,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17537,
											"end": 17543,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17526,
											"end": 17535,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 17522,
											"end": 17544,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 17501,
											"end": 17554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17491,
											"end": 17554,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17491,
											"end": 17554,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17446,
											"end": 17564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17097,
											"end": 17571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17577,
											"end": 17757,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 17577,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17625,
											"end": 17702,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17622,
											"end": 17623,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17703,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17722,
											"end": 17726,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 17712,
											"end": 17727,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17746,
											"end": 17750,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17743,
											"end": 17744,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17736,
											"end": 17751,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 17763,
											"end": 18083,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 17763,
											"end": 18083,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17807,
											"end": 17813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17844,
											"end": 17845,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 17838,
											"end": 17842,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17834,
											"end": 17846,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 17824,
											"end": 17846,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17824,
											"end": 17846,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17891,
											"end": 17892,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 17885,
											"end": 17889,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17881,
											"end": 17893,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17912,
											"end": 17930,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17902,
											"end": 17983,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 17902,
											"end": 17983,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17968,
											"end": 17972,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 17960,
											"end": 17966,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17956,
											"end": 17973,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17946,
											"end": 17973,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17946,
											"end": 17973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17902,
											"end": 17983,
											"name": "tag",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 17902,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18030,
											"end": 18032,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18022,
											"end": 18028,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18019,
											"end": 18033,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 17999,
											"end": 18017,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17996,
											"end": 18034,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17993,
											"end": 18077,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 17993,
											"end": 18077,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 18049,
											"end": 18067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "tag",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17993,
											"end": 18077,
											"name": "tag",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 17993,
											"end": 18077,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17814,
											"end": 18083,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17763,
											"end": 18083,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17763,
											"end": 18083,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17763,
											"end": 18083,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17763,
											"end": 18083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18238,
											"end": 18242,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18278,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 18265,
											"end": 18274,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18261,
											"end": 18279,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18253,
											"end": 18279,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18253,
											"end": 18279,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18289,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 18357,
											"end": 18358,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18346,
											"end": 18355,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18342,
											"end": 18359,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18333,
											"end": 18339,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 18289,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 18289,
											"end": 18360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18289,
											"end": 18360,
											"name": "tag",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 18289,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18370,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 18438,
											"end": 18440,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18427,
											"end": 18436,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18423,
											"end": 18441,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18414,
											"end": 18420,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18370,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 18370,
											"end": 18442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18370,
											"end": 18442,
											"name": "tag",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 18370,
											"end": 18442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18452,
											"end": 18524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 18520,
											"end": 18522,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18509,
											"end": 18518,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18505,
											"end": 18523,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18496,
											"end": 18502,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18452,
											"end": 18524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 18452,
											"end": 18524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18452,
											"end": 18524,
											"name": "tag",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 18452,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18537,
											"end": 18717,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 18537,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18585,
											"end": 18662,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18582,
											"end": 18583,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18663,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18682,
											"end": 18686,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 18679,
											"end": 18680,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 18672,
											"end": 18687,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18706,
											"end": 18710,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 18703,
											"end": 18704,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18696,
											"end": 18711,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "tag",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18763,
											"end": 18766,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18782,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 18800,
											"end": 18801,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18782,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 18782,
											"end": 18802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18782,
											"end": 18802,
											"name": "tag",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 18782,
											"end": 18802,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18777,
											"end": 18802,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18777,
											"end": 18802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18816,
											"end": 18836,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 18834,
											"end": 18835,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18816,
											"end": 18836,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 18816,
											"end": 18836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18816,
											"end": 18836,
											"name": "tag",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 18816,
											"end": 18836,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18811,
											"end": 18836,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18811,
											"end": 18836,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18859,
											"end": 18860,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18857,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18852,
											"end": 18861,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18845,
											"end": 18861,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18845,
											"end": 18861,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18880,
											"end": 18883,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 18877,
											"end": 18878,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18874,
											"end": 18884,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 18871,
											"end": 18907,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18871,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 18871,
											"end": 18907,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 18887,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "tag",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18871,
											"end": 18907,
											"name": "tag",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 18871,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 19091,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 18920,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19060,
											"end": 19083,
											"name": "PUSH",
											"source": 19,
											"value": "4172726179206C656E677468206D69736D617463680000000000000000000000"
										},
										{
											"begin": 19056,
											"end": 19057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19048,
											"end": 19054,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19044,
											"end": 19058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19037,
											"end": 19084,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 19091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 19091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19463,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 19097,
											"end": 19463,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19239,
											"end": 19242,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19260,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 19324,
											"end": 19326,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 19319,
											"end": 19322,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19260,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 19260,
											"end": 19327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19260,
											"end": 19327,
											"name": "tag",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 19260,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19253,
											"end": 19327,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19253,
											"end": 19327,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19336,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 19425,
											"end": 19428,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19336,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 19336,
											"end": 19429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19336,
											"end": 19429,
											"name": "tag",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 19336,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19454,
											"end": 19456,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19449,
											"end": 19452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19445,
											"end": 19457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19438,
											"end": 19457,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19438,
											"end": 19457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19463,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19463,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19463,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19469,
											"end": 19888,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 19469,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19635,
											"end": 19639,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19673,
											"end": 19675,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19662,
											"end": 19671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19658,
											"end": 19676,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19650,
											"end": 19676,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19650,
											"end": 19676,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19722,
											"end": 19731,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19716,
											"end": 19720,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19712,
											"end": 19732,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19708,
											"end": 19709,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19697,
											"end": 19706,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19693,
											"end": 19710,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19686,
											"end": 19733,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19750,
											"end": 19881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 19876,
											"end": 19880,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19750,
											"end": 19881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 19750,
											"end": 19881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19750,
											"end": 19881,
											"name": "tag",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 19750,
											"end": 19881,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19742,
											"end": 19881,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19742,
											"end": 19881,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19469,
											"end": 19888,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19469,
											"end": 19888,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19469,
											"end": 19888,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19469,
											"end": 19888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19894,
											"end": 20074,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 19894,
											"end": 20074,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19942,
											"end": 20019,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19939,
											"end": 19940,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19932,
											"end": 20020,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20039,
											"end": 20043,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 20036,
											"end": 20037,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 20029,
											"end": 20044,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20063,
											"end": 20067,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 20060,
											"end": 20061,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20053,
											"end": 20068,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20120,
											"end": 20127,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 20161,
											"end": 20162,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 20143,
											"end": 20163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "tag",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20138,
											"end": 20163,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20138,
											"end": 20163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20177,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 20195,
											"end": 20196,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20177,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 20177,
											"end": 20197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20177,
											"end": 20197,
											"name": "tag",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 20177,
											"end": 20197,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20172,
											"end": 20197,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20172,
											"end": 20197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20232,
											"end": 20233,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20229,
											"end": 20230,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20225,
											"end": 20234,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 20254,
											"end": 20284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 20272,
											"end": 20283,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20254,
											"end": 20284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 20254,
											"end": 20284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20254,
											"end": 20284,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 20254,
											"end": 20284,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20243,
											"end": 20284,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20243,
											"end": 20284,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20433,
											"end": 20434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20424,
											"end": 20431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20420,
											"end": 20435,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 20417,
											"end": 20418,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20414,
											"end": 20436,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 20394,
											"end": 20395,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20387,
											"end": 20396,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20367,
											"end": 20450,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 20344,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 20344,
											"end": 20483,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20463,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 20463,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 20463,
											"end": 20481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20463,
											"end": 20481,
											"name": "tag",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 20463,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20344,
											"end": 20483,
											"name": "tag",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 20344,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20128,
											"end": 20490,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20080,
											"end": 20490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20496,
											"end": 20676,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 20496,
											"end": 20676,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20544,
											"end": 20621,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20541,
											"end": 20542,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20534,
											"end": 20622,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20641,
											"end": 20645,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 20638,
											"end": 20639,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 20631,
											"end": 20646,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20665,
											"end": 20669,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 20662,
											"end": 20663,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20655,
											"end": 20670,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20722,
											"end": 20723,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20739,
											"end": 20759,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 20757,
											"end": 20758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20739,
											"end": 20759,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 20739,
											"end": 20759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20739,
											"end": 20759,
											"name": "tag",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 20739,
											"end": 20759,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20734,
											"end": 20759,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20734,
											"end": 20759,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 20791,
											"end": 20792,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 20773,
											"end": 20793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20793,
											"name": "tag",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 20773,
											"end": 20793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20768,
											"end": 20793,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20768,
											"end": 20793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20812,
											"end": 20813,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20802,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "689"
										},
										{
											"begin": 20802,
											"end": 20837,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 20817,
											"end": 20835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "tag",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20802,
											"end": 20837,
											"name": "tag",
											"source": 19,
											"value": "689"
										},
										{
											"begin": 20802,
											"end": 20837,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20859,
											"end": 20860,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20856,
											"end": 20857,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20852,
											"end": 20861,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 20847,
											"end": 20861,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20847,
											"end": 20861,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20682,
											"end": 20867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20873,
											"end": 20952,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 20873,
											"end": 20952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20912,
											"end": 20919,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20941,
											"end": 20946,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20930,
											"end": 20946,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20930,
											"end": 20946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20873,
											"end": 20952,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20873,
											"end": 20952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20873,
											"end": 20952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20873,
											"end": 20952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20958,
											"end": 21115,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 20958,
											"end": 21115,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21063,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "693"
										},
										{
											"begin": 21083,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 21101,
											"end": 21106,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21083,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 21083,
											"end": 21107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21083,
											"end": 21107,
											"name": "tag",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 21083,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21063,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 21063,
											"end": 21108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21063,
											"end": 21108,
											"name": "tag",
											"source": 19,
											"value": "693"
										},
										{
											"begin": 21063,
											"end": 21108,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21058,
											"end": 21061,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21051,
											"end": 21109,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20958,
											"end": 21115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20958,
											"end": 21115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20958,
											"end": 21115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21199,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 21121,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21159,
											"end": 21166,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21188,
											"end": 21193,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21177,
											"end": 21193,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21177,
											"end": 21193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21199,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21199,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21205,
											"end": 21358,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 21205,
											"end": 21358,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21308,
											"end": 21351,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "697"
										},
										{
											"begin": 21327,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 21344,
											"end": 21349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21327,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 21327,
											"end": 21350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21327,
											"end": 21350,
											"name": "tag",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 21327,
											"end": 21350,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21308,
											"end": 21351,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 21308,
											"end": 21351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21308,
											"end": 21351,
											"name": "tag",
											"source": 19,
											"value": "697"
										},
										{
											"begin": 21308,
											"end": 21351,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21303,
											"end": 21306,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21296,
											"end": 21352,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21205,
											"end": 21358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21205,
											"end": 21358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21205,
											"end": 21358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21530,
											"end": 21533,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21545,
											"end": 21620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 21616,
											"end": 21619,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21607,
											"end": 21613,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21545,
											"end": 21620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 21545,
											"end": 21620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21545,
											"end": 21620,
											"name": "tag",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 21545,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21645,
											"end": 21647,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21640,
											"end": 21643,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21636,
											"end": 21648,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21629,
											"end": 21648,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21629,
											"end": 21648,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21658,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "701"
										},
										{
											"begin": 21729,
											"end": 21732,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21720,
											"end": 21726,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 21658,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 21658,
											"end": 21733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21658,
											"end": 21733,
											"name": "tag",
											"source": 19,
											"value": "701"
										},
										{
											"begin": 21658,
											"end": 21733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21758,
											"end": 21760,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21753,
											"end": 21756,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21742,
											"end": 21761,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21742,
											"end": 21761,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21771,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 21840,
											"end": 21843,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21831,
											"end": 21837,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21771,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 21771,
											"end": 21844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21771,
											"end": 21844,
											"name": "tag",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 21771,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21869,
											"end": 21870,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 21864,
											"end": 21867,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21860,
											"end": 21871,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21853,
											"end": 21871,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21853,
											"end": 21871,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21888,
											"end": 21891,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21881,
											"end": 21891,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21881,
											"end": 21891,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21903,
											"end": 22044,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 21903,
											"end": 22044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21952,
											"end": 21956,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21975,
											"end": 21978,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21967,
											"end": 21978,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21967,
											"end": 21978,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21998,
											"end": 22001,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21995,
											"end": 21996,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21988,
											"end": 22002,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22032,
											"end": 22036,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22029,
											"end": 22030,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22019,
											"end": 22037,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 22011,
											"end": 22037,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22011,
											"end": 22037,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21903,
											"end": 22044,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21903,
											"end": 22044,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21903,
											"end": 22044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21903,
											"end": 22044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22050,
											"end": 22143,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 22050,
											"end": 22143,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22087,
											"end": 22093,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22136,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22129,
											"end": 22131,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 22122,
											"end": 22127,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22118,
											"end": 22132,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22114,
											"end": 22137,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 22104,
											"end": 22137,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22104,
											"end": 22137,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22050,
											"end": 22143,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22050,
											"end": 22143,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22050,
											"end": 22143,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22050,
											"end": 22143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22193,
											"end": 22201,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22237,
											"end": 22241,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22233,
											"end": 22249,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 22212,
											"end": 22249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22212,
											"end": 22249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22331,
											"end": 22337,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22381,
											"end": 22382,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 22369,
											"end": 22379,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22404,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "707"
										},
										{
											"begin": 22434,
											"end": 22500,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22423,
											"end": 22432,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22404,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 22404,
											"end": 22501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22404,
											"end": 22501,
											"name": "tag",
											"source": 19,
											"value": "707"
										},
										{
											"begin": 22404,
											"end": 22501,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22522,
											"end": 22561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 22552,
											"end": 22560,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 22541,
											"end": 22550,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22522,
											"end": 22561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 22522,
											"end": 22561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22522,
											"end": 22561,
											"name": "tag",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 22522,
											"end": 22561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22510,
											"end": 22561,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 22510,
											"end": 22561,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22594,
											"end": 22598,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22590,
											"end": 22599,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 22583,
											"end": 22588,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22579,
											"end": 22600,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 22570,
											"end": 22600,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22570,
											"end": 22600,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22643,
											"end": 22647,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22633,
											"end": 22641,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 22629,
											"end": 22648,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 22622,
											"end": 22627,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22619,
											"end": 22649,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 22609,
											"end": 22649,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22609,
											"end": 22649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22338,
											"end": 22655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22338,
											"end": 22655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22661,
											"end": 22721,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 22661,
											"end": 22721,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22689,
											"end": 22692,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22710,
											"end": 22715,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22703,
											"end": 22715,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22703,
											"end": 22715,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22661,
											"end": 22721,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22661,
											"end": 22721,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22661,
											"end": 22721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22661,
											"end": 22721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22727,
											"end": 22869,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 22727,
											"end": 22869,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22777,
											"end": 22786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22810,
											"end": 22863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 22828,
											"end": 22862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "712"
										},
										{
											"begin": 22837,
											"end": 22861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 22855,
											"end": 22860,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22837,
											"end": 22861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 22837,
											"end": 22861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22837,
											"end": 22861,
											"name": "tag",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 22837,
											"end": 22861,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22828,
											"end": 22862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 22828,
											"end": 22862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22828,
											"end": 22862,
											"name": "tag",
											"source": 19,
											"value": "712"
										},
										{
											"begin": 22828,
											"end": 22862,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22810,
											"end": 22863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 22810,
											"end": 22863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22810,
											"end": 22863,
											"name": "tag",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 22810,
											"end": 22863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22797,
											"end": 22863,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22797,
											"end": 22863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22727,
											"end": 22869,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22727,
											"end": 22869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22727,
											"end": 22869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22727,
											"end": 22869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22875,
											"end": 22950,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 22875,
											"end": 22950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22918,
											"end": 22921,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22932,
											"end": 22944,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22932,
											"end": 22944,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22875,
											"end": 22950,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22875,
											"end": 22950,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22875,
											"end": 22950,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22875,
											"end": 22950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 23225,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 22956,
											"end": 23225,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23066,
											"end": 23105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 23097,
											"end": 23104,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23066,
											"end": 23105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 23066,
											"end": 23105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23066,
											"end": 23105,
											"name": "tag",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 23066,
											"end": 23105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23127,
											"end": 23218,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "717"
										},
										{
											"begin": 23176,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 23200,
											"end": 23216,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23176,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 23176,
											"end": 23217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23176,
											"end": 23217,
											"name": "tag",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 23176,
											"end": 23217,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23168,
											"end": 23174,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23161,
											"end": 23165,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23155,
											"end": 23166,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 23127,
											"end": 23218,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 23127,
											"end": 23218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23127,
											"end": 23218,
											"name": "tag",
											"source": 19,
											"value": "717"
										},
										{
											"begin": 23127,
											"end": 23218,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23121,
											"end": 23125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23114,
											"end": 23219,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23032,
											"end": 23225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 23225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 23225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 23225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 23225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23231,
											"end": 23304,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 23231,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23276,
											"end": 23279,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23231,
											"end": 23304,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23231,
											"end": 23304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23310,
											"end": 23499,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 23310,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23387,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "721"
										},
										{
											"begin": 23387,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 23387,
											"end": 23419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23387,
											"end": 23419,
											"name": "tag",
											"source": 19,
											"value": "721"
										},
										{
											"begin": 23387,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23428,
											"end": 23493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "722"
										},
										{
											"begin": 23486,
											"end": 23492,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23478,
											"end": 23484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23472,
											"end": 23476,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23428,
											"end": 23493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 23428,
											"end": 23493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23428,
											"end": 23493,
											"name": "tag",
											"source": 19,
											"value": "722"
										},
										{
											"begin": 23428,
											"end": 23493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23363,
											"end": 23499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23310,
											"end": 23499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23310,
											"end": 23499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23310,
											"end": 23499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23691,
											"name": "tag",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 23505,
											"end": 23691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "tag",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23582,
											"end": 23585,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23575,
											"end": 23580,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23572,
											"end": 23586,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23636,
											"end": 23675,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "727"
										},
										{
											"begin": 23673,
											"end": 23674,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23666,
											"end": 23671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23636,
											"end": 23675,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 23636,
											"end": 23675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23636,
											"end": 23675,
											"name": "tag",
											"source": 19,
											"value": "727"
										},
										{
											"begin": 23636,
											"end": 23675,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23609,
											"end": 23610,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 23602,
											"end": 23607,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23598,
											"end": 23611,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23589,
											"end": 23611,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23589,
											"end": 23611,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "tag",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 23565,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23691,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23691,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23697,
											"end": 24240,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 23697,
											"end": 24240,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23798,
											"end": 23800,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23793,
											"end": 23796,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23790,
											"end": 23801,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23787,
											"end": 24233,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23787,
											"end": 24233,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 23787,
											"end": 24233,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23832,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "730"
										},
										{
											"begin": 23864,
											"end": 23869,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23832,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 23832,
											"end": 23870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23832,
											"end": 23870,
											"name": "tag",
											"source": 19,
											"value": "730"
										},
										{
											"begin": 23832,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "731"
										},
										{
											"begin": 23934,
											"end": 23944,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 23916,
											"end": 23945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "tag",
											"source": 19,
											"value": "731"
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23906,
											"end": 23914,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23902,
											"end": 23946,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24099,
											"end": 24101,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24087,
											"end": 24097,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24084,
											"end": 24102,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24081,
											"end": 24130,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24081,
											"end": 24130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "732"
										},
										{
											"begin": 24081,
											"end": 24130,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24120,
											"end": 24128,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24105,
											"end": 24128,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24105,
											"end": 24128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24081,
											"end": 24130,
											"name": "tag",
											"source": 19,
											"value": "732"
										},
										{
											"begin": 24081,
											"end": 24130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24143,
											"end": 24223,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "733"
										},
										{
											"begin": 24199,
											"end": 24221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "734"
										},
										{
											"begin": 24217,
											"end": 24220,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24199,
											"end": 24221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 24199,
											"end": 24221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24199,
											"end": 24221,
											"name": "tag",
											"source": 19,
											"value": "734"
										},
										{
											"begin": 24199,
											"end": 24221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24189,
											"end": 24197,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24185,
											"end": 24222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24172,
											"end": 24183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24143,
											"end": 24223,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 24143,
											"end": 24223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24143,
											"end": 24223,
											"name": "tag",
											"source": 19,
											"value": "733"
										},
										{
											"begin": 24143,
											"end": 24223,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23802,
											"end": 24233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23802,
											"end": 24233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23787,
											"end": 24233,
											"name": "tag",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 23787,
											"end": 24233,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23697,
											"end": 24240,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23697,
											"end": 24240,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23697,
											"end": 24240,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23697,
											"end": 24240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24300,
											"end": 24308,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24350,
											"end": 24355,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24344,
											"end": 24348,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24340,
											"end": 24356,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 24319,
											"end": 24356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24319,
											"end": 24356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24246,
											"end": 24363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24413,
											"end": 24419,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24446,
											"end": 24497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "737"
										},
										{
											"begin": 24494,
											"end": 24495,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24490,
											"end": 24496,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 24482,
											"end": 24487,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24479,
											"end": 24480,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 24475,
											"end": 24488,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24446,
											"end": 24497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 24446,
											"end": 24497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24446,
											"end": 24497,
											"name": "tag",
											"source": 19,
											"value": "737"
										},
										{
											"begin": 24446,
											"end": 24497,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24442,
											"end": 24498,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 24527,
											"end": 24531,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 24521,
											"end": 24525,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24517,
											"end": 24532,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24507,
											"end": 24532,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24507,
											"end": 24532,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24420,
											"end": 24538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24619,
											"end": 24623,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24765,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "739"
										},
										{
											"begin": 24790,
											"end": 24793,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24784,
											"end": 24788,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24765,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 24765,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24765,
											"end": 24794,
											"name": "tag",
											"source": 19,
											"value": "739"
										},
										{
											"begin": 24765,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24757,
											"end": 24794,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24757,
											"end": 24794,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24827,
											"end": 24830,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24824,
											"end": 24825,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 24820,
											"end": 24831,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24814,
											"end": 24818,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24811,
											"end": 24832,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 24803,
											"end": 24832,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24803,
											"end": 24832,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24843,
											"end": 26238,
											"name": "tag",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 24843,
											"end": 26238,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24960,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 24993,
											"end": 24996,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24960,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 24960,
											"end": 24997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24960,
											"end": 24997,
											"name": "tag",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 24960,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25062,
											"end": 25080,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25054,
											"end": 25060,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25051,
											"end": 25081,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 25048,
											"end": 25104,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25048,
											"end": 25104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 25048,
											"end": 25104,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25084,
											"end": 25102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 25084,
											"end": 25102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 25084,
											"end": 25102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25084,
											"end": 25102,
											"name": "tag",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 25084,
											"end": 25102,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25048,
											"end": 25104,
											"name": "tag",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 25048,
											"end": 25104,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25128,
											"end": 25166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "744"
										},
										{
											"begin": 25160,
											"end": 25164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25154,
											"end": 25165,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 25128,
											"end": 25166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 25128,
											"end": 25166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25128,
											"end": 25166,
											"name": "tag",
											"source": 19,
											"value": "744"
										},
										{
											"begin": 25128,
											"end": 25166,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25213,
											"end": 25280,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 25273,
											"end": 25279,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25265,
											"end": 25271,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25259,
											"end": 25263,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25213,
											"end": 25280,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 25213,
											"end": 25280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25213,
											"end": 25280,
											"name": "tag",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 25213,
											"end": 25280,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25307,
											"end": 25308,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25331,
											"end": 25335,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25318,
											"end": 25335,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25318,
											"end": 25335,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25363,
											"end": 25365,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25355,
											"end": 25361,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25352,
											"end": 25366,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 25380,
											"end": 25381,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "747"
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26037,
											"end": 26038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26054,
											"end": 26060,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26051,
											"end": 26128,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26051,
											"end": 26128,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "748"
										},
										{
											"begin": 26051,
											"end": 26128,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26103,
											"end": 26112,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26098,
											"end": 26101,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 26094,
											"end": 26113,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26088,
											"end": 26114,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26079,
											"end": 26114,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26079,
											"end": 26114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26051,
											"end": 26128,
											"name": "tag",
											"source": 19,
											"value": "748"
										},
										{
											"begin": 26051,
											"end": 26128,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26154,
											"end": 26221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 26214,
											"end": 26220,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26207,
											"end": 26212,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26154,
											"end": 26221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 26154,
											"end": 26221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26154,
											"end": 26221,
											"name": "tag",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 26154,
											"end": 26221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26148,
											"end": 26152,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26141,
											"end": 26222,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 26010,
											"end": 26232,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25345,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 25345,
											"end": 26232,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "tag",
											"source": 19,
											"value": "747"
										},
										{
											"begin": 25375,
											"end": 25993,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25427,
											"end": 25431,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25423,
											"end": 25432,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 25415,
											"end": 25421,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25411,
											"end": 25433,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 25493,
											"end": 25497,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 25461,
											"end": 25498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25498,
											"name": "tag",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 25461,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25520,
											"end": 25521,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "tag",
											"source": 19,
											"value": "751"
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25548,
											"end": 25555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25545,
											"end": 25546,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25542,
											"end": 25556,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "753"
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25627,
											"end": 25636,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25622,
											"end": 25625,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 25618,
											"end": 25637,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25612,
											"end": 25638,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25604,
											"end": 25610,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25597,
											"end": 25639,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 25678,
											"end": 25679,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 25670,
											"end": 25676,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25666,
											"end": 25680,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25656,
											"end": 25680,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25656,
											"end": 25680,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25725,
											"end": 25727,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25714,
											"end": 25723,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25697,
											"end": 25728,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 25697,
											"end": 25728,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25571,
											"end": 25575,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25568,
											"end": 25569,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25564,
											"end": 25576,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25559,
											"end": 25576,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25559,
											"end": 25576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "751"
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "tag",
											"source": 19,
											"value": "753"
										},
										{
											"begin": 25534,
											"end": 25742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25770,
											"end": 25776,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25761,
											"end": 25768,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25758,
											"end": 25777,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 25755,
											"end": 25934,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25755,
											"end": 25934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "754"
										},
										{
											"begin": 25755,
											"end": 25934,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25828,
											"end": 25837,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 25826,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 25819,
											"end": 25838,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25813,
											"end": 25839,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25871,
											"end": 25919,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "755"
										},
										{
											"begin": 25913,
											"end": 25917,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25905,
											"end": 25911,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 25901,
											"end": 25918,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25890,
											"end": 25899,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25871,
											"end": 25919,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 25871,
											"end": 25919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25871,
											"end": 25919,
											"name": "tag",
											"source": 19,
											"value": "755"
										},
										{
											"begin": 25871,
											"end": 25919,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25863,
											"end": 25869,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25856,
											"end": 25920,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 25778,
											"end": 25934,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25755,
											"end": 25934,
											"name": "tag",
											"source": 19,
											"value": "754"
										},
										{
											"begin": 25755,
											"end": 25934,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25980,
											"end": 25981,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 25976,
											"end": 25977,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 25968,
											"end": 25974,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 25964,
											"end": 25978,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 25960,
											"end": 25982,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25954,
											"end": 25958,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 25947,
											"end": 25983,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 25382,
											"end": 25993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25382,
											"end": 25993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25382,
											"end": 25993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25345,
											"end": 26232,
											"name": "tag",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 25345,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25345,
											"end": 26232,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24935,
											"end": 26238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24935,
											"end": 26238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24935,
											"end": 26238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24843,
											"end": 26238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24843,
											"end": 26238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24843,
											"end": 26238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26244,
											"end": 26342,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 26244,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26295,
											"end": 26301,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26329,
											"end": 26334,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26323,
											"end": 26335,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26244,
											"end": 26342,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26244,
											"end": 26342,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26244,
											"end": 26342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26244,
											"end": 26342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26431,
											"end": 26442,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26465,
											"end": 26471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26460,
											"end": 26463,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26453,
											"end": 26472,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26505,
											"end": 26509,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26500,
											"end": 26503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26496,
											"end": 26510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26481,
											"end": 26510,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26481,
											"end": 26510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26348,
											"end": 26516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26608,
											"end": 26611,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26636,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "759"
										},
										{
											"begin": 26668,
											"end": 26673,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26636,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 26636,
											"end": 26674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26636,
											"end": 26674,
											"name": "tag",
											"source": 19,
											"value": "759"
										},
										{
											"begin": 26636,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26690,
											"end": 26760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "760"
										},
										{
											"begin": 26753,
											"end": 26759,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26748,
											"end": 26751,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26690,
											"end": 26760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 26690,
											"end": 26760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26690,
											"end": 26760,
											"name": "tag",
											"source": 19,
											"value": "760"
										},
										{
											"begin": 26690,
											"end": 26760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26683,
											"end": 26760,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 26683,
											"end": 26760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26769,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "761"
										},
										{
											"begin": 26827,
											"end": 26833,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26822,
											"end": 26825,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26815,
											"end": 26819,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26808,
											"end": 26813,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26804,
											"end": 26820,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26769,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 26769,
											"end": 26834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26769,
											"end": 26834,
											"name": "tag",
											"source": 19,
											"value": "761"
										},
										{
											"begin": 26769,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26859,
											"end": 26888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "762"
										},
										{
											"begin": 26881,
											"end": 26887,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26859,
											"end": 26888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 26859,
											"end": 26888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26859,
											"end": 26888,
											"name": "tag",
											"source": 19,
											"value": "762"
										},
										{
											"begin": 26859,
											"end": 26888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26854,
											"end": 26857,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26850,
											"end": 26889,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26843,
											"end": 26889,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26843,
											"end": 26889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26612,
											"end": 26895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "tag",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27096,
											"end": 27100,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27134,
											"end": 27137,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 27123,
											"end": 27132,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27119,
											"end": 27138,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27111,
											"end": 27138,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27111,
											"end": 27138,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27148,
											"end": 27219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "764"
										},
										{
											"begin": 27216,
											"end": 27217,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27205,
											"end": 27214,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27201,
											"end": 27218,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27192,
											"end": 27198,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 27148,
											"end": 27219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 27148,
											"end": 27219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27148,
											"end": 27219,
											"name": "tag",
											"source": 19,
											"value": "764"
										},
										{
											"begin": 27148,
											"end": 27219,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27229,
											"end": 27301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "765"
										},
										{
											"begin": 27297,
											"end": 27299,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27286,
											"end": 27295,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27282,
											"end": 27300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27273,
											"end": 27279,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 27229,
											"end": 27301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 27229,
											"end": 27301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27229,
											"end": 27301,
											"name": "tag",
											"source": 19,
											"value": "765"
										},
										{
											"begin": 27229,
											"end": 27301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27311,
											"end": 27383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "766"
										},
										{
											"begin": 27379,
											"end": 27381,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 27368,
											"end": 27377,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27364,
											"end": 27382,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27355,
											"end": 27361,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 27311,
											"end": 27383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 27311,
											"end": 27383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27311,
											"end": 27383,
											"name": "tag",
											"source": 19,
											"value": "766"
										},
										{
											"begin": 27311,
											"end": 27383,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27430,
											"end": 27439,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27424,
											"end": 27428,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27420,
											"end": 27440,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 27415,
											"end": 27417,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 27404,
											"end": 27413,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27400,
											"end": 27418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27393,
											"end": 27441,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27458,
											"end": 27534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "767"
										},
										{
											"begin": 27529,
											"end": 27533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27520,
											"end": 27526,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27458,
											"end": 27534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 27458,
											"end": 27534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27458,
											"end": 27534,
											"name": "tag",
											"source": 19,
											"value": "767"
										},
										{
											"begin": 27458,
											"end": 27534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27450,
											"end": 27534,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27450,
											"end": 27534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26901,
											"end": 27541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27603,
											"end": 27608,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27634,
											"end": 27640,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27628,
											"end": 27641,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 27619,
											"end": 27641,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27619,
											"end": 27641,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27650,
											"end": 27682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "769"
										},
										{
											"begin": 27676,
											"end": 27681,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27650,
											"end": 27682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 27650,
											"end": 27682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27650,
											"end": 27682,
											"name": "tag",
											"source": 19,
											"value": "769"
										},
										{
											"begin": 27650,
											"end": 27682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27547,
											"end": 27688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "tag",
											"source": 19,
											"value": "279"
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27763,
											"end": 27769,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27812,
											"end": 27814,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27800,
											"end": 27809,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27791,
											"end": 27798,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27787,
											"end": 27810,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 27783,
											"end": 27815,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 27780,
											"end": 27899,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 27780,
											"end": 27899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "771"
										},
										{
											"begin": 27780,
											"end": 27899,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27818,
											"end": 27897,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "772"
										},
										{
											"begin": 27818,
											"end": 27897,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 27818,
											"end": 27897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27818,
											"end": 27897,
											"name": "tag",
											"source": 19,
											"value": "772"
										},
										{
											"begin": 27818,
											"end": 27897,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27780,
											"end": 27899,
											"name": "tag",
											"source": 19,
											"value": "771"
										},
										{
											"begin": 27780,
											"end": 27899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27938,
											"end": 27939,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27963,
											"end": 28026,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "773"
										},
										{
											"begin": 28018,
											"end": 28025,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28009,
											"end": 28015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27998,
											"end": 28007,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 27994,
											"end": 28016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27963,
											"end": 28026,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 27963,
											"end": 28026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27963,
											"end": 28026,
											"name": "tag",
											"source": 19,
											"value": "773"
										},
										{
											"begin": 27963,
											"end": 28026,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27953,
											"end": 28026,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27953,
											"end": 28026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27909,
											"end": 28036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27694,
											"end": 28043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28151,
											"end": 28162,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28188,
											"end": 28191,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28173,
											"end": 28191,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28173,
											"end": 28191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28049,
											"end": 28197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28309,
											"end": 28312,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28337,
											"end": 28376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "776"
										},
										{
											"begin": 28370,
											"end": 28375,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28337,
											"end": 28376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 28337,
											"end": 28376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28337,
											"end": 28376,
											"name": "tag",
											"source": 19,
											"value": "776"
										},
										{
											"begin": 28337,
											"end": 28376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28392,
											"end": 28481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "777"
										},
										{
											"begin": 28474,
											"end": 28480,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28469,
											"end": 28472,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28392,
											"end": 28481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 28392,
											"end": 28481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28392,
											"end": 28481,
											"name": "tag",
											"source": 19,
											"value": "777"
										},
										{
											"begin": 28392,
											"end": 28481,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28385,
											"end": 28481,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 28385,
											"end": 28481,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28490,
											"end": 28555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "778"
										},
										{
											"begin": 28548,
											"end": 28554,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28543,
											"end": 28546,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28536,
											"end": 28540,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 28529,
											"end": 28534,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 28525,
											"end": 28541,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28490,
											"end": 28555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 28490,
											"end": 28555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28490,
											"end": 28555,
											"name": "tag",
											"source": 19,
											"value": "778"
										},
										{
											"begin": 28490,
											"end": 28555,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28580,
											"end": 28586,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 28575,
											"end": 28578,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28571,
											"end": 28587,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28564,
											"end": 28587,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28564,
											"end": 28587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28313,
											"end": 28593,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28203,
											"end": 28593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28779,
											"end": 28782,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28801,
											"end": 28896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "780"
										},
										{
											"begin": 28892,
											"end": 28895,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28883,
											"end": 28889,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28801,
											"end": 28896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 28801,
											"end": 28896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28801,
											"end": 28896,
											"name": "tag",
											"source": 19,
											"value": "780"
										},
										{
											"begin": 28801,
											"end": 28896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28794,
											"end": 28896,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28794,
											"end": 28896,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28913,
											"end": 29008,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "781"
										},
										{
											"begin": 29004,
											"end": 29007,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28995,
											"end": 29001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28913,
											"end": 29008,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 28913,
											"end": 29008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28913,
											"end": 29008,
											"name": "tag",
											"source": 19,
											"value": "781"
										},
										{
											"begin": 28913,
											"end": 29008,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28906,
											"end": 29008,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28906,
											"end": 29008,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 29025,
											"end": 29028,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 29018,
											"end": 29028,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 29018,
											"end": 29028,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28599,
											"end": 29034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"demo_erc721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addXP(uint256,uint256)": "5146ea0e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchMint(address,uint256[],string[])": "9caea80a",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"royaltyInfo(uint256)": "cef6d368",
							"royaltyPercentage()": "8a71bb2d",
							"safeMint(address,string,uint256,uint256)": "2923ce11",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokenXP(uint256)": "7aae3ccb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"}],\"name\":\"addXP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"uris\",\"type\":\"string[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"categoryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rarityLevel\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenXP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"demo_erc721.sol\":\"FancyNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"demo_erc721.sol\":{\"keccak256\":\"0x9d70a576577ba72b45903149b36d44b0412d33bef97fe0dfd947492113eb978c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8beb71f834bd158eafc65e57cd64c4e38c44f8cf6905b201b2d92a0250bdb62\",\"dweb:/ipfs/QmQUGCJLvQfUgQh8LE8vq3C1kkKeeXevzc5bAYDBMvC6u5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 369,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 371,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 375,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 379,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 383,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 389,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1537,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3153,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "royaltyPercentage",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3157,
								"contract": "demo_erc721.sol:FancyNFT",
								"label": "tokenXP",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1685
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1686,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1685,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1685,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1685
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1976
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1977,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							1976
						],
						"IERC2981": [
							171
						]
					},
					"id": 172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 172,
							"sourceUnit": 1977,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"476:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1976,
										"src": "476:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "476:7:2"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "194:259:2",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 171,
							"linearizedBaseContracts": [
								171,
								1976
							],
							"name": "IERC2981",
							"nameLocation": "464:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "490:231:2",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "735:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "764:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "756:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "789:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "781:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:58:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "836:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "828:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "854:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "846:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:41:2"
									},
									"scope": 171,
									"src": "726:143:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 172,
							"src": "454:417:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:765:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1976
						],
						"IERC4906": [
							195
						],
						"IERC721": [
							1462
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 152,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 174,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 200,
							"src": "172:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 176,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "180:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 179,
										"name": "IERC165",
										"nameLocations": [
											"279:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1976,
										"src": "279:7:3"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:3"
								},
								{
									"baseName": {
										"id": 181,
										"name": "IERC721",
										"nameLocations": [
											"288:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "288:7:3"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:3"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:3",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195,
								1462,
								1976
							],
							"name": "IERC4906",
							"nameLocation": "267:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:3",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 187,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "529:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:3"
									},
									"src": "508:39:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:3",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 194,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "796:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "818:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:3"
									},
									"src": "770:68:3"
								}
							],
							"scope": 196,
							"src": "257:583:3",
							"usedErrors": [],
							"usedEvents": [
								187,
								194,
								1361,
								1370,
								1379
							]
						}
					],
					"src": "107:734:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1462
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 1463,
							"src": "132:52:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							336
						],
						"IERC20Errors": [
							241
						],
						"IERC721Errors": [
							289
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 202,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:5",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 211,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "668:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "685:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:5"
									},
									"src": "621:80:5"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 216,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "889:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:5"
									},
									"src": "864:41:5"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 221,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:5"
									},
									"src": "1075:45:5"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:5",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 230,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1526:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:5"
									},
									"src": "1476:85:5"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 235,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:5"
									},
									"src": "1746:45:5"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 240,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:5"
									},
									"src": "1997:43:5"
								}
							],
							"scope": 337,
							"src": "278:1764:5",
							"usedErrors": [
								211,
								216,
								221,
								230,
								235,
								240
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:5",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 289,
							"linearizedBaseContracts": [
								289
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 247,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"src": "2440:40:5"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 252,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"src": "2623:46:5"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 261,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2996:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:5"
									},
									"src": "2969:75:5"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 266,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "3233:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:5"
									},
									"src": "3207:42:5"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 271,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:5"
									},
									"src": "3419:46:5"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 278,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3756:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3774:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:5"
									},
									"src": "3723:68:5"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 283,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4004:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:5"
									},
									"src": "3976:46:5"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 288,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "4258:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:5"
									},
									"src": "4230:46:5"
								}
							],
							"scope": 337,
							"src": "2186:2092:5",
							"usedErrors": [
								247,
								252,
								261,
								266,
								271,
								278,
								283,
								288
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:5",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 301,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4870:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:5"
									},
									"src": "4821:99:5"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 306,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "5110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:5"
									},
									"src": "5083:43:5"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 311,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5325:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:5"
									},
									"src": "5296:47:5"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 318,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5645:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:5"
									},
									"src": "5610:68:5"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 323,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "5892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:5"
									},
									"src": "5863:47:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 328,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "6147:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:5"
									},
									"src": "6118:47:5"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 335,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6488:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6507:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:5"
									},
									"src": "6456:73:5"
								}
							],
							"scope": 337,
							"src": "4424:2107:5",
							"usedErrors": [
								301,
								306,
								311,
								318,
								323,
								328,
								335
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1685
						],
						"ERC165": [
							1964
						],
						"ERC721": [
							1345
						],
						"IERC165": [
							1976
						],
						"IERC721": [
							1462
						],
						"IERC721Errors": [
							289
						],
						"IERC721Metadata": [
							1663
						],
						"IERC721Receiver": [
							1480
						],
						"Strings": [
							1940
						]
					},
					"id": 1346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1463,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 339,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1481,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 341,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1480,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1664,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 343,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1663,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1686,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 345,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1685,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1941,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 347,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1940,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 1965,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 349,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 350,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 337,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 289,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 355,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1685,
										"src": "804:7:6"
									},
									"id": 356,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 357,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1964,
										"src": "813:6:6"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 359,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "821:7:6"
									},
									"id": 360,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 361,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1663,
										"src": "830:15:6"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 289,
										"src": "847:13:6"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 354,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1345,
							"linearizedBaseContracts": [
								1345,
								289,
								1663,
								1462,
								1964,
								1976,
								1685
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 367,
									"libraryName": {
										"id": 365,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1940,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 368,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 371,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 370,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 375,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 374,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 372,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 379,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 378,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 376,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 377,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 382,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 380,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 381,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 388,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 384,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 387,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 386,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 402,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 406,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1345,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1963,
										1975
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 419,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1462,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1462_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1462_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 418,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1462",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 425,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1663_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1663_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 424,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1663",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 432,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 430,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1345_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1963,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 416,
												"id": 435,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 411,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1964,
												"src": "1637:6:6"
											},
											{
												"id": 412,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1976,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 408,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1345,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 446,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 452,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 451,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 457,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 460,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 462,
													"indexExpression": {
														"id": 461,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 463,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1345,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1395
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 472,
												"id": 476,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1345,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1648
									],
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 484,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 369,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 483,
												"id": 485,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1345,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1654
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 371,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1345,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1662
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 508,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 515,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 513,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 523,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 524,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1753,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 520,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 530,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1345,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 537,
												"id": 539,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1345,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1435
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 552,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1148,
															1214
														],
														"referencedDeclaration": 1148,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1345,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 564,
												"id": 572,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1345,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 583,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 582,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1345,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 600,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 602,
														"indexExpression": {
															"id": 601,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 604,
													"indexExpression": {
														"id": 603,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 605,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1345,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 618,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 624,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 623,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"arguments": [
														{
															"id": 635,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 637,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 641,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 642,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 646,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 647,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 649,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1345,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 663,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															697
														],
														"referencedDeclaration": 697,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1345,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 684,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 683,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 693,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 689,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1345,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 705,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 707,
													"indexExpression": {
														"id": 706,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 704,
												"id": 708,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1345,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 718,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 720,
													"indexExpression": {
														"id": 719,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 717,
												"id": 721,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1345,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 735,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 736,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 741,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 742,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 728,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 745,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 746,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 728,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 744,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 750,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 730,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 749,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 723,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 752,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 755,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 734,
												"id": 757,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1345,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 770,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 771,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 772,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 769,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 775,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 776,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 787,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 764,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 788,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 786,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 790,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 792,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 785,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 782,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 781,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 784,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1345,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 810,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 804,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 809,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 800,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1345,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 824,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"arguments": [
														{
															"id": 827,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 826,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 830,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 831,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 842,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 837,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 839,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 836,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 841,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 851,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 855,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 856,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 850,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1148,
																		1214
																	],
																	"referencedDeclaration": 1214,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 869,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 863,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 865,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 868,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 878,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 880,
																			"indexExpression": {
																				"id": 879,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 889,
														"indexExpression": {
															"id": 888,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 894,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 899,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 825,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 823,
												"id": 900,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1345,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [
														{
															"id": 928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 927,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 942,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1345,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 960,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															967,
															993
														],
														"referencedDeclaration": 993,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1345,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 983,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 989,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 982,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1345,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1002,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1019,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1022,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1345,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1037,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1042,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1048,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1085,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1051,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1053,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1063,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1073,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1074,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1083,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1082,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1077,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1078,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1033,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1079,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1076,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1081,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1084,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1069,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1068,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1071,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1345,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1096,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1104,
															1130
														],
														"referencedDeclaration": 1130,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1345,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1126,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1122,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1345,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1143,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1140,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1148,
															1214
														],
														"referencedDeclaration": 1214,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1345,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1160,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1161,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1169
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1169,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1205,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1168,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1173,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1171,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1170,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1174,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1175,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1180,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1181,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1185,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1186,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1184,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1195,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1194,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1191,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1190,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 283,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1193,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1196,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1204,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1203,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1198,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1199,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1200,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1197,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1370,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1202,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1207,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1209,
														"indexExpression": {
															"id": 1208,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1210,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1345,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1225,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1231,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1230,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1233,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1236,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1239,
															"indexExpression": {
																"id": 1237,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1240,
														"indexExpression": {
															"id": 1238,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1245,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1244,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1345,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1259,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [
														{
															"id": 1262,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1266,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1271,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1274,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1277,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1260,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1278,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1345,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1292,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1341,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1321,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1314,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1310,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1308,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1311,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1480,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1480_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1312,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1479,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1313,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1320,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1319,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1316,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1285,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1315,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 271,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1318,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1322,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1309,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1308,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1322,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1307,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1338,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1326,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1324,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1327,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1328,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1336,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1324,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1324,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1335,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1337,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1334,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1331,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1285,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1330,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 271,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1332,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1333,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1339,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1325,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1324,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1339,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1323,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1301,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1303,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1304,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1305,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1298,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1285,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1297,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1480_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1480",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1479,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1340,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1345,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1346,
							"src": "776:16926:6",
							"usedErrors": [
								247,
								252,
								261,
								266,
								271,
								278,
								283,
								288
							],
							"usedEvents": [
								1361,
								1370,
								1379
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1976
						],
						"IERC721": [
							1462
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1349,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1977,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1348,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1351,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1976,
										"src": "287:7:7"
									},
									"id": 1352,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1350,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1462,
							"linearizedBaseContracts": [
								1462,
								1976
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1361,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1370,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1462,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1462,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1462,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1462,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1462,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1462,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1462,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1462,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1462,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1463,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1361,
								1370,
								1379
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1480
						]
					},
					"id": 1481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1465,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1480,
							"linearizedBaseContracts": [
								1480
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1480,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1481,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1685
						],
						"ERC721": [
							1345
						],
						"ERC721Burnable": [
							1509
						]
					},
					"id": 1510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1482,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1510,
							"sourceUnit": 1346,
							"src": "152:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1483,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1345,
										"src": "160:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1510,
							"sourceUnit": 1686,
							"src": "190:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1485,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1685,
										"src": "198:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1488,
										"name": "Context",
										"nameLocations": [
											"372:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1685,
										"src": "372:7:9"
									},
									"id": 1489,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:9"
								},
								{
									"baseName": {
										"id": 1490,
										"name": "ERC721",
										"nameLocations": [
											"381:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "381:6:9"
									},
									"id": 1491,
									"nodeType": "InheritanceSpecifier",
									"src": "381:6:9"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1487,
								"nodeType": "StructuredDocumentation",
								"src": "243:92:9",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1509,
							"linearizedBaseContracts": [
								1509,
								1345,
								289,
								1663,
								1462,
								1964,
								1976,
								1685
							],
							"name": "ERC721Burnable",
							"nameLocation": "354:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "607:268:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "834:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "834:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "834:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "846:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1503,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "855:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1497,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "826:42:9"
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "394:162:9",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "570:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "583:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "575:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:17:9"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:9"
									},
									"scope": 1509,
									"src": "561:314:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1510,
							"src": "336:541:9",
							"usedErrors": [
								247,
								252,
								261,
								266,
								271,
								278,
								283,
								288
							],
							"usedEvents": [
								1361,
								1370,
								1379
							]
						}
					],
					"src": "126:752:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1345
						],
						"ERC721URIStorage": [
							1635
						],
						"IERC165": [
							1976
						],
						"IERC4906": [
							195
						],
						"Strings": [
							1940
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1511,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 1346,
							"src": "154:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1512,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1345,
										"src": "162:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 1941,
							"src": "192:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1514,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1940,
										"src": "200:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 196,
							"src": "244:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1516,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 195,
										"src": "252:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 152,
							"src": "303:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1518,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "311:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1521,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "469:8:10"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:10"
								},
								{
									"baseName": {
										"id": 1523,
										"name": "ERC721",
										"nameLocations": [
											"479:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "479:6:10"
									},
									"id": 1524,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:10"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1520,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:10",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1635,
							"linearizedBaseContracts": [
								1635,
								1345,
								289,
								1663,
								195,
								1462,
								1964,
								1976,
								1685
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1527,
									"libraryName": {
										"id": 1525,
										"name": "Strings",
										"nameLocations": [
											"498:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1940,
										"src": "498:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:10",
									"typeName": {
										"id": 1526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1533,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "706:65:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1528,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1531,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1529,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:10",
												"typeDescriptions": {}
											}
										},
										"id": 1532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1537,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "817:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1536,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:10",
										"keyType": {
											"id": 1534,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1535,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										437,
										1975
									],
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "1045:99:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1548,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "1062:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1549,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "1077:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1553,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "1125:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1551,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1635_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 437,
															"src": "1101:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1556,
												"nodeType": "Return",
												"src": "1055:82:10"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:10",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1544,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1542,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "1013:6:10"
											},
											{
												"id": 1543,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1976,
												"src": "1021:7:10"
											}
										],
										"src": "1004:25:10"
									},
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "964:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:10"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1039:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:10"
									},
									"scope": 1635,
									"src": "937:207:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										532
									],
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "1298:505:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1322:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1308:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:10"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "1341:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1571,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"baseExpression": {
														"id": 1573,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "1367:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1575,
													"indexExpression": {
														"id": 1574,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "1378:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:10"
											},
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "1396:18:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1577,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1579,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "1417:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1584,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "1506:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1582,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "1496:70:10",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "1525:41:10",
													"statements": [
														{
															"expression": {
																"id": 1589,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "1546:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1566,
															"id": 1590,
															"nodeType": "Return",
															"src": "1539:16:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1595,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "1671:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1593,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "1661:95:10",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "1694:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "1729:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1604,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "1735:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1600,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:10",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1566,
															"id": 1606,
															"nodeType": "Return",
															"src": "1708:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1611,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1788:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1609,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1635_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:10",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "1773:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1613,
												"nodeType": "Return",
												"src": "1766:30:10"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1563,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:10"
									},
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1228:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:10"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1283:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:10"
									},
									"scope": 1635,
									"src": "1210:593:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "2003:86:10",
										"statements": [
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1623,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "2013:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1625,
														"indexExpression": {
															"id": 1624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "2024:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1626,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "2035:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1630,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "2074:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1629,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "2059:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "EmitStatement",
												"src": "2054:28:10"
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:10",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1944:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1961:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:10"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:10"
									},
									"scope": 1635,
									"src": "1922:167:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1636,
							"src": "431:1660:10",
							"usedErrors": [
								247,
								252,
								261,
								266,
								271,
								278,
								283,
								288
							],
							"usedEvents": [
								187,
								194,
								1361,
								1370,
								1379
							]
						}
					],
					"src": "128:1964:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1462
						],
						"IERC721Metadata": [
							1663
						]
					},
					"id": 1664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1637,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 1463,
							"src": "153:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1638,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "161:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1641,
										"name": "IERC721",
										"nameLocations": [
											"357:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "357:7:11"
									},
									"id": 1642,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:11"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1663,
							"linearizedBaseContracts": [
								1663,
								1462,
								1976
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:11",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "473:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:11"
									},
									"scope": 1663,
									"src": "434:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:11",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:11"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "600:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:11"
									},
									"scope": 1663,
									"src": "559:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:11",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "734:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:11"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "774:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:11"
									},
									"scope": 1663,
									"src": "716:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1664,
							"src": "328:463:11",
							"usedErrors": [],
							"usedEvents": [
								1361,
								1370,
								1379
							]
						}
					],
					"src": "127:665:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1685
						]
					},
					"id": 1686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1666,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1685,
							"linearizedBaseContracts": [
								1685
							],
							"name": "Context",
							"nameLocation": "642:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "718:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1671,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1673,
												"nodeType": "Return",
												"src": "728:17:12"
											}
										]
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:12"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "709:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:12"
									},
									"scope": 1685,
									"src": "656:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "825:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1680,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1682,
												"nodeType": "Return",
												"src": "835:15:12"
											}
										]
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:12"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "809:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:12"
									},
									"scope": 1685,
									"src": "758:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1686,
							"src": "624:235:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3030
						],
						"SignedMath": [
							3135
						],
						"Strings": [
							1940
						]
					},
					"id": 1941,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1687,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1941,
							"sourceUnit": 3031,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1688,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3030,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1941,
							"sourceUnit": 3136,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1690,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3135,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1692,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1940,
							"linearizedBaseContracts": [
								1940
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1695,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1693,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1694,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1698,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1696,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1697,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1705,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1751,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1714
														],
														"declarations": [
															{
																"constant": false,
																"id": 1714,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1751,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1713,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1721,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1717,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1715,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3030,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3030_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2850,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1723
														],
														"declarations": [
															{
																"constant": false,
																"id": 1723,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1751,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1722,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1728,
														"initialValue": {
															"arguments": [
																{
																	"id": 1726,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1724,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1730
														],
														"declarations": [
															{
																"constant": false,
																"id": 1730,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1751,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1729,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1731,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1723,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1714,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1732,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1747,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1734,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1736,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1695,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1730,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1708,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1737,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1741,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1746,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1745,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1748,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1749,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1712,
														"id": 1750,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 1940,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1771,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3135,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3135_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3134,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1770,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1761,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1777,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1755,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 1940,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1797,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1791,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1782,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1789,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3030,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3030_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2972,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1787,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1799,
																	1882,
																	1902
																],
																"referencedDeclaration": 1882,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1786,
														"id": 1796,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 1940,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"id": 1811,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1802,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1814
												],
												"declarations": [
													{
														"constant": false,
														"id": 1814,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1813,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1823,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1818,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1815,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1824,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1826,
														"indexExpression": {
															"hexValue": "30",
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1830,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1832,
														"indexExpression": {
															"hexValue": "31",
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1864,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1850,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1852,
																	"indexExpression": {
																		"id": 1851,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1853,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1857,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1854,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1860,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1863,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1844,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1865,
												"initializationExpression": {
													"assignments": [
														1837
													],
													"declarations": [
														{
															"constant": false,
															"id": 1837,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1865,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1836,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1843,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1839,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1847,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1849,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1866,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1870,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1871,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1804,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1869,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1873,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1876,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1880,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 1940,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1895,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1885,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1893,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1891,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1898,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1890,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1799,
															1882,
															1902
														],
														"referencedDeclaration": 1882,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1889,
												"id": 1900,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 1940,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1914,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1912,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1919,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1917,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1926,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1924,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1923,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1932,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1930,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1929,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1937,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 1940,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1941,
							"src": "251:2847:13",
							"usedErrors": [
								1705
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1964
						],
						"IERC165": [
							1976
						]
					},
					"id": 1965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1942,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1944,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1965,
							"sourceUnit": 1977,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1943,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1976,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1946,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1976,
										"src": "687:7:14"
									},
									"id": 1947,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1945,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1964,
							"linearizedBaseContracts": [
								1964,
								1976
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1975
									],
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1955,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1957,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1976_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1976_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1956,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1976",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1954,
												"id": 1961,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1949,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 1964,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1965,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1976
						]
					},
					"id": 1977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1966,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1967,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1976,
							"linearizedBaseContracts": [
								1976
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 1976,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1977,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3030
						]
					},
					"id": 3031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1979,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3030,
							"linearizedBaseContracts": [
								3030
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1982,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1987,
									"members": [
										{
											"id": 1983,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 1984,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 1985,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 1986,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2017,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2000
														],
														"declarations": [
															{
																"constant": false,
																"id": 2000,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2017,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1999,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2004,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2001,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2002,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2005,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2006,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2012,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2010,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1998,
															"id": 2011,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2014,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2015,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1998,
														"id": 2016,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3030,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2046,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2045,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2031,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2032,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2038,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2036,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2030,
															"id": 2037,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2040,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2041,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2043,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2030,
														"id": 2044,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3030,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2087,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2066,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2058,
															"id": 2065,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2068
														],
														"declarations": [
															{
																"constant": false,
																"id": 2068,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2087,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2067,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2072,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2069,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2073,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2076,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2058,
															"id": 2081,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2084,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2085,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2058,
														"id": 2086,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3030,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2115,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2108,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2100,
															"id": 2107,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2110,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2092,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2111,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2113,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2100,
														"id": 2114,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2090,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3030,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2143,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2129,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2136,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2128,
															"id": 2135,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2138,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2139,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2141,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2128,
														"id": 2142,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3030,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2155,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2156,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2161,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3030,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2173,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2174,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2177,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2176,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2172,
												"id": 2179,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3030,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2184,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2192,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2195,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2184,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2196,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2198,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2190,
												"id": 2202,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3030,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2214,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2217,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2218,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2213,
															"id": 2220,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2223,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2231,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2236,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3030,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2362,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2251
														],
														"declarations": [
															{
																"constant": false,
																"id": 2251,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2362,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2250,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2255,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2252,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2253,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2257
														],
														"declarations": [
															{
																"constant": false,
																"id": 2257,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2362,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2258,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2243,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2259,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2260,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2268,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2267,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2263,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2264,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2245,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2249,
																	"id": 2266,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2269,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2270,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2276,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2275,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2272,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2274,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2278
														],
														"declarations": [
															{
																"constant": false,
																"id": 2278,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2362,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2279,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2245,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2243,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2280,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2362,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2289,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2283,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2285,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2245,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2287,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2245,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2245,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2251,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2290,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2291,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2293,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2296,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2298
														],
														"declarations": [
															{
																"constant": false,
																"id": 2298,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2362,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2305,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2300,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2245,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2302,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2306,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2308,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2309,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2313,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2314,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2316,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2317,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2321,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2322,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2324,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2325,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2329,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2330,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2332,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2333,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2337,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2338,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2340,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2341,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2345,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2346,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2348,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2349,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2355,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2356,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2359,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2360,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2249,
														"id": 2361,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3030,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2380
												],
												"declarations": [
													{
														"constant": false,
														"id": 2380,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2406,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2386,
												"initialValue": {
													"arguments": [
														{
															"id": 2382,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2383,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2384,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2381,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2364,
															2407
														],
														"referencedDeclaration": 2364,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2388,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1987",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1987",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2387,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1987_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2391,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2392,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2369,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2393,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2390,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2403,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2402,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2398,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2401,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2404,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2380,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2405,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2373,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2372,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3030,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2421,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2420,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2414,
															"id": 2419,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2423
												],
												"declarations": [
													{
														"constant": false,
														"id": 2423,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2518,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2432,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2426,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2425,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2686,
																			2721
																		],
																		"referencedDeclaration": 2686,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2430,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2517,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2434,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2435,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2436,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2439,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2443,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2444,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2445,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2446,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2447,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2454,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2455,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2456,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2457,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2458,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2465,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2466,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2467,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2469,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2476,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2478,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2480,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2487,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2499,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2500,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2423,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2410,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2509,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2511,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2512,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2513,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2423,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2510,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2414,
														"id": 2516,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3030,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2553,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2552,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2531
														],
														"declarations": [
															{
																"constant": false,
																"id": 2531,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2552,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2535,
														"initialValue": {
															"arguments": [
																{
																	"id": 2533,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2532,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2519,
																	2554
																],
																"referencedDeclaration": 2519,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2536,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2531,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2538,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2525,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2537,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3029,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1987_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2540,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2531,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2541,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2531,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2543,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2522,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2549,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2529,
														"id": 2551,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2523,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3030,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2563
												],
												"declarations": [
													{
														"constant": false,
														"id": 2563,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2685,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2565,
												"initialValue": {
													"hexValue": "30",
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2682,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2566,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2595,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2594,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2596,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2610,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2609,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2601,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2605,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2625,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2624,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2616,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2626,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2654,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2671,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2681,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2680,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2683,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2563,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2561,
												"id": 2684,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2555,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3030,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2720,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 2719,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2698
														],
														"declarations": [
															{
																"constant": false,
																"id": 2698,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2719,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2702,
														"initialValue": {
															"arguments": [
																{
																	"id": 2700,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2699,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2686,
																	2721
																],
																"referencedDeclaration": 2686,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2703,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2698,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2705,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2692,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2704,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3029,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1987_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2707,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2708,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2698,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2710,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2696,
														"id": 2718,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2690,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3030,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2849,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													2730
												],
												"declarations": [
													{
														"constant": false,
														"id": 2730,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2849,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2732,
												"initialValue": {
													"hexValue": "30",
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 2846,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2733,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2749,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 2748,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2750,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2755,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2767,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2783,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 2782,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2777,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2778,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2781,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2784,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2800,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 2799,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2789,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2795,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2798,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2801,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2817,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 2816,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2818,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2834,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 2833,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2823,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2828,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2835,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2724,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2845,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 2844,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2840,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2730,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2843,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2847,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2730,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2728,
												"id": 2848,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 2722,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3030,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 2883,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															2862
														],
														"declarations": [
															{
																"constant": false,
																"id": 2862,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2883,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2861,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2866,
														"initialValue": {
															"arguments": [
																{
																	"id": 2864,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2853,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2863,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2850,
																	2885
																],
																"referencedDeclaration": 2850,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2867,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2869,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2856,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2868,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3029,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1987_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2871,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2872,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2862,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2874,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2853,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2860,
														"id": 2882,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2851,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2854,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3030,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													2894
												],
												"declarations": [
													{
														"constant": false,
														"id": 2894,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2971,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2896,
												"initialValue": {
													"hexValue": "30",
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 2968,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2902,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2888,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2912,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2926,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 2925,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2888,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2920,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2927,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2941,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 2940,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2888,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2935,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2936,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2942,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2888,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2950,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2957,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2967,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 2966,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2962,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2965,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2969,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2894,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2892,
												"id": 2970,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 2886,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3030,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3008,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															2984
														],
														"declarations": [
															{
																"constant": false,
																"id": 2984,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3008,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2983,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2988,
														"initialValue": {
															"arguments": [
																{
																	"id": 2986,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2985,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2972,
																	3010
																],
																"referencedDeclaration": 2972,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2989,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2984,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2991,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2978,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1987",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2990,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3029,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1987_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2993,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2996,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2994,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2984,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2995,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2997,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2999,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2975,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2982,
														"id": 3007,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2973,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2976,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3030,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3028,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3021,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3014,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1987",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1987",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3019,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3018,
												"id": 3027,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1987",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3012,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 1987,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1987",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3030,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3031,
							"src": "203:14914:16",
							"usedErrors": [
								1982
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3135
						]
					},
					"id": 3136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3033,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3135,
							"linearizedBaseContracts": [
								3135
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3043,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3044,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3038,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3038,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3042,
												"id": 3049,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3034,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3037,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3040,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3135,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3068,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3061,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3062,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3065,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3064,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3054,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3060,
												"id": 3067,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3052,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3058,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3135,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3080
												],
												"declarations": [
													{
														"constant": false,
														"id": 3080,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3112,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3079,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3093,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3081,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3072,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3082,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3084,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3085,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3072,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3086,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3074,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3088,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3091,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3094,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3080,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3099,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3080,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3097,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3095,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3104,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3072,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3105,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3074,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3107,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3109,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3078,
												"id": 3111,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3070,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3071,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3073,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3076,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3135,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3133,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3132,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3123,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3116,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3127,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3116,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3126,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3116,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3120,
														"id": 3131,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3114,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3115,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3135,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3136,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"demo_erc721.sol": {
				"ast": {
					"absolutePath": "demo_erc721.sol",
					"exportedSymbols": {
						"Context": [
							1685
						],
						"ERC165": [
							1964
						],
						"ERC721": [
							1345
						],
						"ERC721Burnable": [
							1509
						],
						"ERC721URIStorage": [
							1635
						],
						"FancyNFT": [
							3345
						],
						"IERC165": [
							1976
						],
						"IERC2981": [
							171
						],
						"IERC4906": [
							195
						],
						"IERC721": [
							1462
						],
						"IERC721Errors": [
							289
						],
						"IERC721Metadata": [
							1663
						],
						"IERC721Receiver": [
							1480
						],
						"Ownable": [
							147
						],
						"Strings": [
							1940
						]
					},
					"id": 3346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"id": 3138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 1346,
							"src": "58:63:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 1636,
							"src": "122:84:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 3140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 1510,
							"src": "207:82:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"id": 3141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 148,
							"src": "290:58:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
							"file": "@openzeppelin/contracts@5.0.0/interfaces/IERC2981.sol",
							"id": 3142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 172,
							"src": "349:63:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3143,
										"name": "ERC721",
										"nameLocations": [
											"435:6:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "435:6:18"
									},
									"id": 3144,
									"nodeType": "InheritanceSpecifier",
									"src": "435:6:18"
								},
								{
									"baseName": {
										"id": 3145,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"443:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "443:16:18"
									},
									"id": 3146,
									"nodeType": "InheritanceSpecifier",
									"src": "443:16:18"
								},
								{
									"baseName": {
										"id": 3147,
										"name": "ERC721Burnable",
										"nameLocations": [
											"461:14:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1509,
										"src": "461:14:18"
									},
									"id": 3148,
									"nodeType": "InheritanceSpecifier",
									"src": "461:14:18"
								},
								{
									"baseName": {
										"id": 3149,
										"name": "Ownable",
										"nameLocations": [
											"477:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "477:7:18"
									},
									"id": 3150,
									"nodeType": "InheritanceSpecifier",
									"src": "477:7:18"
								}
							],
							"canonicalName": "FancyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3345,
							"linearizedBaseContracts": [
								3345,
								147,
								1509,
								1635,
								1345,
								289,
								1663,
								195,
								1462,
								1964,
								1976,
								1685
							],
							"name": "FancyNFT",
							"nameLocation": "423:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8a71bb2d",
									"id": 3153,
									"mutability": "mutable",
									"name": "royaltyPercentage",
									"nameLocation": "506:17:18",
									"nodeType": "VariableDeclaration",
									"scope": 3345,
									"src": "491:38:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 3152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "526:3:18",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7aae3ccb",
									"id": 3157,
									"mutability": "mutable",
									"name": "tokenXP",
									"nameLocation": "587:7:18",
									"nodeType": "VariableDeclaration",
									"scope": 3345,
									"src": "552:42:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3156,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "560:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "552:27:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3155,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "571:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "683:2:18",
										"statements": []
									},
									"id": 3170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "46616e63794e4654",
													"id": 3162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "642:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_650b2e47420458cc07a2b4a4b220692ec676d0320d1d3c096a806652052f85f3",
														"typeString": "literal_string \"FancyNFT\""
													},
													"value": "FancyNFT"
												},
												{
													"hexValue": "464e54",
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "654:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_57402b45cc9ae049691899a08a776a4615e6cfecf99e6118c968a238622d903f",
														"typeString": "literal_string \"FNT\""
													},
													"value": "FNT"
												}
											],
											"id": 3164,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3161,
												"name": "ERC721",
												"nameLocations": [
													"635:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "635:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "635:25:18"
										},
										{
											"arguments": [
												{
													"id": 3166,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3159,
													"src": "669:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3167,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3165,
												"name": "Ownable",
												"nameLocations": [
													"661:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "661:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "661:21:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "621:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "613:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:22:18"
									},
									"returnParameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:18"
									},
									"scope": 3345,
									"src": "601:84:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3200,
										"nodeType": "Block",
										"src": "798:143:18",
										"statements": [
											{
												"assignments": [
													3184
												],
												"declarations": [
													{
														"constant": false,
														"id": 3184,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "816:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3200,
														"src": "808:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "808:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3189,
												"initialValue": {
													"arguments": [
														{
															"id": 3186,
															"name": "categoryId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "842:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3187,
															"name": "rarityLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3178,
															"src": "854:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3185,
														"name": "generateTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "826:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:40:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "808:58:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3172,
															"src": "886:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "890:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3190,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															967,
															993
														],
														"referencedDeclaration": 967,
														"src": "876:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "876:22:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3194,
												"nodeType": "ExpressionStatement",
												"src": "876:22:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3196,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "921:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3197,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "930:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3195,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "908:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3199,
												"nodeType": "ExpressionStatement",
												"src": "908:26:18"
											}
										]
									},
									"functionSelector": "2923ce11",
									"id": 3201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3180,
												"name": "onlyOwner",
												"nameLocations": [
													"788:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "788:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "788:9:18"
										}
									],
									"name": "safeMint",
									"nameLocation": "700:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "717:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "709:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "735:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "721:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "721:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "748:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "740:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "rarityLevel",
												"nameLocation": "768:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "760:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:72:18"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:18"
									},
									"scope": 3345,
									"src": "691:250:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										532,
										1615
									],
									"body": {
										"id": 3216,
										"nodeType": "Block",
										"src": "1120:47:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3213,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3203,
															"src": "1152:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3211,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1137:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FancyNFT_$3345_$",
																"typeString": "type(contract super FancyNFT)"
															}
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1143:8:18",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1615,
														"src": "1137:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:23:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3210,
												"id": 3215,
												"nodeType": "Return",
												"src": "1130:30:18"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1023:8:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3207,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3205,
												"name": "ERC721",
												"nameLocations": [
													"1070:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "1070:6:18"
											},
											{
												"id": 3206,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1078:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1635,
												"src": "1078:16:18"
											}
										],
										"src": "1061:34:18"
									},
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1040:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1032:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:17:18"
									},
									"returnParameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1105:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1105:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:15:18"
									},
									"scope": 3345,
									"src": "1014:153:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										437,
										1558
									],
									"body": {
										"id": 3232,
										"nodeType": "Block",
										"src": "1282:60:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3229,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "1323:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3227,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1299:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FancyNFT_$3345_$",
																"typeString": "type(contract super FancyNFT)"
															}
														},
														"id": 3228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1305:17:18",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1558,
														"src": "1299:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:36:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3226,
												"id": 3231,
												"nodeType": "Return",
												"src": "1292:43:18"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1182:17:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3223,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3221,
												"name": "ERC721",
												"nameLocations": [
													"1241:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "1241:6:18"
											},
											{
												"id": 3222,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1249:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1635,
												"src": "1249:16:18"
											}
										],
										"src": "1232:34:18"
									},
									"parameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1207:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3233,
												"src": "1200:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3218,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1200:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:20:18"
									},
									"returnParameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3233,
												"src": "1276:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1276:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:6:18"
									},
									"scope": 3345,
									"src": "1173:169:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3252,
										"nodeType": "Block",
										"src": "1542:74:18",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3242,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1560:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1560:7:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3244,
																			"name": "salePrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "1570:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3245,
																			"name": "royaltyPercentage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3153,
																			"src": "1582:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1570:29:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1569:31:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "1569:39:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3250,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1559:50:18",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 3241,
												"id": 3251,
												"nodeType": "Return",
												"src": "1552:57:18"
											}
										]
									},
									"functionSelector": "cef6d368",
									"id": 3253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "1447:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "1467:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "1459:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:19:18"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1509:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "1501:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "1527:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "1519:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:41:18"
									},
									"scope": 3345,
									"src": "1438:178:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3268,
										"nodeType": "Block",
										"src": "1687:39:18",
										"statements": [
											{
												"expression": {
													"id": 3266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3262,
															"name": "tokenXP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3157,
															"src": "1697:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3264,
														"indexExpression": {
															"id": 3263,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3255,
															"src": "1705:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1697:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3265,
														"name": "xp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "1717:2:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1697:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3267,
												"nodeType": "ExpressionStatement",
												"src": "1697:22:18"
											}
										]
									},
									"functionSelector": "5146ea0e",
									"id": 3269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3259,
												"name": "onlyOwner",
												"nameLocations": [
													"1677:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1677:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1677:9:18"
										}
									],
									"name": "addXP",
									"nameLocation": "1635:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1649:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3269,
												"src": "1641:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "xp",
												"nameLocation": "1666:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3269,
												"src": "1658:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:29:18"
									},
									"returnParameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:18"
									},
									"scope": 3345,
									"src": "1626:100:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3320,
										"nodeType": "Block",
										"src": "1998:235:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3283,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3274,
																	"src": "2016:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 3284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2025:6:18",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2016:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3285,
																	"name": "uris",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3277,
																	"src": "2035:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 3286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2040:6:18",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2035:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2016:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 3282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2008:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:64:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3290,
												"nodeType": "ExpressionStatement",
												"src": "2008:64:18"
											},
											{
												"body": {
													"id": 3318,
													"nodeType": "Block",
													"src": "2128:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3303,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3271,
																		"src": "2152:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3304,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "2156:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 3306,
																		"indexExpression": {
																			"id": 3305,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3292,
																			"src": "2165:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2156:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3302,
																	"name": "_safeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		967,
																		993
																	],
																	"referencedDeclaration": 967,
																	"src": "2142:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2142:26:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3308,
															"nodeType": "ExpressionStatement",
															"src": "2142:26:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3310,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "2195:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 3312,
																		"indexExpression": {
																			"id": 3311,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3292,
																			"src": "2204:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2195:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3313,
																			"name": "uris",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3277,
																			"src": "2208:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 3315,
																		"indexExpression": {
																			"id": 3314,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3292,
																			"src": "2213:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2208:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3309,
																	"name": "_setTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "2182:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 3316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2182:34:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3317,
															"nodeType": "ExpressionStatement",
															"src": "2182:34:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3295,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "2102:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3296,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3274,
															"src": "2106:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 3297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2115:6:18",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2106:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2102:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3319,
												"initializationExpression": {
													"assignments": [
														3292
													],
													"declarations": [
														{
															"constant": false,
															"id": 3292,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2095:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 3319,
															"src": "2087:9:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3291,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2087:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3294,
													"initialValue": {
														"hexValue": "30",
														"id": 3293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2099:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2087:13:18"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2123:3:18",
														"subExpression": {
															"id": 3299,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "2123:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3301,
													"nodeType": "ExpressionStatement",
													"src": "2123:3:18"
												},
												"nodeType": "ForStatement",
												"src": "2082:145:18"
											}
										]
									},
									"functionSelector": "9caea80a",
									"id": 3321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3279,
												"name": "onlyOwner",
												"nameLocations": [
													"1988:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1988:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1988:9:18"
										}
									],
									"name": "batchMint",
									"nameLocation": "1910:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1928:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "1920:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1949:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "1932:25:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3272,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1932:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3273,
													"nodeType": "ArrayTypeName",
													"src": "1932:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "uris",
												"nameLocation": "1975:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "1959:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3275,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1959:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3276,
													"nodeType": "ArrayTypeName",
													"src": "1959:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:61:18"
									},
									"returnParameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:18"
									},
									"scope": 3345,
									"src": "1901:332:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3343,
										"nodeType": "Block",
										"src": "2503:94:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3335,
																			"name": "categoryId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3323,
																			"src": "2555:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3336,
																			"name": "rarityLevel",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "2567:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 3337,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2580:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2584:3:18",
																			"memberName": "sig",
																			"nodeType": "MemberAccess",
																			"src": "2580:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"expression": {
																			"id": 3333,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2538:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2542:12:18",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "2538:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2538:50:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3332,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2528:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2528:61:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2520:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2520:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2520:70:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3329,
												"id": 3342,
												"nodeType": "Return",
												"src": "2513:77:18"
											}
										]
									},
									"id": 3344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateTokenId",
									"nameLocation": "2414:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3323,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "2438:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "2430:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "rarityLevel",
												"nameLocation": "2458:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "2450:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:41:18"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "2494:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:9:18"
									},
									"scope": 3345,
									"src": "2405:192:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3346,
							"src": "414:2185:18",
							"usedErrors": [
								13,
								18,
								247,
								252,
								261,
								266,
								271,
								278,
								283,
								288
							],
							"usedEvents": [
								24,
								187,
								194,
								1361,
								1370,
								1379
							]
						}
					],
					"src": "32:2568:18"
				},
				"id": 18
			}
		}
	}
}